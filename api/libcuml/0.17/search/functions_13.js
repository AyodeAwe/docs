var searchData=
[
  ['temporarymemory_1696',['TemporaryMemory',['../structTemporaryMemory.html#af5dce4b1c20df8fc9de70c71ce8d3733',1,'TemporaryMemory::TemporaryMemory(const std::shared_ptr&lt; MLCommon::deviceAllocator &gt; device_allocator_in, const std::shared_ptr&lt; MLCommon::hostAllocator &gt; host_allocator_in, const cudaStream_t stream_in, int N, int Ncols, int n_unique, const ML::DecisionTree::DecisionTreeParams &amp;tree_params)'],['../structTemporaryMemory.html#a4f0a196b56eb52b4094eca2b973d8c65',1,'TemporaryMemory::TemporaryMemory(const raft::handle_t &amp;handle, cudaStream_t stream_in, int N, int Ncols, int n_unique, const ML::DecisionTree::DecisionTreeParams &amp;tree_params)']]],
  ['tensor_1697',['Tensor',['../classML_1_1Tensor.html#a7935faa06b479cd2785bf92699e5b002',1,'ML::Tensor::Tensor(DataPtrT data, const std::vector&lt; IndexT &gt; &amp;sizes)'],['../classML_1_1Tensor.html#a79a811574e471adc8e363c8aa20f8961',1,'ML::Tensor::Tensor(const std::vector&lt; IndexT &gt; &amp;sizes, std::shared_ptr&lt; MLCommon::deviceAllocator &gt; allocator, cudaStream_t stream)']]],
  ['threaddiffsquaredadd_1698',['ThreadDiffSquaredAdd',['../structMLCommon_1_1LinAlg_1_1ThreadDiffSquaredAdd.html#a136d113628ae78a3a1983dabf050cd7c',1,'MLCommon::LinAlg::ThreadDiffSquaredAdd']]],
  ['threadl1normadd_1699',['ThreadL1NormAdd',['../structMLCommon_1_1LinAlg_1_1ThreadL1NormAdd.html#ab9d5e00e82ed6aa0d435f5646f8b0d6f',1,'MLCommon::LinAlg::ThreadL1NormAdd']]],
  ['thrust_5fexec_5fpolicy_1700',['thrust_exec_policy',['../namespaceML.html#af0f446810d4972e9bee95fca756cb958',1,'ML']]],
  ['thrustallocatoradapter_1701',['thrustAllocatorAdapter',['../classML_1_1thrustAllocatorAdapter.html#aa1d2bbdf62e5460839867952031e1a2c',1,'ML::thrustAllocatorAdapter::thrustAllocatorAdapter()=delete'],['../classML_1_1thrustAllocatorAdapter.html#a16581eaf4641c15365ea6a5c9a6aa582',1,'ML::thrustAllocatorAdapter::thrustAllocatorAdapter(std::shared_ptr&lt; deviceAllocator &gt; allocator, cudaStream_t stream)']]],
  ['timercpu_1702',['TimerCPU',['../classMLCommon_1_1TimerCPU.html#a883c63731510ccc7011f1719bd1d3fb2',1,'MLCommon::TimerCPU']]],
  ['transform_1703',['transform',['../classML_1_1UMAP__API.html#aeff97314ad23f73839fdd07672f2aad2',1,'ML::UMAP_API::transform()'],['../namespaceML_1_1kmeans.html#ac35ac9be6cc4fb64dae7d9382f0610af',1,'ML::kmeans::transform(const raft::handle_t &amp;handle, const KMeansParams &amp;params, const float *centroids, const float *X, int n_samples, int n_features, int metric, float *X_new)'],['../namespaceML_1_1kmeans.html#acfc75914bd1ebe86192a25b4e7cd366e',1,'ML::kmeans::transform(const raft::handle_t &amp;handle, const KMeansParams &amp;params, const double *centroids, const double *X, int n_samples, int n_features, int metric, double *X_new)'],['../namespaceML_1_1PCA_1_1opg.html#ac9945527be46f06aca6fa672178881e3',1,'ML::PCA::opg::transform(raft::handle_t &amp;handle, MLCommon::Matrix::RankSizePair **rank_sizes, size_t n_parts, MLCommon::Matrix::Data&lt; float &gt; **input, float *components, MLCommon::Matrix::Data&lt; float &gt; **trans_input, float *singular_vals, float *mu, paramsPCAMG prms, bool verbose)'],['../namespaceML_1_1PCA_1_1opg.html#ab5c89f723f89cda7d9318b437e3417f9',1,'ML::PCA::opg::transform(raft::handle_t &amp;handle, MLCommon::Matrix::RankSizePair **rank_sizes, size_t n_parts, MLCommon::Matrix::Data&lt; double &gt; **input, double *components, MLCommon::Matrix::Data&lt; double &gt; **trans_input, double *singular_vals, double *mu, paramsPCAMG prms, bool verbose)'],['../namespaceML_1_1TSVD_1_1opg.html#a9aa3cd72dc7b27b261fb17c81d75fcdc',1,'ML::TSVD::opg::transform(raft::handle_t &amp;handle, MLCommon::Matrix::RankSizePair **rank_sizes, size_t n_parts, MLCommon::Matrix::Data&lt; float &gt; **input, float *components, MLCommon::Matrix::Data&lt; float &gt; **trans_input, paramsTSVD prms, bool verbose)'],['../namespaceML_1_1TSVD_1_1opg.html#a645e14eb8a3e6b668a16b701c7848bec',1,'ML::TSVD::opg::transform(raft::handle_t &amp;handle, MLCommon::Matrix::RankSizePair **rank_sizes, size_t n_parts, MLCommon::Matrix::Data&lt; double &gt; **input, double *components, MLCommon::Matrix::Data&lt; double &gt; **trans_input, paramsTSVD prms, bool verbose)'],['../namespaceML.html#a64dffa221047b003fed4212fa19e6c86',1,'ML::transform()']]],
  ['trustworthiness_5fscore_1704',['trustworthiness_score',['../namespaceML_1_1Metrics.html#a307b2374359f1fb909cd1151fd11acef',1,'ML::Metrics']]],
  ['tsne_5ffit_1705',['TSNE_fit',['../namespaceML.html#a0490fb8318421675f8f18cde8fb986a2',1,'ML']]],
  ['tsvdfit_1706',['tsvdFit',['../namespaceML.html#a2a071bdcbc710b1a4ca88efc02fd2489',1,'ML::tsvdFit(raft::handle_t &amp;handle, float *input, float *components, float *singular_vals, const paramsTSVD &amp;prms)'],['../namespaceML.html#add33f23b1a15823449837dc884b13ddd',1,'ML::tsvdFit(raft::handle_t &amp;handle, double *input, double *components, double *singular_vals, const paramsTSVD &amp;prms)']]],
  ['tsvdfittransform_1707',['tsvdFitTransform',['../namespaceML.html#afba20c39f0790075843e9236fd043ca1',1,'ML::tsvdFitTransform(raft::handle_t &amp;handle, float *input, float *trans_input, float *components, float *explained_var, float *explained_var_ratio, float *singular_vals, const paramsTSVD &amp;prms)'],['../namespaceML.html#ae1a46cc3b471efc453be9e8fbecba363',1,'ML::tsvdFitTransform(raft::handle_t &amp;handle, double *input, double *trans_input, double *components, double *explained_var, double *explained_var_ratio, double *singular_vals, const paramsTSVD &amp;prms)']]],
  ['tsvdinversetransform_1708',['tsvdInverseTransform',['../namespaceML.html#ac335d131520793dcf0831d753e1c7ab2',1,'ML::tsvdInverseTransform(raft::handle_t &amp;handle, float *trans_input, float *components, float *input, const paramsTSVD &amp;prms)'],['../namespaceML.html#ae2faa9e0c83e9270369e866281802624',1,'ML::tsvdInverseTransform(raft::handle_t &amp;handle, double *trans_input, double *components, double *input, const paramsTSVD &amp;prms)']]],
  ['tsvdtransform_1709',['tsvdTransform',['../namespaceML.html#a1a8f7fa23231a10eb02ea2a3d4923335',1,'ML::tsvdTransform(raft::handle_t &amp;handle, float *input, float *components, float *trans_input, const paramsTSVD &amp;prms)'],['../namespaceML.html#a83f6113e72b200d0a4bef2759285a6ca',1,'ML::tsvdTransform(raft::handle_t &amp;handle, double *input, double *components, double *trans_input, const paramsTSVD &amp;prms)']]]
];
