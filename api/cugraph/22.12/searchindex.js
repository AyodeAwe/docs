Search.setIndex({"docnames": ["api_docs/api/cugraph.BiPartiteGraph", "api_docs/api/cugraph.Graph", "api_docs/api/cugraph.Graph.add_internal_vertex_id", "api_docs/api/cugraph.Graph.add_nodes_from", "api_docs/api/cugraph.Graph.clear", "api_docs/api/cugraph.Graph.from_cudf_adjlist", "api_docs/api/cugraph.Graph.from_cudf_edgelist", "api_docs/api/cugraph.Graph.from_dask_cudf_edgelist", "api_docs/api/cugraph.Graph.from_numpy_array", "api_docs/api/cugraph.Graph.from_numpy_matrix", "api_docs/api/cugraph.Graph.from_pandas_adjacency", "api_docs/api/cugraph.Graph.from_pandas_edgelist", "api_docs/api/cugraph.Graph.has_isolated_vertices", "api_docs/api/cugraph.Graph.is_bipartite", "api_docs/api/cugraph.Graph.is_directed", "api_docs/api/cugraph.Graph.is_multigraph", "api_docs/api/cugraph.Graph.is_multipartite", "api_docs/api/cugraph.Graph.is_renumbered", "api_docs/api/cugraph.Graph.is_weighted", "api_docs/api/cugraph.Graph.lookup_internal_vertex_id", "api_docs/api/cugraph.Graph.to_directed", "api_docs/api/cugraph.Graph.to_undirected", "api_docs/api/cugraph.Graph.unrenumber", "api_docs/api/cugraph.MultiGraph", "api_docs/api/cugraph.analyzeClustering_edge_cut", "api_docs/api/cugraph.analyzeClustering_modularity", "api_docs/api/cugraph.analyzeClustering_ratio_cut", "api_docs/api/cugraph.batched_ego_graphs", "api_docs/api/cugraph.betweenness_centrality", "api_docs/api/cugraph.bfs", "api_docs/api/cugraph.bfs_edges", "api_docs/api/cugraph.centrality.eigenvector_centrality", "api_docs/api/cugraph.connected_components", "api_docs/api/cugraph.core_number", "api_docs/api/cugraph.dask.centrality.eigenvector_centrality.eigenvector_centrality", "api_docs/api/cugraph.dask.centrality.katz_centrality.katz_centrality", "api_docs/api/cugraph.dask.common.read_utils.get_chunksize", "api_docs/api/cugraph.dask.comms.comms.destroy", "api_docs/api/cugraph.dask.comms.comms.get_2D_partition", "api_docs/api/cugraph.dask.comms.comms.get_comms", "api_docs/api/cugraph.dask.comms.comms.get_default_handle", "api_docs/api/cugraph.dask.comms.comms.get_handle", "api_docs/api/cugraph.dask.comms.comms.get_session_id", "api_docs/api/cugraph.dask.comms.comms.get_worker_id", "api_docs/api/cugraph.dask.comms.comms.get_workers", "api_docs/api/cugraph.dask.comms.comms.initialize", "api_docs/api/cugraph.dask.comms.comms.is_initialized", "api_docs/api/cugraph.dask.community.louvain.louvain", "api_docs/api/cugraph.dask.components.connectivity.weakly_connected_components", "api_docs/api/cugraph.dask.link_analysis.hits.hits", "api_docs/api/cugraph.dask.link_analysis.pagerank.pagerank", "api_docs/api/cugraph.dask.traversal.bfs.bfs", "api_docs/api/cugraph.dask.traversal.sssp.sssp", "api_docs/api/cugraph.degree_centrality", "api_docs/api/cugraph.dense_hungarian", "api_docs/api/cugraph.ecg", "api_docs/api/cugraph.edge_betweenness_centrality", "api_docs/api/cugraph.ego_graph", "api_docs/api/cugraph.filter_unreachable", "api_docs/api/cugraph.force_atlas2", "api_docs/api/cugraph.from_adjlist", "api_docs/api/cugraph.from_cudf_edgelist", "api_docs/api/cugraph.from_edgelist", "api_docs/api/cugraph.from_numpy_array", "api_docs/api/cugraph.from_numpy_matrix", "api_docs/api/cugraph.from_pandas_adjacency", "api_docs/api/cugraph.from_pandas_edgelist", "api_docs/api/cugraph.generators.rmat", "api_docs/api/cugraph.hits", "api_docs/api/cugraph.hungarian", "api_docs/api/cugraph.hypergraph", "api_docs/api/cugraph.jaccard", "api_docs/api/cugraph.jaccard_coefficient", "api_docs/api/cugraph.jaccard_w", "api_docs/api/cugraph.k_core", "api_docs/api/cugraph.k_truss", "api_docs/api/cugraph.katz_centrality", "api_docs/api/cugraph.ktruss_subgraph", "api_docs/api/cugraph.leiden", "api_docs/api/cugraph.louvain", "api_docs/api/cugraph.node2vec", "api_docs/api/cugraph.overlap", "api_docs/api/cugraph.overlap_coefficient", "api_docs/api/cugraph.overlap_w", "api_docs/api/cugraph.pagerank", "api_docs/api/cugraph.random_walks", "api_docs/api/cugraph.shortest_path", "api_docs/api/cugraph.shortest_path_length", "api_docs/api/cugraph.sorensen", "api_docs/api/cugraph.sorensen_coefficient", "api_docs/api/cugraph.sorensen_w", "api_docs/api/cugraph.spectralBalancedCutClustering", "api_docs/api/cugraph.spectralModularityMaximizationClustering", "api_docs/api/cugraph.sssp", "api_docs/api/cugraph.strongly_connected_components", "api_docs/api/cugraph.structure.NumberMap", "api_docs/api/cugraph.structure.NumberMap.MultiGPU", "api_docs/api/cugraph.structure.NumberMap.SingleGPU", "api_docs/api/cugraph.structure.NumberMap.add_internal_vertex_id", "api_docs/api/cugraph.structure.NumberMap.compute_vals", "api_docs/api/cugraph.structure.NumberMap.compute_vals_types", "api_docs/api/cugraph.structure.NumberMap.from_internal_vertex_id", "api_docs/api/cugraph.structure.NumberMap.generate_unused_column_name", "api_docs/api/cugraph.structure.NumberMap.renumber", "api_docs/api/cugraph.structure.NumberMap.renumber_and_segment", "api_docs/api/cugraph.structure.NumberMap.set_renumbered_col_names", "api_docs/api/cugraph.structure.NumberMap.to_internal_vertex_id", "api_docs/api/cugraph.structure.NumberMap.unrenumber", "api_docs/api/cugraph.structure.NumberMap.vertex_column_size", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.degree", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.degrees", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.delete_adj_list", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.delete_edge_list", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.edges", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.enable_batch", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.get_two_hop_neighbors", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.has_edge", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.has_node", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.has_self_loop", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.in_degree", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.neighbors", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.nodes", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.number_of_edges", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.number_of_nodes", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.number_of_vertices", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.out_degree", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.vertex_column_size", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.view_adj_list", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.view_edge_list", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.view_transposed_adj_list", "api_docs/api/cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph", "api_docs/api/cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.add_edge_data", "api_docs/api/cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.add_vertex_data", "api_docs/api/cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.annotate_dataframe", "api_docs/api/cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.edge_props_to_graph", "api_docs/api/cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.extract_subgraph", "api_docs/api/cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.get_edge_data", "api_docs/api/cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.get_num_edges", "api_docs/api/cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.get_num_vertices", "api_docs/api/cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.get_vertex_data", "api_docs/api/cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.get_vertices", "api_docs/api/cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.has_duplicate_edges", "api_docs/api/cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.is_multigraph", "api_docs/api/cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.renumber_edges_by_type", "api_docs/api/cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.renumber_vertices_by_type", "api_docs/api/cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.select_edges", "api_docs/api/cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.select_vertices", "api_docs/api/cugraph.structure.property_graph.EXPERIMENTAL__PropertySelection", "api_docs/api/cugraph.structure.shuffle", "api_docs/api/cugraph.subgraph", "api_docs/api/cugraph.symmetrize", "api_docs/api/cugraph.symmetrize_ddf", "api_docs/api/cugraph.symmetrize_df", "api_docs/api/cugraph.to_numpy_array", "api_docs/api/cugraph.to_numpy_matrix", "api_docs/api/cugraph.to_pandas_adjacency", "api_docs/api/cugraph.to_pandas_edgelist", "api_docs/api/cugraph.tree.minimum_spanning_tree.maximum_spanning_tree", "api_docs/api/cugraph.tree.minimum_spanning_tree.minimum_spanning_tree", "api_docs/api/cugraph.triangle_count", "api_docs/api/cugraph.uniform_neighbor_sample", "api_docs/api/cugraph.weakly_connected_components", "api_docs/api/pylibcugraph.bfs", "api_docs/api/pylibcugraph.eigenvector_centrality", "api_docs/api/pylibcugraph.hits", "api_docs/api/pylibcugraph.katz_centrality", "api_docs/api/pylibcugraph.node2vec", "api_docs/api/pylibcugraph.pagerank", "api_docs/api/pylibcugraph.sssp", "api_docs/api/pylibcugraph.strongly_connected_components", "api_docs/api/pylibcugraph.weakly_connected_components", "api_docs/centrality", "api_docs/community", "api_docs/components", "api_docs/cores", "api_docs/dask-cugraph", "api_docs/generator", "api_docs/graph_implementation", "api_docs/helper_functions", "api_docs/index", "api_docs/layout", "api_docs/linear_assignment", "api_docs/link_analysis", "api_docs/link_prediction", "api_docs/property_graph", "api_docs/pylibcugraph", "api_docs/sampling", "api_docs/structure", "api_docs/traversal", "api_docs/tree", "basics/cugraph_blogs", "basics/cugraph_cascading", "basics/cugraph_intro", "basics/cugraph_ref", "basics/index", "basics/nx_transition", "index"], "filenames": ["api_docs/api/cugraph.BiPartiteGraph.rst", "api_docs/api/cugraph.Graph.rst", "api_docs/api/cugraph.Graph.add_internal_vertex_id.rst", "api_docs/api/cugraph.Graph.add_nodes_from.rst", "api_docs/api/cugraph.Graph.clear.rst", "api_docs/api/cugraph.Graph.from_cudf_adjlist.rst", "api_docs/api/cugraph.Graph.from_cudf_edgelist.rst", "api_docs/api/cugraph.Graph.from_dask_cudf_edgelist.rst", "api_docs/api/cugraph.Graph.from_numpy_array.rst", "api_docs/api/cugraph.Graph.from_numpy_matrix.rst", "api_docs/api/cugraph.Graph.from_pandas_adjacency.rst", "api_docs/api/cugraph.Graph.from_pandas_edgelist.rst", "api_docs/api/cugraph.Graph.has_isolated_vertices.rst", "api_docs/api/cugraph.Graph.is_bipartite.rst", "api_docs/api/cugraph.Graph.is_directed.rst", "api_docs/api/cugraph.Graph.is_multigraph.rst", "api_docs/api/cugraph.Graph.is_multipartite.rst", "api_docs/api/cugraph.Graph.is_renumbered.rst", "api_docs/api/cugraph.Graph.is_weighted.rst", "api_docs/api/cugraph.Graph.lookup_internal_vertex_id.rst", "api_docs/api/cugraph.Graph.to_directed.rst", "api_docs/api/cugraph.Graph.to_undirected.rst", "api_docs/api/cugraph.Graph.unrenumber.rst", "api_docs/api/cugraph.MultiGraph.rst", "api_docs/api/cugraph.analyzeClustering_edge_cut.rst", "api_docs/api/cugraph.analyzeClustering_modularity.rst", "api_docs/api/cugraph.analyzeClustering_ratio_cut.rst", "api_docs/api/cugraph.batched_ego_graphs.rst", "api_docs/api/cugraph.betweenness_centrality.rst", "api_docs/api/cugraph.bfs.rst", "api_docs/api/cugraph.bfs_edges.rst", "api_docs/api/cugraph.centrality.eigenvector_centrality.rst", "api_docs/api/cugraph.connected_components.rst", "api_docs/api/cugraph.core_number.rst", "api_docs/api/cugraph.dask.centrality.eigenvector_centrality.eigenvector_centrality.rst", "api_docs/api/cugraph.dask.centrality.katz_centrality.katz_centrality.rst", "api_docs/api/cugraph.dask.common.read_utils.get_chunksize.rst", "api_docs/api/cugraph.dask.comms.comms.destroy.rst", "api_docs/api/cugraph.dask.comms.comms.get_2D_partition.rst", "api_docs/api/cugraph.dask.comms.comms.get_comms.rst", "api_docs/api/cugraph.dask.comms.comms.get_default_handle.rst", "api_docs/api/cugraph.dask.comms.comms.get_handle.rst", "api_docs/api/cugraph.dask.comms.comms.get_session_id.rst", "api_docs/api/cugraph.dask.comms.comms.get_worker_id.rst", "api_docs/api/cugraph.dask.comms.comms.get_workers.rst", "api_docs/api/cugraph.dask.comms.comms.initialize.rst", "api_docs/api/cugraph.dask.comms.comms.is_initialized.rst", "api_docs/api/cugraph.dask.community.louvain.louvain.rst", "api_docs/api/cugraph.dask.components.connectivity.weakly_connected_components.rst", "api_docs/api/cugraph.dask.link_analysis.hits.hits.rst", "api_docs/api/cugraph.dask.link_analysis.pagerank.pagerank.rst", "api_docs/api/cugraph.dask.traversal.bfs.bfs.rst", "api_docs/api/cugraph.dask.traversal.sssp.sssp.rst", "api_docs/api/cugraph.degree_centrality.rst", "api_docs/api/cugraph.dense_hungarian.rst", "api_docs/api/cugraph.ecg.rst", "api_docs/api/cugraph.edge_betweenness_centrality.rst", "api_docs/api/cugraph.ego_graph.rst", "api_docs/api/cugraph.filter_unreachable.rst", "api_docs/api/cugraph.force_atlas2.rst", "api_docs/api/cugraph.from_adjlist.rst", "api_docs/api/cugraph.from_cudf_edgelist.rst", "api_docs/api/cugraph.from_edgelist.rst", "api_docs/api/cugraph.from_numpy_array.rst", "api_docs/api/cugraph.from_numpy_matrix.rst", "api_docs/api/cugraph.from_pandas_adjacency.rst", "api_docs/api/cugraph.from_pandas_edgelist.rst", "api_docs/api/cugraph.generators.rmat.rst", "api_docs/api/cugraph.hits.rst", "api_docs/api/cugraph.hungarian.rst", "api_docs/api/cugraph.hypergraph.rst", "api_docs/api/cugraph.jaccard.rst", "api_docs/api/cugraph.jaccard_coefficient.rst", "api_docs/api/cugraph.jaccard_w.rst", "api_docs/api/cugraph.k_core.rst", "api_docs/api/cugraph.k_truss.rst", "api_docs/api/cugraph.katz_centrality.rst", "api_docs/api/cugraph.ktruss_subgraph.rst", "api_docs/api/cugraph.leiden.rst", "api_docs/api/cugraph.louvain.rst", "api_docs/api/cugraph.node2vec.rst", "api_docs/api/cugraph.overlap.rst", "api_docs/api/cugraph.overlap_coefficient.rst", "api_docs/api/cugraph.overlap_w.rst", "api_docs/api/cugraph.pagerank.rst", "api_docs/api/cugraph.random_walks.rst", "api_docs/api/cugraph.shortest_path.rst", "api_docs/api/cugraph.shortest_path_length.rst", "api_docs/api/cugraph.sorensen.rst", "api_docs/api/cugraph.sorensen_coefficient.rst", "api_docs/api/cugraph.sorensen_w.rst", "api_docs/api/cugraph.spectralBalancedCutClustering.rst", "api_docs/api/cugraph.spectralModularityMaximizationClustering.rst", "api_docs/api/cugraph.sssp.rst", "api_docs/api/cugraph.strongly_connected_components.rst", "api_docs/api/cugraph.structure.NumberMap.rst", "api_docs/api/cugraph.structure.NumberMap.MultiGPU.rst", "api_docs/api/cugraph.structure.NumberMap.SingleGPU.rst", "api_docs/api/cugraph.structure.NumberMap.add_internal_vertex_id.rst", "api_docs/api/cugraph.structure.NumberMap.compute_vals.rst", "api_docs/api/cugraph.structure.NumberMap.compute_vals_types.rst", "api_docs/api/cugraph.structure.NumberMap.from_internal_vertex_id.rst", "api_docs/api/cugraph.structure.NumberMap.generate_unused_column_name.rst", "api_docs/api/cugraph.structure.NumberMap.renumber.rst", "api_docs/api/cugraph.structure.NumberMap.renumber_and_segment.rst", "api_docs/api/cugraph.structure.NumberMap.set_renumbered_col_names.rst", "api_docs/api/cugraph.structure.NumberMap.to_internal_vertex_id.rst", "api_docs/api/cugraph.structure.NumberMap.unrenumber.rst", "api_docs/api/cugraph.structure.NumberMap.vertex_column_size.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.degree.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.degrees.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.delete_adj_list.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.delete_edge_list.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.edges.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.enable_batch.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.get_two_hop_neighbors.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.has_edge.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.has_node.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.has_self_loop.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.in_degree.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.neighbors.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.nodes.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.number_of_edges.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.number_of_nodes.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.number_of_vertices.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.out_degree.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.vertex_column_size.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.view_adj_list.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.view_edge_list.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.view_transposed_adj_list.rst", "api_docs/api/cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.rst", "api_docs/api/cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.add_edge_data.rst", "api_docs/api/cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.add_vertex_data.rst", "api_docs/api/cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.annotate_dataframe.rst", "api_docs/api/cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.edge_props_to_graph.rst", "api_docs/api/cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.extract_subgraph.rst", "api_docs/api/cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.get_edge_data.rst", "api_docs/api/cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.get_num_edges.rst", "api_docs/api/cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.get_num_vertices.rst", "api_docs/api/cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.get_vertex_data.rst", "api_docs/api/cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.get_vertices.rst", "api_docs/api/cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.has_duplicate_edges.rst", "api_docs/api/cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.is_multigraph.rst", "api_docs/api/cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.renumber_edges_by_type.rst", "api_docs/api/cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.renumber_vertices_by_type.rst", "api_docs/api/cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.select_edges.rst", "api_docs/api/cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.select_vertices.rst", "api_docs/api/cugraph.structure.property_graph.EXPERIMENTAL__PropertySelection.rst", "api_docs/api/cugraph.structure.shuffle.rst", "api_docs/api/cugraph.subgraph.rst", "api_docs/api/cugraph.symmetrize.rst", "api_docs/api/cugraph.symmetrize_ddf.rst", "api_docs/api/cugraph.symmetrize_df.rst", "api_docs/api/cugraph.to_numpy_array.rst", "api_docs/api/cugraph.to_numpy_matrix.rst", "api_docs/api/cugraph.to_pandas_adjacency.rst", "api_docs/api/cugraph.to_pandas_edgelist.rst", "api_docs/api/cugraph.tree.minimum_spanning_tree.maximum_spanning_tree.rst", "api_docs/api/cugraph.tree.minimum_spanning_tree.minimum_spanning_tree.rst", "api_docs/api/cugraph.triangle_count.rst", "api_docs/api/cugraph.uniform_neighbor_sample.rst", "api_docs/api/cugraph.weakly_connected_components.rst", "api_docs/api/pylibcugraph.bfs.rst", "api_docs/api/pylibcugraph.eigenvector_centrality.rst", "api_docs/api/pylibcugraph.hits.rst", "api_docs/api/pylibcugraph.katz_centrality.rst", "api_docs/api/pylibcugraph.node2vec.rst", "api_docs/api/pylibcugraph.pagerank.rst", "api_docs/api/pylibcugraph.sssp.rst", "api_docs/api/pylibcugraph.strongly_connected_components.rst", "api_docs/api/pylibcugraph.weakly_connected_components.rst", "api_docs/centrality.rst", "api_docs/community.rst", "api_docs/components.rst", "api_docs/cores.rst", "api_docs/dask-cugraph.rst", "api_docs/generator.rst", "api_docs/graph_implementation.rst", "api_docs/helper_functions.rst", "api_docs/index.rst", "api_docs/layout.rst", "api_docs/linear_assignment.rst", "api_docs/link_analysis.rst", "api_docs/link_prediction.rst", "api_docs/property_graph.rst", "api_docs/pylibcugraph.rst", "api_docs/sampling.rst", "api_docs/structure.rst", "api_docs/traversal.rst", "api_docs/tree.rst", "basics/cugraph_blogs.rst", "basics/cugraph_cascading.md", "basics/cugraph_intro.md", "basics/cugraph_ref.rst", "basics/index.rst", "basics/nx_transition.rst", "index.rst"], "titles": ["cugraph.BiPartiteGraph", "cugraph.Graph", "cugraph.Graph.add_internal_vertex_id", "cugraph.Graph.add_nodes_from", "cugraph.Graph.clear", "cugraph.Graph.from_cudf_adjlist", "cugraph.Graph.from_cudf_edgelist", "cugraph.Graph.from_dask_cudf_edgelist", "cugraph.Graph.from_numpy_array", "cugraph.Graph.from_numpy_matrix", "cugraph.Graph.from_pandas_adjacency", "cugraph.Graph.from_pandas_edgelist", "cugraph.Graph.has_isolated_vertices", "cugraph.Graph.is_bipartite", "cugraph.Graph.is_directed", "cugraph.Graph.is_multigraph", "cugraph.Graph.is_multipartite", "cugraph.Graph.is_renumbered", "cugraph.Graph.is_weighted", "cugraph.Graph.lookup_internal_vertex_id", "cugraph.Graph.to_directed", "cugraph.Graph.to_undirected", "cugraph.Graph.unrenumber", "cugraph.MultiGraph", "cugraph.analyzeClustering_edge_cut", "cugraph.analyzeClustering_modularity", "cugraph.analyzeClustering_ratio_cut", "cugraph.batched_ego_graphs", "cugraph.betweenness_centrality", "cugraph.bfs", "cugraph.bfs_edges", "cugraph.centrality.eigenvector_centrality", "cugraph.connected_components", "cugraph.core_number", "cugraph.dask.centrality.eigenvector_centrality.eigenvector_centrality", "cugraph.dask.centrality.katz_centrality.katz_centrality", "cugraph.dask.common.read_utils.get_chunksize", "cugraph.dask.comms.comms.destroy", "cugraph.dask.comms.comms.get_2D_partition", "cugraph.dask.comms.comms.get_comms", "cugraph.dask.comms.comms.get_default_handle", "cugraph.dask.comms.comms.get_handle", "cugraph.dask.comms.comms.get_session_id", "cugraph.dask.comms.comms.get_worker_id", "cugraph.dask.comms.comms.get_workers", "cugraph.dask.comms.comms.initialize", "cugraph.dask.comms.comms.is_initialized", "cugraph.dask.community.louvain.louvain", "cugraph.dask.components.connectivity.weakly_connected_components", "cugraph.dask.link_analysis.hits.hits", "cugraph.dask.link_analysis.pagerank.pagerank", "cugraph.dask.traversal.bfs.bfs", "cugraph.dask.traversal.sssp.sssp", "cugraph.degree_centrality", "cugraph.dense_hungarian", "cugraph.ecg", "cugraph.edge_betweenness_centrality", "cugraph.ego_graph", "cugraph.filter_unreachable", "cugraph.force_atlas2", "cugraph.from_adjlist", "cugraph.from_cudf_edgelist", "cugraph.from_edgelist", "cugraph.from_numpy_array", "cugraph.from_numpy_matrix", "cugraph.from_pandas_adjacency", "cugraph.from_pandas_edgelist", "cugraph.generators.rmat", "cugraph.hits", "cugraph.hungarian", "cugraph.hypergraph", "cugraph.jaccard", "cugraph.jaccard_coefficient", "cugraph.jaccard_w", "cugraph.k_core", "cugraph.k_truss", "cugraph.katz_centrality", "cugraph.ktruss_subgraph", "cugraph.leiden", "cugraph.louvain", "cugraph.node2vec", "cugraph.overlap", "cugraph.overlap_coefficient", "cugraph.overlap_w", "cugraph.pagerank", "cugraph.random_walks", "cugraph.shortest_path", "cugraph.shortest_path_length", "cugraph.sorensen", "cugraph.sorensen_coefficient", "cugraph.sorensen_w", "cugraph.spectralBalancedCutClustering", "cugraph.spectralModularityMaximizationClustering", "cugraph.sssp", "cugraph.strongly_connected_components", "cugraph.structure.NumberMap", "cugraph.structure.NumberMap.MultiGPU", "cugraph.structure.NumberMap.SingleGPU", "cugraph.structure.NumberMap.add_internal_vertex_id", "cugraph.structure.NumberMap.compute_vals", "cugraph.structure.NumberMap.compute_vals_types", "cugraph.structure.NumberMap.from_internal_vertex_id", "cugraph.structure.NumberMap.generate_unused_column_name", "cugraph.structure.NumberMap.renumber", "cugraph.structure.NumberMap.renumber_and_segment", "cugraph.structure.NumberMap.set_renumbered_col_names", "cugraph.structure.NumberMap.to_internal_vertex_id", "cugraph.structure.NumberMap.unrenumber", "cugraph.structure.NumberMap.vertex_column_size", "cugraph.structure.graph_implementation.simpleGraphImpl.degree", "cugraph.structure.graph_implementation.simpleGraphImpl.degrees", "cugraph.structure.graph_implementation.simpleGraphImpl.delete_adj_list", "cugraph.structure.graph_implementation.simpleGraphImpl.delete_edge_list", "cugraph.structure.graph_implementation.simpleGraphImpl.edges", "cugraph.structure.graph_implementation.simpleGraphImpl.enable_batch", "cugraph.structure.graph_implementation.simpleGraphImpl.get_two_hop_neighbors", "cugraph.structure.graph_implementation.simpleGraphImpl.has_edge", "cugraph.structure.graph_implementation.simpleGraphImpl.has_node", "cugraph.structure.graph_implementation.simpleGraphImpl.has_self_loop", "cugraph.structure.graph_implementation.simpleGraphImpl.in_degree", "cugraph.structure.graph_implementation.simpleGraphImpl.neighbors", "cugraph.structure.graph_implementation.simpleGraphImpl.nodes", "cugraph.structure.graph_implementation.simpleGraphImpl.number_of_edges", "cugraph.structure.graph_implementation.simpleGraphImpl.number_of_nodes", "cugraph.structure.graph_implementation.simpleGraphImpl.number_of_vertices", "cugraph.structure.graph_implementation.simpleGraphImpl.out_degree", "cugraph.structure.graph_implementation.simpleGraphImpl.vertex_column_size", "cugraph.structure.graph_implementation.simpleGraphImpl.view_adj_list", "cugraph.structure.graph_implementation.simpleGraphImpl.view_edge_list", "cugraph.structure.graph_implementation.simpleGraphImpl.view_transposed_adj_list", "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph", "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.add_edge_data", "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.add_vertex_data", "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.annotate_dataframe", "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.edge_props_to_graph", "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.extract_subgraph", "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.get_edge_data", "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.get_num_edges", "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.get_num_vertices", "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.get_vertex_data", "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.get_vertices", "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.has_duplicate_edges", "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.is_multigraph", "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.renumber_edges_by_type", "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.renumber_vertices_by_type", "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.select_edges", "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.select_vertices", "cugraph.structure.property_graph.EXPERIMENTAL__PropertySelection", "cugraph.structure.shuffle", "cugraph.subgraph", "cugraph.symmetrize", "cugraph.symmetrize_ddf", "cugraph.symmetrize_df", "cugraph.to_numpy_array", "cugraph.to_numpy_matrix", "cugraph.to_pandas_adjacency", "cugraph.to_pandas_edgelist", "cugraph.tree.minimum_spanning_tree.maximum_spanning_tree", "cugraph.tree.minimum_spanning_tree.minimum_spanning_tree", "cugraph.triangle_count", "cugraph.uniform_neighbor_sample", "cugraph.weakly_connected_components", "pylibcugraph.bfs", "pylibcugraph.eigenvector_centrality", "pylibcugraph.hits", "pylibcugraph.katz_centrality", "pylibcugraph.node2vec", "pylibcugraph.pagerank", "pylibcugraph.sssp", "pylibcugraph.strongly_connected_components", "pylibcugraph.weakly_connected_components", "Centrality", "Community", "Components", "Cores", "Multi-GPU with cuGraph", "Generator", "Graph Implementation", "DASK MG Helper functions", "API reference", "Layout", "Linear Assignment", "Link Analysis", "Link Prediction", "Property Graph", "pylibcugraph", "Sampling", "Graph Classes", "Traversal", "Tree", "cuGraph BLOGS and Presentations", "Method Cascading and cuGraph", "cuGraph Introduction", "References", "Basics", "NetworkX Compatibility and Transition", "Welcome to cugraph\u2019s documentation!"], "terms": {"class": [0, 1, 23, 28, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 95, 130, 147, 179, 191, 196], "direct": [0, 1, 5, 14, 20, 21, 23, 28, 29, 30, 31, 32, 33, 34, 35, 48, 49, 50, 51, 52, 53, 56, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 74, 76, 80, 85, 86, 88, 89, 93, 94, 128, 133, 135, 145, 149, 150, 151, 152, 161], "fals": [0, 1, 2, 6, 7, 11, 13, 14, 15, 16, 22, 23, 27, 28, 30, 32, 45, 46, 48, 50, 57, 59, 66, 67, 70, 84, 85, 94, 98, 101, 103, 104, 107, 122, 134, 135, 138, 141, 145, 148, 150, 151, 152, 157, 158, 160, 161, 162, 163, 166, 167, 168, 170, 175], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 175, 179, 195], "A": [0, 1, 2, 6, 8, 9, 10, 11, 19, 20, 21, 22, 23, 28, 33, 45, 49, 54, 57, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 85, 88, 89, 90, 98, 101, 107, 110, 119, 125, 131, 132, 133, 134, 135, 140, 145, 146, 149, 157, 158, 162, 163, 164, 165, 166, 167, 168, 170, 190, 192, 193], "bipartit": [0, 13, 54, 69, 195], "graph": [0, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 107, 109, 110, 113, 116, 117, 118, 119, 121, 122, 124, 125, 127, 128, 129, 130, 133, 134, 135, 138, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 179, 190, 192, 193, 194, 196], "method": [0, 1, 5, 6, 11, 23, 47, 50, 66, 78, 79, 84, 86, 91, 92, 93, 95, 109, 110, 119, 125, 130, 131, 147, 167, 179], "__init__": [0, 1, 23, 95, 130, 147], "m_graph": 1, "none": [1, 5, 6, 7, 8, 11, 19, 20, 21, 27, 28, 29, 30, 32, 33, 35, 42, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 98, 101, 106, 107, 109, 110, 119, 125, 127, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 146, 147, 150, 151, 152, 157, 158, 159, 161, 162, 164, 165, 167, 169, 170, 175, 191, 195], "gpu": [1, 19, 22, 27, 28, 31, 32, 33, 34, 35, 36, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 59, 67, 68, 71, 72, 73, 76, 77, 78, 79, 81, 83, 84, 88, 89, 90, 91, 92, 94, 107, 109, 110, 119, 125, 148, 150, 159, 160, 161, 163, 164, 165, 167, 168, 179, 190, 192, 193, 195, 196], "object": [1, 5, 6, 7, 11, 27, 29, 30, 32, 51, 57, 60, 66, 67, 93, 94, 101, 145, 146, 147, 149, 161, 169, 170, 194], "base": [1, 29, 30, 31, 32, 33, 34, 49, 68, 71, 73, 74, 76, 77, 81, 83, 87, 93, 94, 99, 101, 135, 160, 161, 164, 165, 169, 175, 192], "other": [1, 27, 45, 57, 59, 69, 70, 105, 131, 132, 151, 152, 175, 179, 191, 192, 194, 195], "type": [1, 5, 28, 29, 30, 32, 52, 54, 56, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 78, 85, 87, 93, 94, 98, 100, 101, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 141, 143, 144, 146, 161, 164, 165, 166, 167, 168], "paramet": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 16, 19, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 98, 101, 106, 107, 109, 110, 119, 125, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170], "multigraph": [1, 15, 135, 195], "default": [1, 2, 5, 6, 7, 8, 11, 19, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 40, 45, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 98, 101, 107, 109, 110, 119, 125, 134, 135, 136, 137, 138, 139, 148, 150, 151, 152, 156, 157, 158, 160, 161, 164, 167, 195], "initi": [1, 5, 6, 7, 8, 9, 10, 11, 28, 35, 37, 40, 42, 44, 46, 49, 50, 56, 59, 60, 63, 64, 65, 66, 68, 76, 84, 164, 167, 175, 192], "from": [1, 2, 5, 6, 7, 8, 9, 10, 11, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 41, 43, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 98, 101, 107, 125, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 157, 158, 160, 161, 162, 166, 168, 169, 170, 175, 179, 190, 191, 193, 195], "boolean": [1, 30, 98, 101, 147], "option": [1, 2, 5, 6, 7, 8, 11, 19, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 45, 47, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 98, 101, 106, 107, 109, 110, 119, 125, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 146, 147, 148, 150, 151, 152, 156, 160, 161, 164], "indic": [1, 5, 6, 7, 11, 28, 51, 56, 60, 61, 62, 66, 73, 83, 86, 90, 93, 127, 129, 155, 160, 169, 170, 191, 195], "i": [1, 5, 6, 7, 11, 13, 14, 15, 16, 17, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 42, 44, 45, 47, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 98, 101, 107, 109, 110, 115, 119, 123, 125, 127, 128, 129, 135, 136, 137, 138, 139, 140, 143, 144, 147, 150, 151, 152, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 175, 190, 191, 192, 195, 196], "exampl": [1, 5, 6, 11, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 107, 109, 110, 119, 125, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 179, 191, 192, 195], "undirect": [1, 5, 7, 14, 21, 27, 28, 29, 31, 32, 33, 34, 35, 47, 48, 53, 56, 57, 71, 72, 74, 75, 76, 77, 78, 79, 80, 85, 88, 89, 94, 128, 149, 157, 158, 159, 161, 162], "g": [1, 5, 6, 11, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 47, 53, 54, 55, 56, 57, 59, 60, 61, 62, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 107, 109, 110, 119, 125, 133, 134, 135, 145, 146, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 170, 175, 191, 192, 195], "true": [1, 2, 6, 7, 11, 12, 14, 15, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 62, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 98, 101, 107, 116, 117, 118, 133, 134, 135, 138, 141, 142, 145, 149, 150, 151, 152, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 175, 191], "properti": [1, 84, 130, 131, 132, 133, 134, 135, 136, 139, 140, 145, 146, 147, 151, 152, 167, 179, 196], "df": [2, 6, 11, 19, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 49, 51, 52, 53, 55, 56, 58, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 78, 79, 81, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 98, 100, 101, 103, 104, 106, 107, 109, 110, 115, 119, 125, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 152, 156, 160, 161, 191, 195], "internal_column_nam": [2, 101], "external_column_nam": [2, 101], "drop": [2, 73, 83, 90, 98, 101, 150, 151, 152], "preserve_ord": [2, 22, 98, 103, 104, 107], "given": [2, 19, 22, 24, 25, 26, 27, 57, 70, 71, 72, 73, 75, 77, 81, 83, 88, 89, 90, 91, 92, 98, 101, 106, 107, 109, 110, 119, 125, 135, 137, 138, 149], "datafram": [2, 6, 7, 10, 11, 19, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 98, 101, 106, 107, 109, 110, 113, 115, 119, 121, 125, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 155, 156, 159, 160, 161, 162, 192, 195, 196], "contain": [2, 5, 6, 8, 9, 10, 11, 19, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 98, 101, 106, 107, 109, 110, 113, 116, 117, 119, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170], "extern": [2, 6, 7, 11, 19, 22, 24, 25, 26, 66, 98, 99, 101, 106, 107, 115], "vertex": [2, 6, 7, 11, 19, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 66, 67, 68, 69, 71, 72, 73, 74, 76, 78, 79, 81, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 98, 101, 106, 107, 109, 110, 115, 119, 125, 130, 131, 132, 135, 138, 139, 140, 144, 147, 148, 149, 159, 160, 161, 162, 164, 165, 167, 168, 169, 170, 192, 195], "id": [2, 6, 7, 11, 19, 22, 24, 25, 26, 29, 30, 47, 51, 52, 54, 55, 58, 66, 67, 69, 70, 71, 72, 73, 78, 79, 81, 83, 87, 88, 89, 90, 93, 98, 101, 106, 107, 109, 110, 115, 119, 125, 131, 132, 134, 136, 139, 140, 143, 144, 151, 152, 169], "identifi": [2, 19, 22, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 47, 48, 49, 50, 53, 54, 55, 56, 59, 68, 69, 73, 74, 76, 78, 79, 83, 84, 90, 91, 92, 94, 98, 101, 106, 107, 133, 161, 164, 167, 168], "column": [2, 5, 6, 7, 8, 11, 19, 22, 24, 25, 26, 28, 29, 30, 32, 45, 47, 52, 54, 55, 56, 57, 59, 61, 62, 66, 69, 70, 71, 72, 73, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 93, 94, 98, 99, 100, 101, 102, 105, 106, 107, 115, 121, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 155, 156, 161, 195], "return": [2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 98, 101, 106, 107, 109, 110, 113, 115, 116, 117, 118, 119, 121, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 191, 195], "intern": [2, 19, 22, 35, 59, 74, 76, 80, 98, 99, 100, 101, 106, 107, 128, 147, 190, 192, 193], "specifi": [2, 24, 25, 26, 27, 28, 35, 45, 47, 52, 54, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 76, 78, 79, 80, 81, 83, 88, 89, 90, 91, 92, 93, 94, 98, 101, 109, 110, 119, 125, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 149, 160, 161, 168], "name": [2, 6, 7, 8, 11, 19, 22, 24, 25, 26, 34, 35, 48, 49, 50, 51, 52, 56, 66, 70, 77, 98, 99, 100, 101, 102, 105, 106, 107, 130, 131, 132, 133, 135, 141, 145, 146, 150, 151, 152, 155, 156, 175, 192, 195], "preserv": [2, 22, 98, 107], "order": [2, 19, 22, 28, 54, 56, 71, 72, 73, 74, 81, 83, 88, 89, 90, 98, 106, 107, 109, 110, 119, 125, 133, 145, 146, 169, 193, 195], "origin": [2, 6, 7, 11, 22, 66, 70, 101, 107, 134], "cudf": [2, 3, 5, 6, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 98, 101, 106, 107, 109, 110, 113, 115, 119, 121, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 159, 160, 161, 162, 191], "dask_cudf": [2, 6, 7, 19, 22, 34, 35, 36, 47, 48, 49, 50, 51, 52, 62, 67, 98, 101, 106, 107, 150, 151, 175], "convert": [2, 6, 7, 19, 22, 29, 32, 94, 98, 101, 106, 107, 161], "string": [2, 19, 22, 61, 62, 70, 98, 101, 106, 107, 131, 132, 133, 134, 135, 137, 138, 141, 145, 146, 151, 152, 157, 158], "list": [2, 3, 5, 6, 8, 11, 25, 27, 28, 29, 32, 47, 48, 49, 50, 51, 52, 55, 56, 61, 62, 66, 68, 69, 70, 71, 72, 73, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 94, 98, 101, 106, 107, 109, 110, 111, 112, 119, 125, 127, 128, 129, 130, 131, 132, 136, 139, 141, 149, 150, 151, 152, 156, 157, 159, 160, 161, 179, 195], "": [2, 35, 43, 51, 52, 56, 61, 62, 70, 76, 93, 128, 151, 152, 160, 165, 175, 190, 193], "bool": [2, 6, 7, 11, 22, 27, 28, 29, 32, 45, 49, 51, 52, 53, 56, 57, 59, 61, 62, 66, 67, 68, 70, 77, 80, 85, 94, 107, 134, 135, 138, 141, 142, 148, 150, 151, 152, 157, 158, 160, 161, 164, 168], "data": [2, 27, 28, 31, 32, 33, 34, 35, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 67, 68, 70, 71, 72, 73, 76, 78, 79, 80, 81, 83, 84, 88, 89, 90, 91, 92, 93, 94, 98, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 151, 152, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 175, 179, 190, 192, 194, 195, 196], "frame": [2, 27, 28, 31, 32, 33, 34, 35, 47, 48, 49, 50, 53, 55, 56, 59, 68, 71, 72, 73, 76, 78, 79, 81, 83, 84, 88, 89, 90, 91, 92, 94, 151, 152, 159, 160, 161], "requir": [2, 6, 7, 29, 35, 51, 67, 69, 76, 80, 101, 135, 160, 192, 195], "an": [2, 5, 6, 7, 11, 14, 21, 22, 28, 29, 31, 32, 34, 35, 49, 50, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 76, 80, 81, 83, 84, 87, 88, 89, 90, 94, 98, 101, 102, 106, 115, 123, 128, 133, 135, 150, 157, 158, 161, 164, 167, 170, 191, 192, 193, 195], "extra": [2, 98], "sort": [2, 22, 98, 115, 169], "new": [2, 35, 60, 61, 62, 76, 105, 151, 152, 165, 192, 193, 195], "node": [3, 8, 20, 21, 27, 28, 31, 33, 34, 35, 45, 49, 56, 57, 59, 68, 70, 73, 74, 76, 80, 83, 85, 90, 117, 124, 128, 160, 163, 164, 165, 166, 175, 190, 192, 195], "add": [3, 22, 131, 132, 133, 135, 190, 191], "inform": [3, 6, 8, 9, 10, 11, 27, 29, 30, 31, 32, 34, 35, 38, 45, 47, 48, 49, 50, 51, 52, 53, 55, 57, 59, 63, 64, 65, 66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 81, 83, 84, 87, 88, 89, 90, 93, 94, 157, 158, 159, 160, 161, 193, 195], "seri": [3, 5, 19, 27, 28, 31, 32, 33, 34, 35, 47, 48, 49, 50, 53, 54, 55, 56, 60, 68, 69, 71, 72, 73, 74, 76, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 91, 92, 94, 98, 101, 106, 109, 110, 115, 119, 121, 125, 127, 128, 129, 130, 139, 140, 147, 149, 150, 159, 160, 161, 162], "The": [3, 5, 6, 7, 11, 19, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 93, 94, 98, 101, 105, 106, 107, 109, 110, 115, 119, 125, 127, 129, 130, 131, 132, 133, 135, 136, 138, 148, 150, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 175, 190, 191, 192, 193, 195], "store": [3, 5, 6, 7, 52, 61, 62, 71, 93, 128, 130, 150, 151, 152, 192, 195, 196], "empti": [4, 70, 80, 131, 132, 135, 162, 166], "offset_col": [5, 127, 129], "index_col": [5, 127, 129], "value_col": [5, 127, 129], "adjac": [5, 6, 7, 8, 9, 10, 32, 47, 48, 49, 55, 60, 63, 64, 65, 67, 68, 71, 72, 73, 78, 79, 81, 83, 84, 88, 89, 90, 94, 109, 110, 111, 119, 125, 127, 129, 153, 154, 155, 157, 161], "It": [5, 6, 11, 45, 47, 55, 59, 66, 78, 79, 113, 191, 195], "error": [5, 6, 11, 47, 59, 66, 78, 79, 163, 165], "call": [5, 6, 11, 13, 16, 24, 25, 28, 33, 45, 47, 56, 66, 74, 78, 79, 133, 135, 140, 145, 146, 150, 151, 152, 162, 191, 192, 195, 196], "thi": [5, 6, 11, 13, 16, 19, 20, 22, 25, 26, 28, 29, 31, 32, 33, 34, 35, 40, 45, 47, 49, 50, 51, 54, 55, 56, 59, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 88, 89, 90, 92, 94, 98, 101, 106, 107, 109, 110, 119, 123, 125, 127, 128, 129, 135, 146, 147, 149, 150, 151, 152, 159, 160, 161, 162, 164, 165, 167, 168, 169, 179, 191, 192, 195], "pass": [5, 6, 28, 56, 60, 61, 62, 63, 64, 65, 66, 134, 150], "argument": [5, 6, 7, 11, 61, 62, 66, 135, 163, 165], "wrap": [5, 6, 45, 127, 128, 129, 192], "gdf_column": [5, 6, 127, 129], "repres": [5, 6, 29, 30, 32, 33, 38, 45, 50, 54, 55, 57, 60, 70, 71, 72, 73, 74, 80, 81, 83, 84, 85, 88, 89, 90, 93, 94, 128, 133, 145, 146, 147, 151, 152, 161, 166, 167, 169, 170, 192], "us": [5, 6, 7, 11, 22, 28, 29, 30, 31, 32, 34, 35, 41, 45, 47, 49, 50, 51, 53, 54, 55, 56, 59, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 101, 105, 106, 107, 113, 130, 131, 132, 133, 134, 135, 141, 145, 146, 147, 151, 152, 157, 158, 159, 161, 162, 165, 167, 175, 190, 191, 192, 193, 194, 196], "format": [5, 6, 179], "If": [5, 6, 7, 11, 22, 28, 29, 30, 31, 32, 34, 35, 45, 50, 51, 52, 53, 56, 57, 60, 61, 62, 66, 67, 69, 70, 71, 72, 73, 74, 76, 80, 81, 83, 84, 85, 87, 88, 89, 90, 93, 94, 98, 101, 106, 107, 109, 110, 119, 121, 125, 128, 131, 132, 134, 135, 137, 138, 150, 151, 152, 161, 162, 164, 165, 166, 167, 168, 170, 175, 195], "unweight": [5, 60, 86, 93, 127, 129, 135], "creat": [5, 29, 50, 51, 60, 61, 62, 63, 64, 65, 66, 70, 73, 80, 83, 84, 90, 134, 135, 147, 150, 151, 152, 160, 175, 191, 195], "weight": [5, 6, 7, 11, 18, 20, 21, 25, 26, 27, 28, 29, 30, 32, 33, 35, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 113, 127, 128, 129, 134, 135, 150, 151, 152, 157, 158, 159, 161, 162, 163, 166, 167, 168, 169, 170, 195], "edg": [5, 6, 11, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 109, 112, 116, 119, 122, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 145, 147, 149, 150, 151, 152, 156, 157, 158, 159, 160, 161, 166, 167, 168, 169, 191, 192, 195], "must": [5, 6, 7, 45, 50, 51, 52, 74, 91, 92, 131, 133, 162, 168], "both": [5, 29, 32, 33, 49, 68, 71, 72, 74, 85, 88, 89, 94, 109, 128, 140, 146, 149, 150, 151, 152, 161, 191, 192, 195], "size": [5, 28, 31, 32, 33, 34, 35, 47, 49, 50, 53, 55, 56, 59, 68, 71, 72, 73, 74, 76, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 91, 92, 94, 109, 110, 119, 125, 127, 129, 161, 166, 169, 175], "v": [5, 6, 7, 11, 20, 21, 28, 31, 32, 33, 34, 35, 47, 49, 50, 53, 55, 59, 61, 62, 66, 67, 68, 69, 74, 76, 78, 79, 84, 91, 92, 94, 116, 127, 129, 151, 152, 161, 193], "1": [5, 6, 11, 20, 21, 22, 27, 28, 29, 31, 32, 33, 34, 35, 45, 47, 49, 50, 52, 55, 56, 57, 59, 60, 61, 62, 66, 67, 68, 75, 76, 77, 78, 79, 80, 84, 91, 93, 94, 98, 101, 106, 107, 109, 110, 119, 125, 127, 129, 132, 133, 134, 135, 136, 139, 140, 144, 145, 146, 149, 150, 152, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 190, 191, 193, 195], "number": [5, 6, 7, 11, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 45, 47, 49, 50, 54, 55, 56, 59, 61, 62, 66, 67, 68, 71, 74, 76, 78, 79, 84, 91, 92, 94, 101, 109, 119, 122, 124, 125, 127, 129, 137, 138, 148, 159, 161, 162, 163, 164, 165, 166, 167, 169, 179, 191, 195], "vertic": [5, 6, 7, 11, 12, 28, 31, 32, 33, 34, 35, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 61, 62, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 93, 94, 109, 110, 119, 121, 125, 127, 129, 132, 133, 135, 138, 139, 140, 146, 147, 149, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170], "gdf": [5, 127, 129, 159, 191], "offset": [5, 27, 60, 80, 127, 129, 169, 170], "rang": [5, 6, 7, 11, 55, 61, 62, 66, 73, 83, 90, 127, 129, 133], "0": [5, 6, 7, 11, 20, 21, 22, 28, 29, 30, 31, 32, 34, 35, 47, 50, 51, 52, 54, 55, 56, 59, 60, 61, 62, 66, 67, 69, 76, 78, 79, 80, 84, 91, 92, 93, 94, 98, 101, 107, 109, 110, 119, 125, 127, 129, 132, 133, 134, 135, 136, 139, 140, 143, 144, 145, 149, 150, 152, 159, 161, 162, 163, 166, 167, 168, 169, 170, 175, 190, 195], "e": [5, 47, 56, 71, 72, 73, 77, 79, 81, 83, 88, 89, 90, 127, 128, 129, 151, 152, 190, 192, 193, 195], "destin": [5, 6, 7, 11, 27, 34, 35, 48, 49, 50, 51, 52, 56, 61, 62, 66, 71, 72, 73, 81, 83, 88, 89, 90, 113, 127, 128, 129, 130, 131, 133, 136, 141, 142, 150, 151, 152, 155, 156, 159, 160, 162, 175], "index": [5, 6, 7, 11, 22, 30, 61, 62, 66, 73, 76, 83, 87, 88, 90, 93, 127, 128, 129, 168, 175, 193, 196], "each": [5, 20, 21, 27, 28, 29, 30, 32, 35, 48, 49, 50, 51, 52, 53, 54, 56, 59, 68, 70, 71, 73, 75, 76, 77, 80, 81, 83, 84, 85, 88, 90, 93, 94, 127, 128, 129, 130, 143, 144, 160, 161, 162, 164, 165, 166, 168, 169, 170, 192], "pointer": [5, 61, 62, 127, 129, 164, 166], "can": [5, 6, 7, 11, 28, 29, 30, 31, 32, 33, 34, 35, 45, 50, 53, 54, 56, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 74, 76, 77, 80, 84, 85, 93, 94, 105, 130, 132, 145, 146, 147, 161, 167, 169, 175, 191, 195], "valu": [5, 27, 28, 29, 30, 31, 32, 33, 34, 35, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 67, 68, 69, 70, 71, 73, 74, 76, 80, 83, 84, 85, 87, 90, 93, 94, 105, 127, 128, 129, 131, 132, 134, 135, 150, 151, 152, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 191, 195], "expect": [5, 45, 127, 129, 192], "element": [5, 31, 34, 56, 98, 127, 129, 151, 152, 167, 168, 192, 195], "float": [5, 24, 25, 26, 27, 29, 30, 31, 34, 35, 47, 49, 50, 54, 55, 57, 59, 67, 68, 69, 76, 78, 79, 80, 84, 87, 91, 92, 93, 127, 129, 164], "point": [5, 27, 29, 30, 32, 47, 57, 59, 78, 79, 87, 93, 94, 105, 119, 125, 127, 129, 161, 192], "read_csv": [5, 6, 11, 20, 21, 34, 35, 36, 48, 49, 50, 51, 52, 60, 61, 62, 66, 70, 107, 109, 110, 119, 125, 150, 151, 152, 159, 162, 175, 195], "datasets_path": [5, 6, 11, 20, 21, 34, 35, 36, 48, 49, 50, 51, 52, 60, 61, 62, 66, 70, 107, 109, 110, 119, 125, 150, 152, 159, 162], "karat": [5, 6, 11, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 107, 109, 110, 119, 125, 149, 150, 151, 152, 159, 161, 162, 193], "csv": [5, 6, 11, 20, 21, 34, 35, 36, 48, 49, 50, 51, 52, 60, 61, 62, 66, 70, 107, 109, 110, 119, 125, 150, 151, 152, 159, 162, 175], "delimit": [5, 6, 11, 20, 21, 34, 35, 48, 49, 50, 51, 52, 60, 61, 62, 66, 70, 107, 109, 110, 119, 125, 150, 151, 152, 159, 162], "dtype": [5, 6, 11, 20, 21, 34, 35, 48, 49, 50, 51, 52, 54, 60, 61, 62, 66, 69, 70, 80, 107, 109, 110, 119, 125, 140, 149, 150, 151, 152, 159, 162, 163, 166, 167, 168, 169, 170, 175], "int32": [5, 6, 11, 20, 21, 34, 35, 48, 49, 50, 51, 52, 60, 61, 62, 66, 70, 80, 95, 107, 109, 110, 119, 125, 149, 150, 151, 152, 159, 160, 162, 163, 166, 167, 168, 169, 170, 175], "float32": [5, 6, 11, 20, 21, 28, 34, 35, 48, 49, 50, 51, 52, 56, 60, 61, 62, 66, 70, 107, 109, 110, 119, 125, 150, 151, 152, 159, 162, 163, 166, 167, 168, 170], "header": [5, 6, 11, 20, 21, 60, 61, 62, 66, 70, 107, 109, 110, 119, 125, 150, 152, 159, 162], "m": [5, 20, 21, 60, 61, 62, 70, 76, 77, 85, 109, 110, 119, 125, 150, 152, 162, 165, 193], "to_panda": 5, "scipi": [5, 27, 29, 30, 32, 57, 60, 93, 94, 161, 169, 170, 192, 196], "spars": [5, 27, 29, 30, 32, 57, 59, 60, 87, 93, 94, 161, 169, 170, 192, 196], "coo_matrix": [5, 60], "2": [5, 6, 11, 27, 28, 29, 30, 31, 32, 34, 35, 48, 56, 57, 59, 60, 61, 62, 66, 67, 71, 75, 76, 77, 80, 91, 92, 93, 94, 132, 133, 134, 135, 136, 139, 140, 143, 144, 145, 146, 149, 150, 159, 161, 162, 163, 166, 167, 168, 169, 170, 179, 190, 191, 193, 195], "tocsr": [5, 60], "indptr": [5, 60, 169, 170], "input_df": [6, 150], "edge_attr": [6, 7, 11, 34, 48, 49, 50, 51, 52, 61, 62, 66, 84, 159, 162], "renumb": [6, 7, 11, 17, 22, 50, 61, 62, 66, 84, 95, 107, 128, 134, 135, 143, 144, 148, 162, 163, 166, 167, 168, 170], "store_transpos": [6, 7, 103, 104, 162, 163, 166, 167, 168, 170], "legacy_renum_onli": [6, 7, 29, 51, 80, 103, 104, 160], "By": [6, 7, 11, 66, 109, 110, 119, 125], "enabl": [6, 7, 11, 29, 51, 66, 80, 160], "map": [6, 7, 11, 28, 56, 66, 70], "where": [6, 7, 11, 28, 32, 33, 35, 45, 56, 61, 62, 66, 67, 71, 72, 74, 75, 76, 77, 88, 89, 94, 101, 150, 151, 152, 161, 163, 164, 166, 167, 168, 190, 191, 192], "input": [6, 7, 11, 22, 29, 30, 32, 33, 45, 47, 50, 51, 52, 53, 55, 56, 57, 66, 70, 74, 78, 79, 84, 87, 93, 94, 98, 107, 128, 148, 151, 152, 159, 161, 162, 163, 164, 165, 166, 167, 168, 170, 175, 195], "ar": [6, 7, 11, 22, 27, 28, 31, 32, 33, 34, 35, 45, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 88, 89, 90, 93, 94, 101, 105, 107, 109, 110, 115, 119, 125, 127, 128, 129, 131, 132, 134, 135, 137, 138, 139, 141, 146, 147, 149, 150, 151, 152, 159, 161, 162, 164, 166, 167, 168, 169, 170, 190, 191, 192], "singl": [6, 7, 11, 19, 22, 27, 28, 29, 30, 56, 57, 59, 66, 67, 80, 85, 87, 93, 107, 139, 150, 163, 164, 165, 167, 168, 175, 179, 190, 192, 195], "integ": [6, 7, 11, 24, 25, 26, 27, 28, 29, 30, 47, 51, 52, 54, 55, 56, 57, 59, 61, 62, 66, 69, 78, 79, 91, 92, 139], "disabl": [6, 7, 11, 66], "present": [6, 11, 27, 29, 30, 32, 47, 48, 49, 55, 57, 59, 66, 68, 71, 72, 73, 78, 79, 81, 83, 84, 87, 88, 89, 90, 93, 94, 128, 161, 169, 194, 196], "reinterpret": 6, "For": [6, 29, 32, 70, 72, 82, 85, 89, 94, 113, 127, 128, 129, 131, 132, 149, 161, 167, 168, 169, 192, 195], "distribut": [6, 7, 35, 45, 48, 49, 59, 148, 150, 151, 179], "path": [6, 28, 29, 30, 32, 51, 52, 56, 58, 80, 85, 87, 93, 94, 160, 161, 166, 168, 179, 193, 194], "pleas": [6, 28, 56, 71], "from_dask_cudf_edgelist": [6, 34, 35, 48, 49, 50, 51, 52, 175], "str": [6, 7, 11, 24, 25, 26, 32, 33, 55, 66, 70, 84, 85, 87, 94, 101, 139, 150, 151, 152, 156, 161], "arrai": [6, 7, 8, 11, 29, 30, 63, 66, 80, 139, 153, 156, 162, 163, 164, 165, 166, 167, 168, 169, 170, 195], "like": [6, 7, 8, 11, 66, 80, 131, 132, 156, 166, 195], "whether": [6, 11, 29, 59, 66, 67, 70, 77, 147, 162, 175], "transpos": [6, 7, 84, 129, 148], "matrix": [6, 7, 8, 9, 10, 27, 29, 30, 32, 54, 57, 60, 63, 64, 65, 67, 71, 87, 93, 94, 128, 148, 153, 154, 155, 161, 169, 170, 192], "certain": [6, 7], "algorithm": [6, 7, 24, 25, 28, 29, 32, 45, 47, 49, 50, 51, 52, 54, 55, 56, 59, 67, 68, 69, 71, 72, 73, 77, 78, 79, 80, 81, 83, 88, 89, 90, 93, 94, 130, 133, 135, 149, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 190, 192, 194, 196], "skip": [6, 7, 70], "c": [6, 7, 54, 67, 69, 76, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 175, 192, 193], "step": [6, 7, 67, 192], "pylibcugraph": [6, 7, 29, 51, 80, 160, 179, 196], "yet": [6, 7, 77, 140, 164], "api": [6, 7, 29, 34, 35, 48, 49, 50, 51, 52, 54, 86, 94, 161, 195, 196], "input_ddf": 7, "edgelist": [7, 50, 66, 67, 84, 128, 148, 150, 156, 162], "current": [7, 13, 15, 16, 28, 30, 33, 45, 47, 48, 56, 71, 72, 75, 77, 78, 79, 80, 85, 88, 89, 131, 159, 160, 164, 169, 175, 195], "support": [7, 27, 28, 31, 33, 34, 35, 47, 48, 56, 57, 61, 74, 76, 77, 78, 79, 80, 85, 93, 135, 140, 159, 164, 168, 169, 170, 175, 191, 192], "note": [7, 13, 15, 16, 19, 22, 28, 29, 32, 35, 50, 51, 54, 56, 59, 71, 75, 76, 77, 80, 84, 94, 98, 106, 107, 128, 135, 138, 151, 152, 160, 161, 169, 195], "refer": [7, 76, 77, 80, 194, 196], "provid": [7, 45, 50, 57, 60, 69, 71, 72, 73, 81, 83, 84, 86, 88, 89, 90, 98, 109, 110, 119, 125, 131, 149, 162, 179, 190, 192], "should": [7, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 45, 47, 48, 49, 50, 51, 52, 55, 56, 57, 59, 61, 62, 68, 69, 71, 72, 73, 74, 76, 77, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 101, 149, 151, 152, 159, 161, 162, 164, 165, 167, 190], "np_arrai": 8, "numpi": [8, 9, 28, 29, 30, 32, 56, 63, 64, 93, 94, 95, 153, 154, 161, 163, 166, 167, 168, 169, 170], "act": 8, "label": [8, 22, 32, 48, 94, 101, 107, 161, 169, 170, 192], "np_matrix": 9, "pdf": [10, 11, 60, 193], "panda": [10, 11, 27, 29, 30, 60, 62, 65, 66, 93, 131, 132, 133, 134, 139, 140, 147, 155, 156, 195], "download": [11, 34, 35, 48, 49, 50, 51, 52, 66, 150, 151, 152], "dataset": [11, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 66, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 149, 150, 151, 152, 157, 158, 161, 175], "http": [11, 34, 35, 47, 48, 49, 50, 51, 52, 55, 66, 76, 77, 79, 80, 150, 151, 152, 190, 192, 193], "github": [11, 34, 35, 48, 49, 50, 51, 52, 66, 150, 151, 152, 192], "com": [11, 34, 35, 48, 49, 50, 51, 52, 66, 150, 151, 152, 190, 192, 193], "rapidsai": [11, 34, 35, 48, 49, 50, 51, 52, 66, 150, 151, 152, 192], "pd": [11, 60, 66, 195], "ha": [12, 18, 28, 33, 50, 56, 70, 77, 84, 118, 135, 141, 142, 162, 167, 168, 191, 192], "isol": [12, 50, 67, 84], "check": [13, 16, 135, 163, 165, 179], "sole": [13, 16], "reli": [13, 16, 28, 56], "user": [13, 16, 56, 71, 73, 81, 83, 84, 88, 90, 131, 132, 190, 191, 192], "add_nodes_from": [13, 16], "doe": [13, 16, 19, 22, 28, 33, 40, 50, 56, 61, 74, 84, 106, 107, 113, 149, 157, 160, 191, 192, 195], "pars": [13, 16], "implement": [13, 15, 16, 28, 30, 47, 48, 49, 56, 68, 71, 72, 76, 77, 78, 79, 85, 88, 89, 159, 165, 179, 196], "alwai": [13, 15, 16, 35, 76, 192], "els": [15, 70, 73, 81, 83, 85, 90], "multipartit": 16, "partit": [16, 19, 22, 24, 25, 26, 36, 38, 45, 47, 50, 51, 52, 55, 67, 69, 78, 79, 91, 92, 98, 106, 107, 148, 175, 193], "column_nam": [19, 22, 99, 100, 102, 107], "function": [19, 20, 22, 30, 50, 61, 75, 77, 84, 99, 100, 102, 107, 123, 175, 179, 191, 192, 196], "guarante": [19, 22, 35, 76, 78, 98, 106, 107, 193], "mode": [19, 22, 59, 107], "multi": [19, 22, 45, 69, 73, 80, 83, 85, 90, 107, 121, 149, 150, 151, 152, 163, 164, 165, 167, 168, 179, 190, 192, 196], "represent": [20, 54], "set": [20, 29, 31, 33, 34, 35, 49, 50, 52, 59, 67, 68, 69, 70, 71, 73, 74, 76, 80, 81, 83, 84, 88, 90, 93, 94, 105, 109, 110, 119, 125, 130, 135, 149, 150, 151, 152, 159, 161, 162, 164, 165, 167, 168, 169, 170, 175, 194], "attribut": [20, 57, 60, 61, 62, 63, 64, 65, 66, 70, 75, 84, 130, 134, 135, 157, 158], "view": [20, 113], "same": [20, 21, 22, 28, 70, 107, 128, 131, 135, 141, 142, 151, 152, 168, 191], "u": [20, 21, 116, 151, 152, 192, 193], "replac": [20, 21, 22, 105, 107, 134, 135, 160, 195], "two": [20, 28, 29, 30, 31, 32, 33, 34, 35, 47, 49, 50, 53, 55, 59, 68, 69, 71, 72, 73, 74, 76, 78, 79, 81, 83, 84, 88, 89, 90, 91, 92, 94, 115, 147, 150, 160, 161, 164, 170, 191], "from_cudf_edgelist": [20, 21, 107, 109, 110, 119, 125, 159, 162, 191], "dig": [20, 21], "copi": [21, 57, 75, 133, 135, 157, 158, 191], "get_column_nam": [22, 107], "output": [22, 33, 58, 59, 77, 101, 107, 151, 152], "through": [22, 28, 56, 70, 107, 179], "n": [22, 27, 28, 56, 57, 73, 76, 78, 83, 90, 101, 107, 109, 110, 117, 119, 120, 125, 165, 193], "suffix": [22, 107], "_column_nam": [22, 107], "you": [22, 59, 71, 76, 175], "wish": 22, "row": [22, 45, 54, 57, 70, 107, 133, 141, 147, 155, 169, 170, 195], "match": [22, 54, 69, 76, 107, 135, 140, 145, 146, 151, 152, 162, 192], "exist": [22, 101, 105, 107, 138, 149, 150, 151, 152, 195], "unmodifi": [22, 101, 107], "dentifi": 22, "ad": [22, 29, 35, 61, 70, 76, 94, 101, 107, 123, 131, 132, 133, 138, 161, 165, 179, 195], "remov": [22, 58, 107], "more": [23, 28, 33, 47, 51, 52, 56, 59, 74, 78, 79, 80, 98, 106, 135, 140, 142, 162, 164, 166, 167, 168, 170, 175, 191, 195], "than": [23, 28, 35, 45, 47, 50, 56, 59, 76, 78, 79, 84, 91, 165, 167, 175, 191, 192, 195], "one": [23, 28, 29, 50, 51, 52, 56, 69, 70, 87, 115, 135, 139, 140, 142, 147, 157, 162, 175, 192, 195], "between": [23, 28, 29, 30, 31, 34, 35, 50, 56, 59, 67, 70, 71, 72, 73, 76, 81, 83, 84, 88, 89, 90, 93, 167, 179, 192, 193, 195], "pair": [23, 28, 56, 70, 71, 72, 73, 81, 83, 88, 89, 90, 115, 128, 142, 150, 195], "n_cluster": [24, 25, 26], "cluster": [24, 25, 26, 34, 35, 45, 48, 49, 50, 51, 52, 55, 59, 91, 92, 151, 175, 179, 190, 193, 195], "vertex_col_nam": [24, 25, 26, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "cluster_col_nam": [24, 25, 26], "comput": [24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 47, 48, 49, 50, 52, 53, 55, 56, 57, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 99, 100, 109, 110, 115, 119, 125, 127, 128, 129, 149, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 175, 190, 192, 193, 195], "cut": [24, 26, 91], "score": [24, 25, 26, 28, 35, 47, 49, 50, 56, 68, 76, 78, 79, 84, 163, 165, 167, 190, 193, 195], "assumpt": [24, 25], "result": [24, 25, 28, 31, 33, 34, 35, 45, 48, 49, 53, 55, 56, 58, 60, 68, 70, 71, 76, 85, 115, 130, 133, 135, 136, 159, 160], "special": [24, 25], "descriptor": [24, 25, 26, 31, 34, 35, 47, 48, 49, 50, 52, 53, 55, 57, 59, 68, 69, 74, 75, 76, 77, 78, 79, 84, 87, 91, 92, 149, 157, 158, 159], "assign": [24, 25, 26, 47, 54, 55, 69, 78, 79, 91, 92, 131, 132, 179, 193, 195, 196], "analyz": [24, 25, 26, 175], "experiment": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 47, 53, 55, 56, 57, 59, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 157, 158, 161], "import": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 107, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 157, 158, 161, 163, 166, 167, 168, 169, 170, 175, 195], "get_graph": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 47, 53, 55, 56, 57, 59, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 149, 157, 158, 161], "fetch": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 47, 53, 55, 56, 57, 59, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 149, 157, 158, 161], "spectralbalancedcutclust": [24, 25, 26], "5": [24, 25, 26, 27, 35, 49, 50, 54, 55, 59, 68, 69, 80, 84, 91, 92, 132, 135, 139, 140, 142, 143, 144, 145, 146, 164, 167, 169, 175], "modular": [25, 47, 78, 79, 92], "networkx": [25, 27, 28, 29, 30, 31, 32, 33, 34, 49, 53, 55, 56, 57, 61, 62, 68, 71, 72, 74, 75, 76, 79, 80, 82, 84, 85, 86, 87, 89, 91, 92, 93, 94, 123, 128, 134, 157, 158, 159, 161, 190, 192, 194, 196], "have": [25, 26, 50, 52, 57, 67, 70, 71, 75, 84, 92, 93, 132, 133, 135, 138, 157, 158, 162, 168, 175, 192], "ratio": [26, 71, 73, 81, 83, 88, 90], "seed": [27, 28, 56, 67, 166, 175], "radiu": [27, 57], "center": [27, 57, 59], "distanc": [27, 29, 30, 51, 52, 57, 58, 87, 93, 162, 168, 195], "induc": [27, 57, 149], "subgraph": [27, 33, 57, 74, 75, 77, 135, 179, 193, 195], "neighbor": [27, 31, 34, 57, 71, 73, 81, 83, 160], "within": [27, 41, 43, 57, 70, 192, 195], "cupi": [27, 29, 30, 32, 57, 87, 93, 94, 161, 162, 163, 166, 167, 168, 169, 170, 192, 196], "which": [27, 29, 30, 31, 32, 34, 35, 50, 51, 55, 56, 57, 60, 76, 80, 84, 85, 93, 94, 101, 109, 130, 133, 135, 136, 139, 160, 161, 162, 167, 170, 175], "connect": [27, 29, 30, 31, 32, 34, 35, 47, 49, 50, 51, 52, 53, 55, 57, 59, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 87, 88, 89, 90, 93, 94, 157, 158, 159, 160, 161, 169, 170, 179, 193, 195], "doubl": [27, 29, 30, 47, 52, 54, 56, 57, 59, 69, 78, 79, 87, 93, 163, 164, 165, 166, 167, 168], "precis": [27, 29, 30, 57, 59, 87, 93], "egonet": [27, 179], "includ": [27, 28, 57, 67, 70, 136, 138, 139, 149, 192], "all": [27, 28, 45, 50, 52, 54, 56, 57, 69, 70, 71, 72, 73, 75, 81, 83, 84, 87, 88, 89, 90, 93, 109, 110, 113, 119, 121, 125, 130, 131, 132, 135, 136, 137, 138, 139, 140, 146, 150, 151, 152, 157, 158, 162, 165, 168, 179, 190, 191, 192], "kei": [27, 32, 57, 77, 94, 161], "count": [27, 28, 57, 77, 137, 159, 179, 193, 195], "hop": [27, 57, 71, 115, 160, 195], "case": [27, 57, 69, 80, 84, 85, 106, 191, 192], "ego_edge_list": 27, "seeds_offset": 27, "start": [27, 28, 29, 30, 50, 51, 52, 56, 58, 84, 87, 93, 105, 134, 143, 144, 160, 162], "b_ego_graph": 27, "k": [28, 33, 56, 74, 75, 76, 77, 91, 92, 179, 193, 195], "normal": [28, 31, 34, 35, 49, 53, 56, 59, 68, 76, 164], "endpoint": [28, 45, 195], "result_dtyp": [28, 56], "float64": [28, 56, 134, 135], "central": [28, 53, 56, 76, 163, 165, 179, 193, 195, 196], "measur": [28, 56], "shortest": [28, 29, 30, 32, 52, 56, 87, 93, 94, 161, 168, 179, 193, 195], "high": [28, 56, 70, 77, 190, 192, 193], "therefor": [28, 35, 56, 76, 77], "believ": [28, 56], "To": [28, 56, 191, 192, 195], "improv": [28, 56, 195], "perform": [28, 40, 45, 50, 51, 52, 54, 56, 77, 84, 135, 148, 150, 151, 152, 162, 164, 167, 168, 170, 190, 192, 193, 195], "rather": [28, 56, 191, 192, 195], "do": [28, 31, 34, 35, 45, 50, 56, 70, 71, 76, 84, 98, 135, 157, 158, 167, 191], "sampl": [28, 56, 70, 73, 80, 83, 90, 160, 166, 179, 196], "seen": [28, 56, 71, 73, 81, 83], "correspond": [28, 31, 32, 33, 34, 35, 49, 50, 53, 56, 68, 69, 70, 73, 74, 76, 83, 84, 90, 91, 92, 94, 101, 109, 110, 119, 125, 130, 133, 160, 161, 163, 164, 166, 167, 170], "either": [28, 31, 32, 34, 35, 53, 56, 76, 80, 85, 94, 131, 161, 163, 164, 165, 167, 168, 170, 195], "ignor": [28, 33, 56, 80, 84, 101, 131, 132, 195], "bf": [28, 56, 58, 195], "travers": [28, 29, 30, 56, 58, 149, 162, 166, 179, 195, 196], "need": [28, 45, 56, 59, 71, 127, 128, 129, 135, 163, 164, 165, 166, 167, 168, 170, 190, 192], "consid": [28, 52, 54, 56, 60, 69, 70, 93, 131, 168, 191, 195], "int": [28, 30, 31, 32, 34, 35, 45, 49, 50, 54, 56, 67, 68, 74, 75, 76, 77, 80, 84, 85, 87, 93, 94, 136, 137, 138, 161, 164, 169], "estim": [28, 49, 56, 68, 164], "higher": [28, 47, 55, 56, 78, 79, 80, 166, 193], "give": [28, 51, 52, 54, 56, 58, 59, 69, 87, 93], "better": [28, 31, 34, 35, 50, 56, 76, 84, 167, 192, 195], "approxim": [28, 31, 34, 35, 49, 50, 56, 59, 68, 76, 84, 164, 167], "content": [28, 29, 30, 56, 93], "obtain": [28, 56], "defin": [28, 31, 34, 56, 69, 71, 73, 75, 76, 77, 81, 83, 88, 90, 101, 115, 165], "assourc": 28, "insid": [28, 56], "__2": 28, "__": 28, "__1": 28, "ensur": [28, 50, 51, 52, 56, 84, 162, 164, 167, 168, 170], "scale": [28, 56, 59, 67, 175, 190, 191, 192], "highest": [28, 56], "possibl": [28, 56, 192], "cross": [28, 56], "everi": [28, 35, 56, 70, 76, 84, 165, 167, 191], "Not": [28, 56], "random": [28, 50, 56, 67, 73, 80, 83, 84, 85, 90, 160, 166, 167, 175, 179], "gener": [28, 32, 48, 56, 70, 94, 102, 105, 131, 133, 161, 166, 169, 170, 175, 179, 193, 195, 196], "behavior": [28, 50, 56, 71, 84, 193], "system": [28, 56, 75, 77], "time": [28, 31, 34, 35, 50, 51, 52, 56, 76, 77, 84, 162, 164, 167, 168, 170, 195], "np": [28, 56, 75, 77, 80, 149, 169, 170], "dictionari": [28, 31, 32, 33, 53, 55, 56, 70, 76, 94, 161, 195], "might": [28, 56, 131, 132], "ascend": [28, 56], "bc": [28, 56], "depth_limit": [29, 30, 51, 162], "i_start": 29, "return_predecessor": [29, 86, 93], "find": [29, 30, 32, 42, 50, 51, 75, 77, 84, 87, 91, 92, 94, 157, 158, 161, 167, 191, 193], "predecessor": [29, 30, 51, 52, 58, 93, 162, 168, 195], "breadth": [29, 30, 51, 162, 179, 192, 195], "first": [29, 30, 51, 57, 67, 71, 72, 73, 77, 81, 83, 88, 89, 90, 115, 162, 163, 164, 166, 167, 168, 179, 192, 195], "wa": [29, 46, 50, 51, 52, 58, 75, 77, 80, 84, 93, 160, 192], "begin": [29, 51], "compon": [29, 32, 51, 70, 94, 161, 169, 170, 179, 195, 196], "onli": [29, 32, 47, 48, 51, 56, 57, 58, 59, 67, 69, 70, 75, 77, 78, 79, 80, 85, 94, 115, 128, 135, 136, 138, 139, 145, 146, 147, 149, 150, 151, 152, 159, 161, 162, 165, 169, 195], "per": [29, 45, 50, 51, 52, 148, 160, 175, 195], "allow": [29, 51, 59, 134, 146, 150, 151, 152, 162, 191, 192, 195, 196], "limit": [29, 30, 31, 34, 35, 50, 51, 76, 84, 162, 167, 192], "depth": [29, 30, 51, 80, 85, 162], "search": [29, 30, 51, 162, 179, 195, 196], "ident": [29, 71, 72, 81, 88, 89, 109, 110, 119, 125], "compat": [29, 55, 61, 72, 82, 84, 86, 89, 94, 123, 131, 132, 161, 190, 194, 196], "non": [29, 31, 32, 34, 35, 45, 50, 70, 71, 76, 84, 94, 161, 167, 191], "eg": [29, 32, 94, 135, 146, 161], "rais": [29, 32, 94, 161], "typeerror": [29, 32, 94, 161], "otherwis": [29, 46, 80, 98, 134, 137, 138, 166], "th": [29, 30, 31, 34, 58, 69], "posit": [29, 30, 59, 80], "immedi": [29, 30], "preced": [29, 30, 168], "equival": [29, 30, 93], "describ": [29, 30, 47, 78, 79, 93, 131, 132, 192], "abov": [29, 30, 59, 93, 169, 192, 195], "tupl": [29, 30, 38, 85, 93, 133, 162, 163, 164, 166, 167, 168, 170], "ndarrai": [29, 30, 32, 93, 94, 161], "reconstruct": [29, 30, 93, 160], "return_sp_count": [29, 30], "3": [29, 30, 75, 77, 80, 85, 132, 133, 134, 135, 136, 139, 140, 142, 143, 144, 145, 146, 149, 163, 166, 167, 168, 169, 191, 195], "plu": [29, 30, 141], "sp_counter": [29, 30], "lead": [29, 30, 31, 34, 35, 47, 50, 76, 78, 79, 84, 167], "revers": [30, 76], "sort_neighbor": 30, "process": [30, 45, 70, 148, 159, 195], "max_it": [31, 34, 35, 47, 49, 50, 59, 68, 76, 78, 79, 84, 107, 164, 195], "100": [31, 34, 35, 47, 49, 50, 54, 59, 68, 69, 71, 76, 78, 79, 84, 91, 92, 164, 167, 195], "tol": [31, 34, 35, 49, 50, 68, 76, 84, 107, 164, 175], "1e": [31, 34, 35, 49, 50, 54, 68, 69, 76, 84, 91, 92, 163, 175], "06": [31, 34, 35, 76], "eigenvector": [31, 34, 84, 91, 92, 163, 167, 179, 193], "its": [31, 34, 70, 74, 77, 191, 192], "vector": [31, 34], "x": [31, 34, 59], "equat": [31, 34], "maximum": [31, 34, 35, 47, 49, 50, 52, 59, 68, 76, 78, 79, 80, 84, 85, 91, 92, 93, 157, 163, 164, 165, 166, 167, 168, 179, 195], "iter": [31, 34, 35, 47, 49, 50, 59, 68, 71, 76, 77, 78, 79, 84, 91, 92, 109, 110, 119, 125, 163, 164, 165, 167, 195], "befor": [31, 34, 35, 49, 50, 58, 68, 76, 84, 115, 164, 167, 195], "answer": [31, 34, 35, 49, 50, 68, 76, 84, 164, 167, 192], "execut": [31, 34, 35, 50, 54, 69, 76, 77, 84, 167, 195], "earli": [31, 34, 35, 47, 50, 76, 78, 79, 84, 167, 192], "exit": [31, 34, 35, 50, 76, 84, 167], "solver": [31, 34, 35, 50, 76, 84, 91, 92, 167], "reach": [31, 34, 35, 50, 51, 52, 58, 76, 84, 93, 167], "converg": [31, 34, 35, 50, 59, 76, 84, 163, 165, 167], "toler": [31, 34, 35, 49, 50, 68, 76, 84, 91, 92, 163, 164, 165, 167], "6": [31, 34, 35, 54, 69, 76, 132, 135, 139, 140, 143, 144, 145, 146, 163, 167], "small": [31, 34, 35, 49, 50, 68, 71, 76, 84, 164, 167, 193], "magnitud": [31, 34, 35, 49, 50, 68, 76, 84, 164, 167, 195], "lower": [31, 34, 35, 47, 50, 59, 67, 76, 78, 79, 80, 84, 91, 92, 166, 167], "0f": [31, 34, 35, 50, 76, 84, 167], "0e": [31, 34, 35, 49, 50, 68, 76, 84, 107, 164, 167], "too": [31, 34, 35, 50, 76, 84, 167], "due": [31, 34, 35, 50, 76, 84, 167], "numer": [31, 34, 35, 50, 76, 84, 167, 192], "roundoff": [31, 34, 35, 50, 76, 84, 167], "usual": [31, 34, 35, 50, 55, 76, 84, 167, 192], "accept": [31, 34, 35, 50, 76, 84, 167, 195], "ec": [31, 34], "weak": [32, 161], "return_label": [32, 94, 161], "strongli": [32, 70, 94, 169, 195], "weakli": [32, 48, 77, 161, 170, 195], "attach": [32, 48, 94, 161, 169, 170], "alreadi": [32, 47, 48, 49, 55, 68, 71, 72, 73, 78, 79, 81, 83, 84, 88, 89, 90, 94, 161], "fit": [32, 94, 161, 175], "32b": [32, 94, 161], "digraph": [32, 80, 94, 161, 175, 190, 195], "move": [32, 94, 161], "j": [32, 47, 54, 76, 77, 78, 79, 80, 94, 161, 190, 193], "along": [32, 49, 59, 68, 94, 150, 152, 161], "csgraph": [32, 94, 161], "progress": [32, 94, 161, 195], "strong": [32, 59, 94], "python": [32, 33, 55, 94, 145, 146, 161, 175, 191, 192], "shape": [32, 94, 161], "num": [32, 94, 161], "degree_typ": 33, "core": [33, 62, 74, 179, 193, 195, 196], "maxim": [33, 74, 75, 77, 92], "degre": [33, 35, 53, 67, 74, 76, 119, 125, 160, 179], "belong": 33, "self": [33, 59, 67, 74, 105, 118, 191], "loop": [33, 67, 74, 118], "parallel": [33, 45, 74, 157, 158, 175, 193], "while": [33, 59, 74, 80, 166, 191, 195], "thei": [33, 59, 70, 74, 75, 77], "don": [33, 74], "t": [33, 74, 190, 193], "particip": [33, 74], "calcul": [33, 35, 36, 74, 76], "determin": [33, 54, 55, 69], "valid": [33, 45, 190], "being": [33, 59, 131, 132, 136, 192, 195], "incom": [33, 49, 68, 164], "outgo": [33, 49, 50, 68, 80, 84, 85, 164, 166, 167], "bidirect": 33, "respect": [33, 164, 170], "releas": [33, 168, 192, 195], "warn": 33, "input_graph": [34, 35, 47, 48, 49, 50, 51, 52, 55, 59, 71, 73, 81, 83, 88, 90], "dcg": [34, 35, 36, 48, 49, 50, 51, 52, 151], "init": [34, 35, 48, 49, 50, 51, 52, 151], "see": [34, 35, 48, 49, 50, 51, 52, 55, 72, 82, 86, 89, 195], "doc": [34, 35, 48, 49, 50, 51, 52], "rapid": [34, 35, 48, 49, 50, 51, 52, 61, 175, 190, 192, 193, 195, 196], "ai": [34, 35, 48, 49, 50, 51, 52, 190, 193], "stabl": [34, 35, 48, 49, 50, 51, 52], "html": [34, 35, 48, 49, 50, 51, 52], "chunksiz": [34, 35, 36, 48, 49, 50, 51, 52, 151, 175], "get_chunks": [34, 35, 48, 49, 50, 51, 52, 151, 175], "ddf": [34, 35, 47, 48, 49, 50, 51, 52, 151, 159], "src": [34, 35, 48, 49, 50, 51, 52, 56, 70, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 151, 156, 162, 163, 166, 167, 168, 170, 175], "dst": [34, 35, 48, 49, 50, 51, 52, 56, 70, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 151, 156, 162, 163, 166, 167, 168, 170, 175], "dg": [34, 35, 48, 49, 50, 51, 52, 148], "alpha": [35, 50, 76, 84, 107, 165, 167], "beta": [35, 76, 165, 195], "nstart": [35, 49, 50, 68, 76, 84], "katz": [35, 76, 165, 179, 193, 195], "attenu": [35, 76, 165], "factor": [35, 45, 50, 67, 76, 80, 84, 165, 166, 167, 192], "degree_max": [35, 76], "out": [35, 50, 70, 74, 76, 80, 84, 109, 110, 119, 125, 147, 149, 160, 166, 175, 195], "alpha_max": [35, 76], "lambda_max": [35, 76], "largest": [35, 76, 191], "eigenvalu": [35, 76, 165], "sinc": [35, 76, 128, 191, 192, 195], "lesser": [35, 76], "equal": [35, 36, 45, 50, 76, 84, 91, 92, 167], "greater": [35, 50, 76, 84, 91, 167], "never": [35, 76], "exce": [35, 76], "thu": [35, 50, 59, 76, 84, 167], "turn": [35, 70, 76, 192], "fulfil": [35, 76], "scalar": [35, 76], "guess": [35, 49, 50, 68, 76, 84, 164, 167], "pr": [35, 50, 84, 107], "input_path": 36, "appropri": 36, "get": [36, 71, 122, 124, 139, 175], "netscienc": [36, 157, 158, 193], "shut": 37, "down": [37, 192], "clean": [37, 45, 175, 195], "up": [37, 45, 133, 175], "resourc": [37, 45, 162, 163, 164, 165, 166, 167, 168, 170, 175], "2d": [38, 45, 148], "prow": [38, 45, 148], "pcol": [38, 45, 148], "partition_typ": [38, 45], "raft": [39, 45], "instanc": [39, 44, 51, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 81, 83, 87, 88, 89, 90, 130, 131, 132, 133, 134, 135, 146, 147], "handl": [40, 41, 45, 162, 163, 164, 165, 166, 167, 168, 170], "nccl": [40, 45], "sid": [41, 43], "worker": [41, 42, 43, 44, 45, 54, 69, 162], "sessionst": [41, 42], "sessionid": [42, 43], "p2p": [45, 175], "commun": [45, 78, 79, 179, 193, 196], "right": 45, "after": [45, 47, 59, 78, 79], "client": [45, 175], "run": [45, 51, 52, 55, 80, 85, 133, 162, 163, 164, 165, 166, 167, 168, 170, 175, 190, 191, 192, 195], "manag": [45, 162, 192], "underli": [45, 163, 164, 165, 166, 167, 168, 170], "ucx": 45, "across": [45, 67, 71, 175], "recommend": 45, "also": [45, 52, 70, 93, 151, 152, 157, 175, 191, 192, 195], "destroi": [45, 175], "when": [45, 47, 54, 56, 59, 69, 70, 71, 78, 79, 84, 135, 141, 157, 158, 165, 167, 192], "longer": 45, "so": [45, 59, 71, 76, 151, 152, 192, 195], "pre": 45, "mnmg": 45, "total": [45, 109, 137, 138, 192, 195], "ani": [45, 50, 73, 83, 84, 90, 105, 149, 151, 152, 192, 195], "p": [45, 77, 80, 148, 166, 193], "dask_cuda": [45, 175], "localcudaclust": [45, 175], "work": [45, 54, 69, 98, 149, 191, 192, 195], "here": [45, 55, 84, 190], "done": [45, 77, 160, 191, 192], "close": [45, 54, 69, 175], "resolut": [47, 78, 79], "optim": [47, 50, 78, 79, 84, 167], "vd": [47, 79, 193], "blondel": [47, 79, 193], "l": [47, 76, 77, 78, 79, 193], "guillaum": [47, 79, 193], "r": [47, 67, 79, 190, 193], "lambiott": [47, 79, 193], "lefebvr": [47, 79, 193], "fast": [47, 77, 79, 193], "unfold": [47, 79, 193], "hierarchi": [47, 79, 193], "larg": [47, 70, 71, 79, 190, 193], "network": [47, 59, 77, 79, 80, 84, 167, 192, 193, 195], "stat": [47, 79, 193], "mech": [47, 79, 193], "p10008": [47, 79, 193], "2008": [47, 77, 79, 193], "arxiv": [47, 55, 79, 80], "org": [47, 55, 76, 77, 79, 80, 193], "ab": [47, 55, 79, 80], "0803": [47, 79], "0476": [47, 79], "control": [47, 59, 67, 78, 79], "level": [47, 59, 78, 79, 160], "termin": [47, 59, 78, 79], "No": [47, 59, 78, 79, 164], "occur": [47, 59, 67, 78, 79], "manner": [47, 59, 78, 79], "gamma": [47, 78, 79], "formula": [47, 78, 79], "chang": [47, 54, 78, 79, 191, 192, 195], "smaller": [47, 78, 79, 81, 83, 151, 152, 165], "fewer": [47, 78, 79], "larger": [47, 55, 78, 79, 175, 195], "part": [47, 55, 67, 71, 75, 77, 78, 79, 191, 195], "modularity_scor": [47, 78, 79], "global": [47, 78, 79], "wcc": 48, "05": [49, 50, 55, 68, 84, 91, 92, 107, 175], "hub": [49, 59, 68, 164], "author": [49, 68, 164], "link": [49, 68, 164, 179, 196], "norm": [49, 68], "flag": [49, 67, 68, 160, 163, 165, 191], "hubsandauthor": [49, 68], "three": [49, 56, 59, 68, 150, 159], "50": [49, 59, 68], "85": [50, 84, 107, 167, 193], "person": [50, 84, 195], "precomputed_vertex_out_weight": [50, 84, 167], "multipl": [50, 57, 61, 67, 70, 73, 83, 90, 135, 141, 146, 150, 151, 152, 175, 192], "power": [50, 84, 167, 192], "damp": [50, 84, 167], "probabl": [50, 67, 84, 167], "follow": [50, 61, 62, 71, 84, 167, 191, 195], "standard": [50, 84, 167], "teleport": [50, 84, 167], "strictli": [50, 84, 167], "subset": [50, 84, 146, 167, 191], "precomput": [50, 74, 84, 167], "sum": [50, 52, 84, 93, 167, 168], "01": [50, 84, 167], "00001": [50, 84, 91, 92, 167], "from_": [50, 84], "_edgelist": [50, 84], "assum": [50, 84, 138], "contigu": [50, 84, 143, 144], "actual": [50, 71, 84, 149], "gap": [50, 84], "zero": [50, 54, 69, 71, 84, 149, 169], "miss": [50, 84], "desir": [50, 75, 77, 84, 151, 152], "return_dist": 51, "check_start": 51, "extens": [51, 52, 162, 164, 167, 168, 170], "test": [51, 52, 141, 162, 164, 167, 168, 170], "validit": [51, 52, 162, 164, 167, 168, 170], "expens": [51, 52, 135, 162, 163, 164, 165, 167, 168, 170], "increas": [51, 52, 84, 162, 164, 167, 168, 170], "cutoff": [52, 93, 168], "check_sourc": 52, "unreach": [52, 58, 93, 168], "infin": [52, 93, 168], "denot": [52, 93, 155, 168], "dc": 53, "cost": [54, 69], "num_row": 54, "num_column": 54, "epsilon": [54, 69, 163, 165, 167], "hungarian": [54, 179, 193], "against": [54, 69, 146, 190, 192], "dens": [54, 71], "unstabl": 54, "subject": 54, "lowest": [54, 69], "exactli": [54, 69], "job": [54, 69], "major": [54, 191], "task": 54, "enough": [54, 69, 71], "code": [54, 69, 151, 152, 190, 191, 195], "unus": [54, 69, 102], "overal": [54, 69, 135, 191], "util": [54, 69, 192], "create_random_bipartit": [54, 69], "costs_flatten": 54, "flatten": 54, "min_weight": 55, "ensemble_s": 55, "16": [55, 195], "ensembl": [55, 179, 195], "truncat": 55, "louvain": [55, 78, 179, 190, 193, 195], "permut": 55, "final": 55, "found": [55, 70], "full": 55, "1809": 55, "05578": 55, "further": [55, 80, 166], "minimum": [55, 57, 158, 179], "edgeweight": 55, "left": [55, 162], "mai": [55, 128, 135], "produc": [55, 192], "qualiti": [55, 59], "some": [55, 70, 151, 152], "over": [56, 57, 75, 157, 158, 192], "automat": [56, 131, 175], "switch": [56, 59, 192], "differ": [56, 71, 73, 83, 90, 128, 194], "transform": [56, 70], "taken": 57, "g_ego": 57, "span": [57, 157, 158, 179, 192], "tree": [57, 179, 196], "forest": [57, 157, 158], "sssp": [58, 86, 87, 195], "filter": [58, 109, 110, 119, 125], "reachabl": 58, "500": [59, 84, 107, 167], "pos_list": 59, "outbound_attraction_distribut": 59, "lin_log_mod": 59, "prevent_overlap": 59, "edge_weight_influ": 59, "jitter_toler": 59, "barnes_hut_optim": 59, "barnes_hut_theta": 59, "scaling_ratio": 59, "strong_gravity_mod": 59, "graviti": 59, "verbos": 59, "callback": 59, "forceatlas2": 59, "continu": 59, "layout": [59, 179, 196], "handi": 59, "visual": [59, 190], "peak": 59, "memori": [59, 70, 71, 175, 190, 191, 192], "alloc": [59, 195], "30": [59, 175, 193], "forc": [59, 179, 195], "atla": [59, 179, 195], "good": [59, 192], "short": 59, "term": [59, 192], "achiev": [59, 195], "1000": [59, 163, 195], "discourag": 59, "y": 59, "attract": 59, "outbound": 59, "less": [59, 80, 166], "push": 59, "border": 59, "model": [59, 191, 193, 195], "lin": 59, "log": 59, "make": [59, 70, 80, 85, 166, 175, 190, 191, 192], "tight": 59, "prevent": [59, 134, 191], "overlap": [59, 82, 83, 179, 190, 195], "how": [59, 195], "much": 59, "influenc": 59, "swing": 59, "speed": [59, 192], "barn": 59, "hut": 59, "slower": 59, "exact": 59, "version": [59, 61, 76, 165, 175, 190], "tradeoff": 59, "accuraci": 59, "repuls": 59, "want": [59, 175], "regular": 59, "linlog": 59, "readjust": 59, "distant": 59, "sometim": [59, 195], "domin": 59, "island": 59, "drift": 59, "awai": 59, "info": 59, "inter": 59, "graphbaseddimredcallback": 59, "intercept": 59, "state": [59, 190], "train": [59, 190], "usag": 59, "customcallback": 59, "def": 59, "on_preprocess_end": 59, "print": [59, 133, 135, 145, 146, 169, 170], "copy_to_host": 59, "on_epoch_end": 59, "on_train_end": 59, "po": 59, "create_us": [60, 61, 62, 63, 64, 65, 66, 67, 133, 134, 135, 145, 175], "structur": [60, 61, 62, 63, 64, 65, 66, 67, 70, 150, 151, 152, 192, 193, 195], "graph_class": [60, 61, 62, 63, 64, 65, 66, 67, 70], "csr": [60, 169, 170], "representaion": [61, 62], "from_pandas_edge_list": 61, "But": [61, 71, 195], "target": [61, 62, 70, 87], "terminologi": [61, 62, 194, 196], "num_edg": [67, 169, 175], "b": [67, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 175, 190, 193], "clip_and_flip": [67, 175], "scramble_vertex_id": [67, 175], "mg": [67, 85, 179, 196], "recurs": 67, "mat": 67, "second": [67, 71, 72, 73, 81, 83, 88, 89, 90, 115, 163, 164, 166, 167, 168], "thrid": 67, "triangular": [67, 71, 128], "diagon": [67, 71], "scrambl": 67, "bit": 67, "break": [67, 192], "correl": 67, "construct": [67, 71, 88, 130, 135, 145, 146, 195], "benchmark": [67, 190], "raw": 67, "potenti": 67, "duplic": [67, 73, 83, 90, 134, 135, 141, 150, 151, 152], "edgefactor": 67, "57": [67, 193], "19": 67, "42": 67, "instead": [67, 70, 149, 150, 151, 152, 162], "symmetr": [69, 128, 151, 152, 162, 179], "As": 69, "disjoint": 69, "variabl": 69, "reflect": 69, "particular": [69, 190, 191], "In": [69, 71, 73, 77, 80, 81, 83, 85, 190, 192, 193, 195], "implicitli": 69, "dropna": 70, "categori": 70, "drop_edge_attr": 70, "categorical_metadata": 70, "delim": 70, "nodeid": 70, "node_id": 70, "eventid": 70, "event_id": 70, "attribid": 70, "attrib_id": 70, "nodetyp": 70, "node_typ": 70, "edgetyp": 70, "edge_typ": [70, 130], "reveal": 70, "relationship": [70, 192], "uniqu": [70, 98, 105, 106, 140, 162], "event": 70, "dimension": 70, "entri": 70, "anoth": [70, 192], "distinct": 70, "metadata": 70, "about": [70, 131, 132, 135], "common": 70, "transit": [70, 194, 196], "those": [70, 71, 88, 109, 110, 119, 125, 133, 192, 195], "convers": [70, 179], "best": [70, 192, 195], "categor": 70, "group": [70, 75, 77, 193], "kind": 70, "sequenc": [70, 191], "null": 70, "omit": 70, "hypernod": 70, "dict": [70, 84], "appear": [70, 151, 152], "exclud": [70, 71, 130], "categoricaldtyp": 70, "These": 70, "typic": [70, 77, 195], "low": 70, "cardin": 70, "save": 70, "signific": 70, "amount": [70, 77, 195], "select": [70, 130, 135, 140, 145, 146, 147, 190], "join": 70, "entiti": 70, "hyper": 70, "vertex_pair": [71, 72, 73, 81, 83, 88, 89, 90], "similar": [71, 73, 81, 83, 90, 190], "arbitrari": [71, 73, 81, 83, 88, 90], "volum": [71, 73, 81, 83, 88, 90], "intersect": [71, 73, 81, 83, 88, 90, 146], "divid": [71, 73, 81, 83, 88, 90, 148], "union": [71, 73], "context": [71, 73, 81, 83], "neighborhood": [71, 73, 81, 83, 160], "strength": [71, 73, 81, 83], "rel": [71, 72, 73, 81, 83, 88, 89, 90, 109, 110, 119, 125], "vice": [71, 73, 81, 83, 88], "versa": [71, 73, 81, 83, 88], "except": [71, 73, 81, 83, 88], "thrown": [71, 73, 81, 83, 88], "jaccard_coeffici": 71, "absenc": [71, 88], "coeffici": [71, 72, 73, 81, 83, 88, 89, 90, 179, 190, 195], "upper": [71, 128], "well": [71, 78, 192, 193], "directli": 71, "technic": [71, 77, 193], "lazi": 71, "dereferenc": 71, "feasibl": 71, "000": 71, "would": [71, 166, 175, 191], "4": [71, 75, 77, 132, 135, 137, 139, 140, 143, 144, 145, 146, 169, 170, 175, 190, 193], "9": [71, 78, 109, 110, 119, 125, 169, 193], "billion": [71, 192], "your": [71, 175, 190, 195], "patienc": 71, "interest": [71, 190], "solut": [71, 77, 175, 192], "get_two_hop_neighbor": 71, "rememb": 71, "fill": 71, "entir": [71, 109, 110, 119, 125, 159], "request": [71, 162], "ll": 71, "consist": [71, 72, 73, 81, 83, 85, 88, 89, 90, 192], "jaccard_coeff": [71, 72, 73], "ebunch": [72, 82, 89], "jaccard": [72, 73, 179, 190, 195], "10": [73, 76, 77, 78, 83, 90, 162, 191, 193], "avoid": [73, 83, 90, 195], "drop_dupl": [73, 83, 90], "reset": [73, 83, 90], "reset_index": [73, 83, 90], "inplac": [73, 83, 90, 191], "w": [73, 83, 90], "len": [73, 83, 90, 133, 169, 170], "core_numb": 74, "neg": [74, 93, 162, 168], "main": [74, 191], "kcoregraph": 74, "truss": [75, 77, 179, 193, 195], "specif": [75, 77, 101, 145, 146, 147], "avail": [75, 77, 175], "cuda": [75, 77, 175, 190, 192], "11": [75, 77, 142, 143], "least": [75, 77, 162], "triangl": [75, 77, 128, 159, 179, 193, 195], "tighlti": [75, 77], "knit": [75, 77], "relax": [75, 76, 77, 165], "cliqu": [75, 77], "computation": [75, 77], "demand": [75, 77], "known": [75, 77, 192], "hard": [75, 77], "extract": [75, 77, 135, 147, 179, 195], "g_truss": [75, 77], "NOT": 75, "k_subgraph": [75, 77], "foster": [76, 165, 193], "reduc": [76, 165, 195], "complex": [76, 165, 192], "o": [76, 77, 165, 190, 193], "On": [76, 193], "opposit": 76, "flip": 76, "muth": [76, 193], "q": [76, 80, 166, 193], "potterat": [76, 193], "et": [76, 77, 193], "al": [76, 77, 193], "mathemat": [76, 192, 193], "organ": [76, 193], "theori": [76, 192, 193], "2001": [76, 193], "7": [76, 132, 135, 139, 140, 142, 143, 144, 145, 146, 169, 193], "275": [76, 193], "doi": [76, 77, 78, 193], "1023": 76, "1013470632383": 76, "1953": [76, 193], "statu": [76, 190, 193], "deriv": [76, 193], "sociometr": [76, 193], "analysi": [76, 77, 179, 190, 192, 193, 195, 196], "psychometrika": [76, 193], "18": [76, 193], "39": [76, 193], "43": [76, 193], "kc": 76, "use_weight": 77, "contrast": 77, "tractabl": 77, "build": [77, 194], "block": [77, 195], "polnymomi": 77, "take": [77, 150, 151, 152], "mani": [77, 190, 192], "oper": [77, 145, 146, 162, 163, 164, 165, 167, 168, 191], "monoton": 77, "shrink": [77, 193], "fairli": 77, "reason": [77, 191], "shown": 77, "them": [77, 150, 151, 152], "cohen": [77, 193], "cohes": [77, 193], "social": [77, 192, 193], "nation": [77, 193], "secur": [77, 193], "agenc": [77, 193], "report": [77, 78, 193], "green": [77, 190, 193], "fox": [77, 193], "kim": [77, 193], "f": [77, 169, 170, 193], "busato": [77, 193], "quickli": [77, 193], "haystack": [77, 193], "ieee": [77, 190, 193], "extrem": [77, 190, 193], "confer": [77, 80, 193, 194], "hpec": [77, 190, 193], "2017": [77, 193], "1109": [77, 193], "8091038": [77, 193], "yalamanchili": [77, 193], "munguia": [77, 193], "irregular": [77, 193], "applic": [77, 192, 193], "architectur": [77, 192, 194], "ia3": [77, 193], "2014": [77, 193], "traag": [78, 193], "waltman": [78, 193], "van": [78, 193], "eck": [78, 193], "2019": [78, 193], "scientif": [78, 193], "5233": 78, "1038": 78, "s41598": 78, "019": 78, "41695": 78, "z": 78, "start_vertic": [80, 85], "max_depth": [80, 85, 166], "compress_result": [80, 166], "walk": [80, 85, 166, 179, 190], "under": [80, 166], "framework": [80, 192], "coalesc": [80, 85], "pad": [80, 85, 166], "likelihood": [80, 166], "backtrack": [80, 166], "previou": [80, 168], "previous": [80, 166], "visit": [80, 166], "local": [80, 166, 193], "closer": [80, 166], "likeli": [80, 166], "vertex_path": [80, 85], "edge_weight_path": [80, 85], "grover": 80, "leskovec": [80, 193], "scalabl": 80, "featur": [80, 175, 190, 193], "learn": [80, 190, 192], "proceed": [80, 190, 193], "22nd": 80, "acm": [80, 190, 193], "sigkdd": [80, 190, 193], "knowledg": [80, 190, 193], "discoveri": [80, 190, 193], "mine": [80, 190, 193], "1607": 80, "00653": 80, "path_siz": 80, "8": [80, 131, 132, 135, 138, 139, 143, 144, 145, 146, 193], "overlap_coeff": [81, 83], "dangl": 84, "depend": [84, 87, 167], "itself": [84, 167], "descreas": [84, 167], "toward": [84, 167], "free": 84, "random_walks_typ": 85, "uniform": 85, "use_pad": 85, "legacy_result_typ": 85, "fixm": [85, 164], "sg": [85, 149, 162], "na": [85, 134], "bias": 85, "node2vec": [85, 179], "max_path_length": 85, "length": [85, 159], "get_edgelist": 85, "_": [85, 191], "overwrit": [86, 93], "alia": [86, 123], "detail": 86, "coo": [87, 150, 151, 152], "twice": [88, 90], "sorensen_coeff": [88, 89, 90], "sorensen": [89, 90, 179], "num_clust": [91, 92], "num_eigen_vect": [91, 92], "evs_toler": [91, 92], "evs_max_it": [91, 92], "kmean_toler": [91, 92], "kmean_max_it": [91, 92], "spectral": [91, 92, 179, 195], "balanc": 91, "eigensolv": [91, 92], "mean": [91, 92, 169, 191], "cycl": [93, 159, 168], "renumber_id_typ": 95, "unrenumbered_id_typ": 95, "multigpu": 95, "singlegpu": 95, "renumber_and_seg": 95, "vertex_column_s": 95, "id_column_nam": 98, "col_nam": [98, 106], "collect": [98, 101, 106, 136, 139, 192], "combin": 98, "appli": [98, 135], "addit": [98, 132, 133, 141], "static": [99, 100, 102, 103, 104, 192], "helper": [99, 100, 102, 175, 179, 196], "external_column": 101, "start_with_nam": 102, "col": [102, 170], "src_col_nam": [103, 104], "dst_col_nam": [103, 104], "src_col_names_to_replac": 105, "dst_col_names_to_replac": 105, "all_col_nam": 105, "renumbered_src_col_nam": [105, 107], "renumbered_dst_col_nam": [105, 107], "collid": 105, "vertex_id": [106, 139], "matter": 106, "add_internal_vertex_id": 106, "ourder": 107, "number_map": 107, "pagerank": [107, 175, 179, 190, 191, 193, 195], "vertex_subset": [109, 110, 119, 125], "incid": [109, 149], "displai": [109, 110, 119, 125, 127, 128, 129], "all_df": 109, "subset_df": 109, "12": [109, 110, 119, 125, 193], "in_degre": 110, "out_degre": 110, "delet": [111, 112], "view_edge_list": 113, "apart": 115, "directed_edg": 122, "number_of_vertic": [123, 146], "could": [128, 135, 191, 192], "trianglar": 128, "networx": 128, "henc": 128, "swap": 128, "cusd": 128, "individu": 130, "later": [130, 192], "annot": 130, "edge_property_nam": 130, "propertygraph": [130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], "vertex_property_nam": 130, "vertex_typ": 130, "edge_id_col_nam": [131, 142, 143], "type_nam": [131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146], "property_column": [131, 132], "interfac": [131, 132, 169, 170, 192], "unspecifi": 131, "transact": [131, 193], "some_properti": [131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "99": [131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "22": [131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "98": [131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "34": [131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "97": [131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146], "56": [131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146], "96": [131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "88": [131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "d": [131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 190, 193], "pg": [131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "get_num_vertic": [131, 137], "associated": 132, "add_edge_data": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "etyp": [132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 144, 145, 146], "vert_df": [132, 135, 139, 145, 146], "vert_id": [132, 135, 139, 144, 145, 146], "v_prop": [132, 135, 139, 144, 145, 146], "vtype": [132, 135, 139, 145, 146], "get_vertex_data": 132, "sort_index": [132, 133, 136, 139], "axi": [132, 133, 136, 139], "_type_": [132, 133, 135, 136, 139, 145, 146], "_vertex_": [132, 139], "edge_vertex_col_nam": 133, "subclass": [133, 134], "been": [133, 135, 192], "prior": [133, 135, 146, 151, 152], "extract_subgraph": [133, 145, 146, 147], "meta": [133, 135], "look": 133, "correct": [133, 151, 152, 162], "algo_result": 133, "algo_result2": 133, "_edge_id_": [133, 136], "edge_prop_df": 134, "edge_weight_properti": [134, 135], "default_edge_weight": [134, 135], "check_multi_edg": [134, 135], "renumber_graph": [134, 135, 145], "conain": 134, "maintain": [134, 191], "relev": [135, 165], "propertyselect": [135, 140, 145, 146, 147], "select_vertic": [135, 140], "select_edg": [135, 140], "whose": 135, "field": [135, 192], "verifi": 135, "form": [135, 162], "manual": 135, "algo": 135, "futur": 135, "annotate_datafram": 135, "add_vertex_data": [135, 139, 144, 145, 146], "edge_id": [136, 142, 143], "_dst_": 136, "_src_": 136, "include_edge_data": 138, "were": 138, "constrain": 138, "get_num_edg": 138, "slice": 139, "int64": 140, "classmethod": [141, 142], "get_edge_data": [141, 142], "stop": [143, 144, 162], "inclus": [143, 144], "df2": [143, 191], "95": 143, "24": 143, "94": 143, "36": 143, "93": 143, "etype1": 143, "etype2": 143, "vert_df1": 144, "vtype1": 144, "vert_df2": 144, "vtype2": 144, "expr": [145, 146], "evalu": [145, 146], "express": [145, 146], "criteria": 145, "from_previous_select": 146, "vertex_selection_seri": 147, "edge_selection_seri": 147, "select_": 147, "ngpu": 148, "rectangular": 148, "simpli": [149, 191, 192, 195], "pull": 149, "vert": 149, "svert": 149, "source_col_nam": 150, "dest_col_nam": 150, "value_col_nam": 150, "associ": [150, 151, 152, 193], "dest": 150, "di": [150, 151, 152], "val": [150, 191], "src_name": [151, 152], "dst_name": [151, 152], "weight_nam": [151, 152], "replic": [151, 152], "That": [151, 152, 195], "data1": [151, 152], "data2": [151, 152], "arbitrarili": [151, 152], "pick": [151, 152, 195], "keep": [151, 152], "caller": [151, 152], "dask": [151, 160, 175, 179, 192, 196], "sym_ddf": 151, "sym_df": 152, "boruvka": [157, 158], "ignore_nan": [157, 158], "mst": [157, 158], "msf": [157, 158], "g_mst": [157, 158], "start_list": [159, 160], "fanout_v": 160, "with_replac": 160, "is_edge_id": 160, "fanout": 160, "branch": 160, "fan": 160, "resourcehandl": [162, 163, 164, 165, 166, 167, 168, 170], "_gpugraph": [162, 163, 164, 165, 166, 167, 168, 170], "bool_t": [162, 163, 164, 165, 166, 167, 168, 170], "direction_optim": 162, "int32_t": 162, "compute_predecessor": [162, 168], "do_expensive_check": [162, 163, 164, 165, 166, 167, 168, 170], "respons": 162, "devic": [162, 163, 164, 165, 166, 167, 168, 170], "sggraph": [162, 163, 164, 165, 166, 167, 168, 170], "mggraph": [162, 163, 164, 165, 167, 168, 170], "upon": 162, "long": [162, 193], "treat": 162, "without": [162, 195], "blank": 162, "cugraph": [162, 167, 179, 194, 195], "edgelist_df": 162, "resource_handl": [162, 163, 164, 165, 166, 167, 168, 170], "graph_properti": 162, "graphproperti": [162, 163, 166, 167, 168, 170], "is_multigraph": [162, 163, 166, 167, 168, 170], "src_arrai": 162, "dst_arrai": 162, "weight_arrai": 162, "re": [162, 175], "pylibcugraph_bf": 162, "final_result": 162, "size_t": [163, 164, 165, 166, 167, 168], "max_iter": [163, 165, 167], "referenc": [163, 164, 165, 166, 167, 168, 170], "eignevector": 163, "item": [163, 164, 166, 167, 168], "asarrai": [163, 166, 167, 168, 169, 170], "graph_prop": [163, 166, 167, 168, 170], "is_symmetr": [163, 166, 167, 168, 170], "initial_hubs_guess_vertic": 164, "initial_hubs_guess_valu": 164, "third": [164, 166, 168], "invers": 165, "constant": 165, "seed_arrai": 166, "procedur": 166, "unpad": 166, "max": 166, "min": 166, "compress": [166, 169, 170], "precomputed_vertex_out_weight_vertic": 167, "precomputed_vertex_out_weight_sum": 167, "initial_guess_vertic": 167, "initial_guess_valu": 167, "ith": [167, 168], "11615585": 167, "21488841": 167, "2988108": 167, "3701449": 167, "999": 168, "4028235e": 168, "38": 168, "0000000e": 168, "00": 168, "num_vert": 169, "__cuda_array_interface__": [169, 170], "unsupport": 169, "becaus": 169, "popul": 169, "labl": 169, "cp": [169, 170], "csr_matrix": [169, 170], "scipy_csr": [169, 170], "get_shap": 169, "nnz": 169, "cp_offset": [169, 170], "cp_indic": [169, 170], "cp_label": [169, 170], "tolist": [169, 170], "nonzero": 170, "leverag": [175, 191], "flexibl": 175, "librari": [175, 192, 196], "workflow": [175, 190, 191, 193, 195], "smooth": 175, "simpl": [175, 191, 195], "project": [175, 192], "abl": 175, "machin": [175, 190, 192], "let": 175, "far": 175, "With": 175, "nvidia": [175, 190, 192], "smoothli": 175, "intellig": 175, "workload": 175, "comfort": 175, "dask_cugraph": 175, "comm": 175, "rmat": [175, 179], "input_data_path": 175, "input_data": 175, "400": 175, "65": 175, "456": 175, "to_csv": 175, "reader": 175, "chunk": 175, "e_list": 175, "pr_df": 175, "page": [179, 196], "publicli": 179, "access": 179, "modul": [179, 195, 196], "namespac": 179, "constructor": 179, "numbermap": 179, "ecg": [179, 195], "leiden": [179, 193, 195], "linear": [179, 193, 196], "hit": [179, 195], "predict": [179, 196], "analyt": [179, 190, 192, 195], "team": [190, 192], "medium": [190, 195], "post": [190, 192], "deeper": 190, "dive": 190, "we": [190, 192, 195], "ve": 190, "just": [190, 191, 192, 195], "few": [190, 192, 195], "gtc18": 190, "fall": 190, "dgx": [190, 193], "vision": [190, 194, 196], "journei": 190, "beyond": 190, "versu": [190, 195], "gtc19": 190, "spring": 190, "acceler": [190, 192, 193, 194], "refactor": 190, "And": 190, "rethink": 190, "tackl": 190, "unifi": [190, 192], "gtc": 190, "20": 190, "goe": 190, "big": [190, 191], "21": 190, "what": 190, "next": [190, 195], "video": 190, "slide": 190, "massiv": 190, "kdd": 190, "tutori": 190, "gnn": 190, "dgl": 190, "pyg": 190, "ubiquit": [190, 192], "kang": [190, 193], "fender": [190, 193], "eaton": [190, 193], "ree": [190, 193], "web": [190, 193], "crawl": [190, 193], "a100": [190, 193], "sep": 190, "hricik": [190, 193], "bader": [190, 193], "septemb": [190, 193], "scienc": [190, 192, 193, 195, 196], "pp": [190, 193], "richardson": 190, "draba": 190, "oldridg": 190, "allen": 190, "august": 190, "expand": 190, "end": 190, "dl": 190, "ml": 190, "interoper": 190, "26th": 190, "3503": 190, "3504": 190, "alex": 190, "brad": 190, "joe": 190, "editor": 190, "crc": 190, "press": 190, "steroid": 190, "scientist": [190, 192, 196], "realli": 190, "park": 190, "spot": 190, "cell": 190, "genom": 190, "memgraph": 190, "dev": 190, "repost": 190, "bluf": 191, "popular": 191, "program": 191, "concept": 191, "great": 191, "wai": 191, "readabl": 191, "most": [191, 192, 195], "There": 191, "built": [191, 195], "load": [191, 195], "ye": 191, "from_panda": 191, "queri": 191, "200": 191, "nlargest": 191, "va": 191, "orient": 191, "natur": 191, "place": 191, "fact": 191, "design": 191, "why": 191, "focus": [191, 192], "problem": [191, 192, 193], "million": 191, "trillion": 191, "giga": 191, "byte": 191, "terabyt": 191, "At": [191, 192], "becom": 191, "ineffici": 191, "modifi": 191, "howev": [191, 192, 195], "open": 191, "misinterpret": 191, "flow": [191, 193], "sens": 191, "confus": 191, "g2": 191, "g3": 191, "g1": 191, "obviou": 191, "opt": 191, "return_self": 191, "develop": [191, 192], "explicitli": 191, "awar": 191, "easi": [191, 194], "pattern": 191, "independ": 191, "benefit": 191, "simplifi": [191, 195], "usabl": 191, "cannot": 191, "creation": 191, "techniqu": 192, "proverbi": 192, "toolbox": 192, "engin": 192, "statist": 192, "among": 192, "commonli": 192, "focu": 192, "question": 192, "pose": 192, "euler": 192, "1736": 192, "seven": 192, "bridg": 192, "konigsberg": 192, "laid": 192, "foundat": 192, "cover": 192, "wide": 192, "varieti": 192, "market": 192, "biologi": 192, "physic": [192, 193], "sociologi": [192, 193], "cyber": 192, "seamlessli": [192, 196], "integr": [192, 196], "ecosystem": [192, 196], "easili": [192, 196], "even": [192, 196], "think": 192, "technologi": 192, "goal": [192, 195], "almost": 192, "twenti": 192, "year": 192, "attempt": 192, "solv": 192, "tend": 192, "scope": 192, "shift": 192, "dynam": 192, "came": 192, "eas": 192, "choos": 192, "suit": 192, "paradigm": 192, "now": [192, 195], "latest": 192, "pascal": 192, "1000x": 192, "faster": [192, 193], "averag": 192, "moreov": 192, "rapidli": 192, "restrict": 192, "sever": 192, "emerg": 192, "de": 192, "facto": 192, "languag": 192, "interact": 192, "abil": 192, "familiar": 192, "approach": 192, "mention": 192, "etl": [192, 195], "thing": 192, "lot": 192, "area": 192, "favor": 192, "our": 192, "own": 192, "argot": 192, "jargon": 192, "document": 192, "try": [192, 195], "mostli": 192, "prefer": 192, "tool": 192, "layer": 192, "robust": 192, "complet": [192, 195], "pictur": 192, "everyth": 192, "captur": 192, "issu": [192, 195], "epic": 192, "subtask": 192, "imag": 192, "readi": 192, "board": 192, "28": 192, "2020": [193, 195], "brand": 193, "journal": 193, "25": 193, "163": 193, "177": 193, "variant": 193, "136": 193, "145": 193, "mclaughlin": 193, "2018": 193, "61": 193, "92": 193, "date": 193, "nagi": 193, "2016": 193, "52": 193, "72": 193, "zachari": 193, "conflict": 193, "fission": 193, "anthropolog": 193, "research": 193, "33": 193, "452": 193, "473": 193, "1977": 193, "dolphin": 193, "lusseau": 193, "schneider": 193, "boisseau": 193, "haas": 193, "slooten": 193, "dawson": 193, "bottlenos": 193, "doubt": 193, "sound": 193, "proport": 193, "last": [193, 194], "ecologi": 193, "sociobiologi": 193, "54": 193, "396": 193, "405": 193, "2003": 193, "newman": 193, "matric": [193, 196], "preprint": 193, "0605087": 193, "2006": 193, "email": 193, "eu": 193, "hao": 193, "yin": 193, "austin": 193, "benson": 193, "jure": 193, "david": 193, "gleich": 193, "23rd": 193, "kleinberg": 193, "faloutso": 193, "evolut": 193, "densif": 193, "diamet": 193, "tkdd": 193, "2007": 193, "www": 193, "cmu": 193, "edu": 193, "pub": 193, "powergrowth": 193, "polbook": 193, "kreb": 193, "unpublish": 193, "orgnet": 193, "introduct": [194, 196], "roadmap": [194, 195, 196], "blog": [194, 195, 196], "media": 194, "academ": 194, "paper": 194, "updat": 194, "updatr": 195, "flesh": 195, "One": 195, "mimic": 195, "prep": 195, "portion": 195, "encourag": 195, "fulli": 195, "easier": 195, "oct": 195, "14th": 195, "guid": 195, "expans": 195, "complic": 195, "unchang": 195, "still": 195, "signif": 195, "cnx": 195, "text": 195, "highlight": 195, "yellow": 195, "rich": 195, "etc": 195, "fix": 195, "biggest": 195, "insert": 195, "record": 195, "read": 195, "data_fil": 195, "nx": 195, "iterrow": 195, "add_edg": 195, "perfectli": 195, "fine": 195, "problemat": 195, "someth": 195, "resiz": 195, "veri": 195, "effici": 195, "suggest": 195, "rewrit": 195, "bulk": 195, "basic": 196}, "objects": {"cugraph": [[0, 0, 1, "", "BiPartiteGraph"], [1, 0, 1, "", "Graph"], [23, 0, 1, "", "MultiGraph"], [24, 2, 1, "", "analyzeClustering_edge_cut"], [25, 2, 1, "", "analyzeClustering_modularity"], [26, 2, 1, "", "analyzeClustering_ratio_cut"], [27, 2, 1, "", "batched_ego_graphs"], [28, 2, 1, "", "betweenness_centrality"], [29, 2, 1, "", "bfs"], [30, 2, 1, "", "bfs_edges"], [32, 2, 1, "", "connected_components"], [33, 2, 1, "", "core_number"], [53, 2, 1, "", "degree_centrality"], [54, 2, 1, "", "dense_hungarian"], [55, 2, 1, "", "ecg"], [56, 2, 1, "", "edge_betweenness_centrality"], [57, 2, 1, "", "ego_graph"], [58, 2, 1, "", "filter_unreachable"], [59, 2, 1, "", "force_atlas2"], [60, 2, 1, "", "from_adjlist"], [61, 2, 1, "", "from_cudf_edgelist"], [62, 2, 1, "", "from_edgelist"], [63, 2, 1, "", "from_numpy_array"], [64, 2, 1, "", "from_numpy_matrix"], [65, 2, 1, "", "from_pandas_adjacency"], [66, 2, 1, "", "from_pandas_edgelist"], [68, 2, 1, "", "hits"], [69, 2, 1, "", "hungarian"], [70, 2, 1, "", "hypergraph"], [71, 2, 1, "", "jaccard"], [72, 2, 1, "", "jaccard_coefficient"], [73, 2, 1, "", "jaccard_w"], [74, 2, 1, "", "k_core"], [75, 2, 1, "", "k_truss"], [76, 2, 1, "", "katz_centrality"], [77, 2, 1, "", "ktruss_subgraph"], [78, 2, 1, "", "leiden"], [79, 2, 1, "", "louvain"], [80, 2, 1, "", "node2vec"], [81, 2, 1, "", "overlap"], [82, 2, 1, "", "overlap_coefficient"], [83, 2, 1, "", "overlap_w"], [84, 2, 1, "", "pagerank"], [85, 2, 1, "", "random_walks"], [86, 2, 1, "", "shortest_path"], [87, 2, 1, "", "shortest_path_length"], [88, 2, 1, "", "sorensen"], [89, 2, 1, "", "sorensen_coefficient"], [90, 2, 1, "", "sorensen_w"], [91, 2, 1, "", "spectralBalancedCutClustering"], [92, 2, 1, "", "spectralModularityMaximizationClustering"], [93, 2, 1, "", "sssp"], [94, 2, 1, "", "strongly_connected_components"], [149, 2, 1, "", "subgraph"], [150, 2, 1, "", "symmetrize"], [151, 2, 1, "", "symmetrize_ddf"], [152, 2, 1, "", "symmetrize_df"], [153, 2, 1, "", "to_numpy_array"], [154, 2, 1, "", "to_numpy_matrix"], [155, 2, 1, "", "to_pandas_adjacency"], [156, 2, 1, "", "to_pandas_edgelist"], [159, 2, 1, "", "triangle_count"], [160, 2, 1, "", "uniform_neighbor_sample"], [161, 2, 1, "", "weakly_connected_components"]], "cugraph.BiPartiteGraph": [[0, 1, 1, "", "__init__"]], "cugraph.Graph": [[1, 1, 1, "", "__init__"], [2, 1, 1, "", "add_internal_vertex_id"], [3, 1, 1, "", "add_nodes_from"], [4, 1, 1, "", "clear"], [5, 1, 1, "", "from_cudf_adjlist"], [6, 1, 1, "", "from_cudf_edgelist"], [7, 1, 1, "", "from_dask_cudf_edgelist"], [8, 1, 1, "", "from_numpy_array"], [9, 1, 1, "", "from_numpy_matrix"], [10, 1, 1, "", "from_pandas_adjacency"], [11, 1, 1, "", "from_pandas_edgelist"], [12, 1, 1, "", "has_isolated_vertices"], [13, 1, 1, "", "is_bipartite"], [14, 1, 1, "", "is_directed"], [15, 1, 1, "", "is_multigraph"], [16, 1, 1, "", "is_multipartite"], [17, 1, 1, "", "is_renumbered"], [18, 1, 1, "", "is_weighted"], [19, 1, 1, "", "lookup_internal_vertex_id"], [20, 1, 1, "", "to_directed"], [21, 1, 1, "", "to_undirected"], [22, 1, 1, "", "unrenumber"]], "cugraph.MultiGraph": [[23, 1, 1, "", "__init__"]], "cugraph.centrality": [[31, 2, 1, "", "eigenvector_centrality"]], "cugraph.dask.centrality.eigenvector_centrality": [[34, 2, 1, "", "eigenvector_centrality"]], "cugraph.dask.centrality.katz_centrality": [[35, 2, 1, "", "katz_centrality"]], "cugraph.dask.common.read_utils": [[36, 2, 1, "", "get_chunksize"]], "cugraph.dask.comms.comms": [[37, 2, 1, "", "destroy"], [38, 2, 1, "", "get_2D_partition"], [39, 2, 1, "", "get_comms"], [40, 2, 1, "", "get_default_handle"], [41, 2, 1, "", "get_handle"], [42, 2, 1, "", "get_session_id"], [43, 2, 1, "", "get_worker_id"], [44, 2, 1, "", "get_workers"], [45, 2, 1, "", "initialize"], [46, 2, 1, "", "is_initialized"]], "cugraph.dask.community.louvain": [[47, 2, 1, "", "louvain"]], "cugraph.dask.components.connectivity": [[48, 2, 1, "", "weakly_connected_components"]], "cugraph.dask.link_analysis.hits": [[49, 2, 1, "", "hits"]], "cugraph.dask.link_analysis.pagerank": [[50, 2, 1, "", "pagerank"]], "cugraph.dask.traversal.bfs": [[51, 2, 1, "", "bfs"]], "cugraph.dask.traversal.sssp": [[52, 2, 1, "", "sssp"]], "cugraph.generators": [[67, 2, 1, "", "rmat"]], "cugraph.structure": [[95, 0, 1, "", "NumberMap"], [148, 2, 1, "", "shuffle"]], "cugraph.structure.NumberMap": [[95, 1, 1, "", "__init__"], [98, 1, 1, "", "add_internal_vertex_id"], [99, 1, 1, "", "compute_vals"], [100, 1, 1, "", "compute_vals_types"], [101, 1, 1, "", "from_internal_vertex_id"], [102, 1, 1, "", "generate_unused_column_name"], [103, 1, 1, "", "renumber"], [104, 1, 1, "", "renumber_and_segment"], [105, 1, 1, "", "set_renumbered_col_names"], [106, 1, 1, "", "to_internal_vertex_id"], [107, 1, 1, "", "unrenumber"], [108, 1, 1, "", "vertex_column_size"]], "cugraph.structure.graph_implementation.simpleGraphImpl": [[109, 1, 1, "", "degree"], [110, 1, 1, "", "degrees"], [111, 1, 1, "", "delete_adj_list"], [112, 1, 1, "", "delete_edge_list"], [113, 1, 1, "", "edges"], [114, 1, 1, "", "enable_batch"], [115, 1, 1, "", "get_two_hop_neighbors"], [116, 1, 1, "", "has_edge"], [117, 1, 1, "", "has_node"], [118, 1, 1, "", "has_self_loop"], [119, 1, 1, "", "in_degree"], [120, 1, 1, "", "neighbors"], [121, 1, 1, "", "nodes"], [122, 1, 1, "", "number_of_edges"], [123, 1, 1, "", "number_of_nodes"], [124, 1, 1, "", "number_of_vertices"], [125, 1, 1, "", "out_degree"], [126, 1, 1, "", "vertex_column_size"], [127, 1, 1, "", "view_adj_list"], [128, 1, 1, "", "view_edge_list"], [129, 1, 1, "", "view_transposed_adj_list"]], "cugraph.structure.property_graph": [[130, 0, 1, "", "EXPERIMENTAL__PropertyGraph"], [147, 0, 1, "", "EXPERIMENTAL__PropertySelection"]], "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph": [[130, 1, 1, "", "__init__"], [131, 1, 1, "", "add_edge_data"], [132, 1, 1, "", "add_vertex_data"], [133, 1, 1, "", "annotate_dataframe"], [134, 1, 1, "", "edge_props_to_graph"], [135, 1, 1, "", "extract_subgraph"], [136, 1, 1, "", "get_edge_data"], [137, 1, 1, "", "get_num_edges"], [138, 1, 1, "", "get_num_vertices"], [139, 1, 1, "", "get_vertex_data"], [140, 1, 1, "", "get_vertices"], [141, 1, 1, "", "has_duplicate_edges"], [142, 1, 1, "", "is_multigraph"], [143, 1, 1, "", "renumber_edges_by_type"], [144, 1, 1, "", "renumber_vertices_by_type"], [145, 1, 1, "", "select_edges"], [146, 1, 1, "", "select_vertices"]], "cugraph.structure.property_graph.EXPERIMENTAL__PropertySelection": [[147, 1, 1, "", "__init__"]], "cugraph.tree.minimum_spanning_tree": [[157, 2, 1, "", "maximum_spanning_tree"], [158, 2, 1, "", "minimum_spanning_tree"]], "pylibcugraph": [[162, 2, 1, "", "bfs"], [163, 2, 1, "", "eigenvector_centrality"], [164, 2, 1, "", "hits"], [165, 2, 1, "", "katz_centrality"], [166, 2, 1, "", "node2vec"], [167, 2, 1, "", "pagerank"], [168, 2, 1, "", "sssp"], [169, 2, 1, "", "strongly_connected_components"], [170, 2, 1, "", "weakly_connected_components"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "titleterms": {"cugraph": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 175, 190, 191, 192, 196], "bipartitegraph": 0, "graph": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 172, 175, 177, 184, 187, 191, 195], "add_internal_vertex_id": [2, 98], "add_nodes_from": 3, "clear": 4, "from_cudf_adjlist": 5, "from_cudf_edgelist": [6, 61], "from_dask_cudf_edgelist": 7, "from_numpy_arrai": [8, 63], "from_numpy_matrix": [9, 64], "from_pandas_adjac": [10, 65], "from_pandas_edgelist": [11, 66], "has_isolated_vertic": 12, "is_bipartit": 13, "is_direct": 14, "is_multigraph": [15, 142], "is_multipartit": 16, "is_renumb": 17, "is_weight": 18, "lookup_internal_vertex_id": 19, "to_direct": 20, "to_undirect": 21, "unrenumb": [22, 107], "multigraph": 23, "analyzeclustering_edge_cut": 24, "analyzeclustering_modular": 25, "analyzeclustering_ratio_cut": 26, "batched_ego_graph": 27, "betweenness_centr": 28, "bf": [29, 51, 162], "bfs_edg": 30, "central": [31, 34, 35, 171], "eigenvector_centr": [31, 34, 163], "connected_compon": 32, "core_numb": 33, "dask": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 178], "katz_centr": [35, 76, 165], "common": 36, "read_util": 36, "get_chunks": 36, "comm": [37, 38, 39, 40, 41, 42, 43, 44, 45, 46], "destroi": 37, "get_2d_partit": 38, "get_comm": 39, "get_default_handl": 40, "get_handl": 41, "get_session_id": 42, "get_worker_id": 43, "get_work": 44, "initi": 45, "is_initi": 46, "commun": [47, 172], "louvain": [47, 79, 172], "compon": [48, 173], "connect": [48, 173], "weakly_connected_compon": [48, 161, 170], "link_analysi": [49, 50], "hit": [49, 68, 164, 182], "pagerank": [50, 84, 167, 182], "travers": [51, 52, 188], "sssp": [52, 93, 168], "degree_centr": 53, "dense_hungarian": 54, "ecg": [55, 172], "edge_betweenness_centr": 56, "ego_graph": 57, "filter_unreach": 58, "force_atlas2": 59, "from_adjlist": 60, "from_edgelist": 62, "gener": [67, 176], "rmat": [67, 176], "hungarian": [69, 181], "hypergraph": 70, "jaccard": [71, 183], "jaccard_coeffici": 72, "jaccard_w": 73, "k_core": 74, "k_truss": 75, "ktruss_subgraph": 77, "leiden": [78, 172], "node2vec": [80, 166, 186], "overlap": [81, 183], "overlap_coeffici": 82, "overlap_w": 83, "random_walk": 85, "shortest_path": 86, "shortest_path_length": 87, "sorensen": [88, 183], "sorensen_coeffici": 89, "sorensen_w": 90, "spectralbalancedcutclust": 91, "spectralmodularitymaximizationclust": 92, "strongly_connected_compon": [94, 169], "structur": [95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148], "numbermap": [95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 187], "multigpu": 96, "singlegpu": 97, "compute_v": 99, "compute_vals_typ": 100, "from_internal_vertex_id": 101, "generate_unused_column_nam": 102, "renumb": 103, "renumber_and_seg": 104, "set_renumbered_col_nam": 105, "to_internal_vertex_id": 106, "vertex_column_s": [108, 126], "graph_implement": [109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "simplegraphimpl": [109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "degre": [109, 110, 171], "delete_adj_list": 111, "delete_edge_list": 112, "edg": 113, "enable_batch": 114, "get_two_hop_neighbor": 115, "has_edg": 116, "has_nod": 117, "has_self_loop": 118, "in_degre": 119, "neighbor": 120, "node": 121, "number_of_edg": 122, "number_of_nod": 123, "number_of_vertic": 124, "out_degre": 125, "view_adj_list": 127, "view_edge_list": 128, "view_transposed_adj_list": 129, "property_graph": [130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], "experimental__propertygraph": [130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "add_edge_data": 131, "add_vertex_data": 132, "annotate_datafram": 133, "edge_props_to_graph": 134, "extract_subgraph": 135, "get_edge_data": 136, "get_num_edg": 137, "get_num_vertic": 138, "get_vertex_data": 139, "get_vertic": 140, "has_duplicate_edg": 141, "renumber_edges_by_typ": 143, "renumber_vertices_by_typ": 144, "select_edg": 145, "select_vertic": 146, "experimental__propertyselect": 147, "shuffl": 148, "subgraph": [149, 172], "symmetr": [150, 187], "symmetrize_ddf": 151, "symmetrize_df": 152, "to_numpy_arrai": 153, "to_numpy_matrix": 154, "to_pandas_adjac": 155, "to_pandas_edgelist": 156, "tree": [157, 158, 189], "minimum_spanning_tre": [157, 158], "maximum_spanning_tre": 157, "triangle_count": 159, "uniform_neighbor_sampl": 160, "pylibcugraph": [162, 163, 164, 165, 166, 167, 168, 169, 170, 185], "between": 171, "katz": 171, "mg": [171, 172, 173, 178, 182, 188], "eigenvector": 171, "egonet": 172, "ensembl": 172, "cluster": 172, "k": [172, 174], "truss": 172, "spectral": 172, "extract": 172, "triangl": 172, "count": 172, "core": 174, "number": 174, "multi": 175, "gpu": 175, "distribut": 175, "analyt": 175, "exampl": 175, "implement": 177, "helper": 178, "function": 178, "method": [178, 185, 191], "api": 179, "refer": [179, 193], "document": [179, 196], "layout": 180, "forc": 180, "atla": 180, "2": 180, "linear": 181, "assign": 181, "link": [182, 183], "analysi": 182, "predict": 183, "coeffici": 183, "properti": 184, "sampl": 186, "random": 186, "walk": 186, "class": 187, "constructor": 187, "ad": 187, "data": [187, 191, 193], "check": 187, "convers": 187, "from": 187, "other": [187, 190, 193], "format": 187, "breadth": 188, "first": 188, "search": 188, "singl": 188, "sourc": 188, "shortest": 188, "path": [188, 195], "minimum": 189, "span": 189, "maximum": 189, "blog": 190, "present": 190, "confer": 190, "2018": 190, "2019": 190, "2020": 190, "2021": 190, "2022": 190, "media": 190, "academ": 190, "paper": [190, 193], "cascad": 191, "object": [191, 195], "algorithm": [191, 193, 195], "introduct": 192, "vision": 192, "terminologi": 192, "roadmap": 192, "architectur": 193, "set": 193, "basic": 194, "networkx": 195, "compat": 195, "transit": 195, "last": 195, "updat": 195, "easi": 195, "us": 195, "acceler": 195, "differ": 195, "exactli": 195, "match": 195, "do": 195, "copi": 195, "over": 195, "addit": 195, "attribut": 195, "where": 195, "all": 195, "argument": 195, "ar": 195, "support": 195, "result": 195, "build": 195, "welcom": 196, "": 196, "content": 196, "indic": 196, "tabl": 196}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"cugraph.BiPartiteGraph": [[0, "cugraph-bipartitegraph"]], "cugraph.Graph": [[1, "cugraph-graph"]], "cugraph.Graph.add_internal_vertex_id": [[2, "cugraph-graph-add-internal-vertex-id"]], "cugraph.Graph.add_nodes_from": [[3, "cugraph-graph-add-nodes-from"]], "cugraph.Graph.clear": [[4, "cugraph-graph-clear"]], "cugraph.Graph.from_cudf_adjlist": [[5, "cugraph-graph-from-cudf-adjlist"]], "cugraph.Graph.from_cudf_edgelist": [[6, "cugraph-graph-from-cudf-edgelist"]], "cugraph.Graph.from_dask_cudf_edgelist": [[7, "cugraph-graph-from-dask-cudf-edgelist"]], "cugraph.Graph.from_numpy_array": [[8, "cugraph-graph-from-numpy-array"]], "cugraph.Graph.from_numpy_matrix": [[9, "cugraph-graph-from-numpy-matrix"]], "cugraph.Graph.from_pandas_adjacency": [[10, "cugraph-graph-from-pandas-adjacency"]], "cugraph.Graph.from_pandas_edgelist": [[11, "cugraph-graph-from-pandas-edgelist"]], "cugraph.Graph.has_isolated_vertices": [[12, "cugraph-graph-has-isolated-vertices"]], "cugraph.Graph.is_bipartite": [[13, "cugraph-graph-is-bipartite"]], "cugraph.Graph.is_directed": [[14, "cugraph-graph-is-directed"]], "cugraph.Graph.is_multigraph": [[15, "cugraph-graph-is-multigraph"]], "cugraph.Graph.is_multipartite": [[16, "cugraph-graph-is-multipartite"]], "cugraph.Graph.is_renumbered": [[17, "cugraph-graph-is-renumbered"]], "cugraph.Graph.is_weighted": [[18, "cugraph-graph-is-weighted"]], "cugraph.Graph.lookup_internal_vertex_id": [[19, "cugraph-graph-lookup-internal-vertex-id"]], "cugraph.Graph.to_directed": [[20, "cugraph-graph-to-directed"]], "cugraph.Graph.to_undirected": [[21, "cugraph-graph-to-undirected"]], "cugraph.Graph.unrenumber": [[22, "cugraph-graph-unrenumber"]], "cugraph.MultiGraph": [[23, "cugraph-multigraph"]], "cugraph.analyzeClustering_edge_cut": [[24, "cugraph-analyzeclustering-edge-cut"]], "cugraph.analyzeClustering_modularity": [[25, "cugraph-analyzeclustering-modularity"]], "cugraph.analyzeClustering_ratio_cut": [[26, "cugraph-analyzeclustering-ratio-cut"]], "cugraph.batched_ego_graphs": [[27, "cugraph-batched-ego-graphs"]], "cugraph.betweenness_centrality": [[28, "cugraph-betweenness-centrality"]], "cugraph.bfs": [[29, "cugraph-bfs"]], "cugraph.bfs_edges": [[30, "cugraph-bfs-edges"]], "cugraph.centrality.eigenvector_centrality": [[31, "cugraph-centrality-eigenvector-centrality"]], "cugraph.connected_components": [[32, "cugraph-connected-components"]], "cugraph.core_number": [[33, "cugraph-core-number"]], "cugraph.dask.centrality.eigenvector_centrality.eigenvector_centrality": [[34, "cugraph-dask-centrality-eigenvector-centrality-eigenvector-centrality"]], "cugraph.dask.centrality.katz_centrality.katz_centrality": [[35, "cugraph-dask-centrality-katz-centrality-katz-centrality"]], "cugraph.dask.common.read_utils.get_chunksize": [[36, "cugraph-dask-common-read-utils-get-chunksize"]], "cugraph.dask.comms.comms.destroy": [[37, "cugraph-dask-comms-comms-destroy"]], "cugraph.dask.comms.comms.get_2D_partition": [[38, "cugraph-dask-comms-comms-get-2d-partition"]], "cugraph.dask.comms.comms.get_comms": [[39, "cugraph-dask-comms-comms-get-comms"]], "cugraph.dask.comms.comms.get_default_handle": [[40, "cugraph-dask-comms-comms-get-default-handle"]], "cugraph.dask.comms.comms.get_handle": [[41, "cugraph-dask-comms-comms-get-handle"]], "cugraph.dask.comms.comms.get_session_id": [[42, "cugraph-dask-comms-comms-get-session-id"]], "cugraph.dask.comms.comms.get_worker_id": [[43, "cugraph-dask-comms-comms-get-worker-id"]], "cugraph.dask.comms.comms.get_workers": [[44, "cugraph-dask-comms-comms-get-workers"]], "cugraph.dask.comms.comms.initialize": [[45, "cugraph-dask-comms-comms-initialize"]], "cugraph.dask.comms.comms.is_initialized": [[46, "cugraph-dask-comms-comms-is-initialized"]], "cugraph.dask.community.louvain.louvain": [[47, "cugraph-dask-community-louvain-louvain"]], "cugraph.dask.components.connectivity.weakly_connected_components": [[48, "cugraph-dask-components-connectivity-weakly-connected-components"]], "cugraph.dask.link_analysis.hits.hits": [[49, "cugraph-dask-link-analysis-hits-hits"]], "cugraph.dask.link_analysis.pagerank.pagerank": [[50, "cugraph-dask-link-analysis-pagerank-pagerank"]], "cugraph.dask.traversal.bfs.bfs": [[51, "cugraph-dask-traversal-bfs-bfs"]], "cugraph.dask.traversal.sssp.sssp": [[52, "cugraph-dask-traversal-sssp-sssp"]], "cugraph.degree_centrality": [[53, "cugraph-degree-centrality"]], "cugraph.dense_hungarian": [[54, "cugraph-dense-hungarian"]], "cugraph.ecg": [[55, "cugraph-ecg"]], "cugraph.edge_betweenness_centrality": [[56, "cugraph-edge-betweenness-centrality"]], "cugraph.ego_graph": [[57, "cugraph-ego-graph"]], "cugraph.filter_unreachable": [[58, "cugraph-filter-unreachable"]], "cugraph.force_atlas2": [[59, "cugraph-force-atlas2"]], "cugraph.from_adjlist": [[60, "cugraph-from-adjlist"]], "cugraph.from_cudf_edgelist": [[61, "cugraph-from-cudf-edgelist"]], "cugraph.from_edgelist": [[62, "cugraph-from-edgelist"]], "cugraph.from_numpy_array": [[63, "cugraph-from-numpy-array"]], "cugraph.from_numpy_matrix": [[64, "cugraph-from-numpy-matrix"]], "cugraph.from_pandas_adjacency": [[65, "cugraph-from-pandas-adjacency"]], "cugraph.from_pandas_edgelist": [[66, "cugraph-from-pandas-edgelist"]], "cugraph.generators.rmat": [[67, "cugraph-generators-rmat"]], "cugraph.hits": [[68, "cugraph-hits"]], "cugraph.hungarian": [[69, "cugraph-hungarian"]], "cugraph.hypergraph": [[70, "cugraph-hypergraph"]], "cugraph.jaccard": [[71, "cugraph-jaccard"]], "cugraph.jaccard_coefficient": [[72, "cugraph-jaccard-coefficient"]], "cugraph.jaccard_w": [[73, "cugraph-jaccard-w"]], "cugraph.k_core": [[74, "cugraph-k-core"]], "cugraph.k_truss": [[75, "cugraph-k-truss"]], "cugraph.katz_centrality": [[76, "cugraph-katz-centrality"]], "cugraph.ktruss_subgraph": [[77, "cugraph-ktruss-subgraph"]], "cugraph.leiden": [[78, "cugraph-leiden"]], "cugraph.louvain": [[79, "cugraph-louvain"]], "cugraph.node2vec": [[80, "cugraph-node2vec"]], "cugraph.overlap": [[81, "cugraph-overlap"]], "cugraph.overlap_coefficient": [[82, "cugraph-overlap-coefficient"]], "cugraph.overlap_w": [[83, "cugraph-overlap-w"]], "cugraph.pagerank": [[84, "cugraph-pagerank"]], "cugraph.random_walks": [[85, "cugraph-random-walks"]], "cugraph.shortest_path": [[86, "cugraph-shortest-path"]], "cugraph.shortest_path_length": [[87, "cugraph-shortest-path-length"]], "cugraph.sorensen": [[88, "cugraph-sorensen"]], "cugraph.sorensen_coefficient": [[89, "cugraph-sorensen-coefficient"]], "cugraph.sorensen_w": [[90, "cugraph-sorensen-w"]], "cugraph.spectralBalancedCutClustering": [[91, "cugraph-spectralbalancedcutclustering"]], "cugraph.spectralModularityMaximizationClustering": [[92, "cugraph-spectralmodularitymaximizationclustering"]], "cugraph.sssp": [[93, "cugraph-sssp"]], "cugraph.strongly_connected_components": [[94, "cugraph-strongly-connected-components"]], "cugraph.structure.NumberMap": [[95, "cugraph-structure-numbermap"]], "cugraph.structure.NumberMap.MultiGPU": [[96, "cugraph-structure-numbermap-multigpu"]], "cugraph.structure.NumberMap.SingleGPU": [[97, "cugraph-structure-numbermap-singlegpu"]], "cugraph.structure.NumberMap.add_internal_vertex_id": [[98, "cugraph-structure-numbermap-add-internal-vertex-id"]], "cugraph.structure.NumberMap.compute_vals": [[99, "cugraph-structure-numbermap-compute-vals"]], "cugraph.structure.NumberMap.compute_vals_types": [[100, "cugraph-structure-numbermap-compute-vals-types"]], "cugraph.structure.NumberMap.from_internal_vertex_id": [[101, "cugraph-structure-numbermap-from-internal-vertex-id"]], "cugraph.structure.NumberMap.generate_unused_column_name": [[102, "cugraph-structure-numbermap-generate-unused-column-name"]], "cugraph.structure.NumberMap.renumber": [[103, "cugraph-structure-numbermap-renumber"]], "cugraph.structure.NumberMap.renumber_and_segment": [[104, "cugraph-structure-numbermap-renumber-and-segment"]], "cugraph.structure.NumberMap.set_renumbered_col_names": [[105, "cugraph-structure-numbermap-set-renumbered-col-names"]], "cugraph.structure.NumberMap.to_internal_vertex_id": [[106, "cugraph-structure-numbermap-to-internal-vertex-id"]], "cugraph.structure.NumberMap.unrenumber": [[107, "cugraph-structure-numbermap-unrenumber"]], "cugraph.structure.NumberMap.vertex_column_size": [[108, "cugraph-structure-numbermap-vertex-column-size"]], "cugraph.structure.graph_implementation.simpleGraphImpl.degree": [[109, "cugraph-structure-graph-implementation-simplegraphimpl-degree"]], "cugraph.structure.graph_implementation.simpleGraphImpl.degrees": [[110, "cugraph-structure-graph-implementation-simplegraphimpl-degrees"]], "cugraph.structure.graph_implementation.simpleGraphImpl.delete_adj_list": [[111, "cugraph-structure-graph-implementation-simplegraphimpl-delete-adj-list"]], "cugraph.structure.graph_implementation.simpleGraphImpl.delete_edge_list": [[112, "cugraph-structure-graph-implementation-simplegraphimpl-delete-edge-list"]], "cugraph.structure.graph_implementation.simpleGraphImpl.edges": [[113, "cugraph-structure-graph-implementation-simplegraphimpl-edges"]], "cugraph.structure.graph_implementation.simpleGraphImpl.enable_batch": [[114, "cugraph-structure-graph-implementation-simplegraphimpl-enable-batch"]], "cugraph.structure.graph_implementation.simpleGraphImpl.get_two_hop_neighbors": [[115, "cugraph-structure-graph-implementation-simplegraphimpl-get-two-hop-neighbors"]], "cugraph.structure.graph_implementation.simpleGraphImpl.has_edge": [[116, "cugraph-structure-graph-implementation-simplegraphimpl-has-edge"]], "cugraph.structure.graph_implementation.simpleGraphImpl.has_node": [[117, "cugraph-structure-graph-implementation-simplegraphimpl-has-node"]], "cugraph.structure.graph_implementation.simpleGraphImpl.has_self_loop": [[118, "cugraph-structure-graph-implementation-simplegraphimpl-has-self-loop"]], "cugraph.structure.graph_implementation.simpleGraphImpl.in_degree": [[119, "cugraph-structure-graph-implementation-simplegraphimpl-in-degree"]], "cugraph.structure.graph_implementation.simpleGraphImpl.neighbors": [[120, "cugraph-structure-graph-implementation-simplegraphimpl-neighbors"]], "cugraph.structure.graph_implementation.simpleGraphImpl.nodes": [[121, "cugraph-structure-graph-implementation-simplegraphimpl-nodes"]], "cugraph.structure.graph_implementation.simpleGraphImpl.number_of_edges": [[122, "cugraph-structure-graph-implementation-simplegraphimpl-number-of-edges"]], "cugraph.structure.graph_implementation.simpleGraphImpl.number_of_nodes": [[123, "cugraph-structure-graph-implementation-simplegraphimpl-number-of-nodes"]], "cugraph.structure.graph_implementation.simpleGraphImpl.number_of_vertices": [[124, "cugraph-structure-graph-implementation-simplegraphimpl-number-of-vertices"]], "cugraph.structure.graph_implementation.simpleGraphImpl.out_degree": [[125, "cugraph-structure-graph-implementation-simplegraphimpl-out-degree"]], "cugraph.structure.graph_implementation.simpleGraphImpl.vertex_column_size": [[126, "cugraph-structure-graph-implementation-simplegraphimpl-vertex-column-size"]], "cugraph.structure.graph_implementation.simpleGraphImpl.view_adj_list": [[127, "cugraph-structure-graph-implementation-simplegraphimpl-view-adj-list"]], "cugraph.structure.graph_implementation.simpleGraphImpl.view_edge_list": [[128, "cugraph-structure-graph-implementation-simplegraphimpl-view-edge-list"]], "cugraph.structure.graph_implementation.simpleGraphImpl.view_transposed_adj_list": [[129, "cugraph-structure-graph-implementation-simplegraphimpl-view-transposed-adj-list"]], "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph": [[130, "cugraph-structure-property-graph-experimental-propertygraph"]], "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.add_edge_data": [[131, "cugraph-structure-property-graph-experimental-propertygraph-add-edge-data"]], "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.add_vertex_data": [[132, "cugraph-structure-property-graph-experimental-propertygraph-add-vertex-data"]], "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.annotate_dataframe": [[133, "cugraph-structure-property-graph-experimental-propertygraph-annotate-dataframe"]], "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.edge_props_to_graph": [[134, "cugraph-structure-property-graph-experimental-propertygraph-edge-props-to-graph"]], "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.extract_subgraph": [[135, "cugraph-structure-property-graph-experimental-propertygraph-extract-subgraph"]], "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.get_edge_data": [[136, "cugraph-structure-property-graph-experimental-propertygraph-get-edge-data"]], "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.get_num_edges": [[137, "cugraph-structure-property-graph-experimental-propertygraph-get-num-edges"]], "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.get_num_vertices": [[138, "cugraph-structure-property-graph-experimental-propertygraph-get-num-vertices"]], "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.get_vertex_data": [[139, "cugraph-structure-property-graph-experimental-propertygraph-get-vertex-data"]], "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.get_vertices": [[140, "cugraph-structure-property-graph-experimental-propertygraph-get-vertices"]], "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.has_duplicate_edges": [[141, "cugraph-structure-property-graph-experimental-propertygraph-has-duplicate-edges"]], "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.is_multigraph": [[142, "cugraph-structure-property-graph-experimental-propertygraph-is-multigraph"]], "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.renumber_edges_by_type": [[143, "cugraph-structure-property-graph-experimental-propertygraph-renumber-edges-by-type"]], "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.renumber_vertices_by_type": [[144, "cugraph-structure-property-graph-experimental-propertygraph-renumber-vertices-by-type"]], "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.select_edges": [[145, "cugraph-structure-property-graph-experimental-propertygraph-select-edges"]], "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.select_vertices": [[146, "cugraph-structure-property-graph-experimental-propertygraph-select-vertices"]], "cugraph.structure.property_graph.EXPERIMENTAL__PropertySelection": [[147, "cugraph-structure-property-graph-experimental-propertyselection"]], "cugraph.structure.shuffle": [[148, "cugraph-structure-shuffle"]], "cugraph.subgraph": [[149, "cugraph-subgraph"]], "cugraph.symmetrize": [[150, "cugraph-symmetrize"]], "cugraph.symmetrize_ddf": [[151, "cugraph-symmetrize-ddf"]], "cugraph.symmetrize_df": [[152, "cugraph-symmetrize-df"]], "cugraph.to_numpy_array": [[153, "cugraph-to-numpy-array"]], "cugraph.to_numpy_matrix": [[154, "cugraph-to-numpy-matrix"]], "cugraph.to_pandas_adjacency": [[155, "cugraph-to-pandas-adjacency"]], "cugraph.to_pandas_edgelist": [[156, "cugraph-to-pandas-edgelist"]], "cugraph.tree.minimum_spanning_tree.maximum_spanning_tree": [[157, "cugraph-tree-minimum-spanning-tree-maximum-spanning-tree"]], "cugraph.tree.minimum_spanning_tree.minimum_spanning_tree": [[158, "cugraph-tree-minimum-spanning-tree-minimum-spanning-tree"]], "cugraph.triangle_count": [[159, "cugraph-triangle-count"]], "cugraph.uniform_neighbor_sample": [[160, "cugraph-uniform-neighbor-sample"]], "cugraph.weakly_connected_components": [[161, "cugraph-weakly-connected-components"]], "pylibcugraph.bfs": [[162, "pylibcugraph-bfs"]], "pylibcugraph.eigenvector_centrality": [[163, "pylibcugraph-eigenvector-centrality"]], "pylibcugraph.hits": [[164, "pylibcugraph-hits"]], "pylibcugraph.katz_centrality": [[165, "pylibcugraph-katz-centrality"]], "pylibcugraph.node2vec": [[166, "pylibcugraph-node2vec"]], "pylibcugraph.pagerank": [[167, "pylibcugraph-pagerank"]], "pylibcugraph.sssp": [[168, "pylibcugraph-sssp"]], "pylibcugraph.strongly_connected_components": [[169, "pylibcugraph-strongly-connected-components"]], "pylibcugraph.weakly_connected_components": [[170, "pylibcugraph-weakly-connected-components"]], "Centrality": [[171, "centrality"]], "Betweenness Centrality": [[171, "betweenness-centrality"]], "Katz Centrality": [[171, "katz-centrality"]], "Katz Centrality (MG)": [[171, "katz-centrality-mg"]], "Degree Centrality": [[171, "degree-centrality"]], "Eigenvector Centrality": [[171, "eigenvector-centrality"]], "Eigenvector Centrality (MG)": [[171, "eigenvector-centrality-mg"]], "Community": [[172, "community"]], "EgoNet": [[172, "egonet"]], "Ensemble clustering for graphs (ECG)": [[172, "ensemble-clustering-for-graphs-ecg"]], "K-Truss": [[172, "k-truss"]], "Leiden": [[172, "leiden"]], "Louvain": [[172, "louvain"]], "Louvain (MG)": [[172, "louvain-mg"]], "Spectral Clustering": [[172, "spectral-clustering"]], "Subgraph Extraction": [[172, "subgraph-extraction"]], "Triangle Counting": [[172, "triangle-counting"]], "Components": [[173, "components"]], "Connected Components": [[173, "connected-components"]], "Connected Components (MG)": [[173, "connected-components-mg"]], "Cores": [[174, "cores"]], "Core Number": [[174, "core-number"]], "K-Core": [[174, "k-core"]], "Multi-GPU with cuGraph": [[175, "multi-gpu-with-cugraph"]], "Distributed graph analytics": [[175, "distributed-graph-analytics"]], "Example": [[175, "example"]], "Generator": [[176, "generator"]], "RMAT": [[176, "rmat"]], "Graph Implementation": [[177, "graph-implementation"], [177, "id1"]], "DASK MG Helper functions": [[178, "dask-mg-helper-functions"]], "Methods": [[178, "methods"], [185, "methods"]], "API reference": [[179, "api-reference"]], "API Documentation": [[179, null]], "Layout": [[180, "layout"]], "Force Atlas 2": [[180, "force-atlas-2"]], "Linear Assignment": [[181, "linear-assignment"]], "Hungarian": [[181, "hungarian"]], "Link Analysis": [[182, "link-analysis"]], "HITS": [[182, "hits"]], "HITS (MG)": [[182, "hits-mg"]], "Pagerank": [[182, "pagerank"]], "Pagerank (MG)": [[182, "pagerank-mg"]], "Link Prediction": [[183, "link-prediction"]], "Jaccard Coefficient": [[183, "jaccard-coefficient"]], "Overlap Coefficient": [[183, "overlap-coefficient"]], "Sorensen Coefficient": [[183, "sorensen-coefficient"]], "Property Graph": [[184, "property-graph"], [184, "id1"]], "pylibcugraph": [[185, "pylibcugraph"]], "Sampling": [[186, "sampling"]], "Random Walks": [[186, "random-walks"]], "Node2Vec": [[186, "node2vec"]], "Graph Classes": [[187, "graph-classes"]], "Constructors": [[187, "constructors"]], "Adding Data": [[187, "adding-data"]], "Checks": [[187, "checks"]], "Symmetrize": [[187, "symmetrize"]], "Conversion from Other Formats": [[187, "conversion-from-other-formats"]], "NumberMap": [[187, "numbermap"]], "Other": [[187, "other"]], "Traversal": [[188, "traversal"]], "Breadth-first-search": [[188, "breadth-first-search"]], "Breadth-first-search (MG)": [[188, "breadth-first-search-mg"]], "Single-source-shortest-path": [[188, "single-source-shortest-path"]], "Single-source-shortest-path (MG)": [[188, "single-source-shortest-path-mg"]], "Tree": [[189, "tree"]], "Minimum Spanning Tree": [[189, "minimum-spanning-tree"]], "Maximum Spanning Tree": [[189, "maximum-spanning-tree"]], "cuGraph BLOGS and Presentations": [[190, "cugraph-blogs-and-presentations"]], "BLOGS & Conferences": [[190, "blogs-conferences"]], "2018": [[190, "id1"]], "2019": [[190, "id2"]], "2020": [[190, "id3"]], "2021": [[190, "id4"]], "2022": [[190, "id5"]], "Media": [[190, "media"]], "Academic Papers": [[190, "academic-papers"]], "Other BLOGS": [[190, "other-blogs"]], "Method Cascading and cuGraph": [[191, "method-cascading-and-cugraph"]], "Graph Data Objects": [[191, "graph-data-objects"]], "Algorithms": [[191, "algorithms"], [193, "algorithms"]], "cuGraph Introduction": [[192, "cugraph-introduction"]], "Vision": [[192, "vision"]], "Terminology": [[192, "terminology"]], "Roadmap": [[192, "roadmap"]], "References": [[193, "references"]], "Architecture": [[193, "architecture"]], "Other Papers": [[193, "other-papers"]], "Data Sets": [[193, "data-sets"]], "Basics": [[194, "basics"]], "NetworkX Compatibility and Transition": [[195, "networkx-compatibility-and-transition"]], "Last Update": [[195, "last-update"]], "Easy Path \u2013 Use NetworkX Graph Objects, Accelerated Algorithms": [[195, "easy-path-use-networkx-graph-objects-accelerated-algorithms"]], "Differences in Algorithms": [[195, "differences-in-algorithms"]], "Algorithms that exactly match": [[195, "algorithms-that-exactly-match"]], "Algorithms that do not copy over additional attributes": [[195, "algorithms-that-do-not-copy-over-additional-attributes"]], "Algorithms not in NetworkX": [[195, "algorithms-not-in-networkx"]], "Algorithm where not all arguments are supported": [[195, "algorithm-where-not-all-arguments-are-supported"]], "Algorithms where the results are different": [[195, "algorithms-where-the-results-are-different"]], "Graph Building": [[195, "graph-building"]], "Welcome to cugraph\u2019s documentation!": [[196, "welcome-to-cugraph-s-documentation"]], "Contents:": [[196, null]], "Indices and tables": [[196, "indices-and-tables"]]}, "indexentries": {"bipartitegraph (class in cugraph)": [[0, "cugraph.BiPartiteGraph"]], "__init__() (cugraph.bipartitegraph method)": [[0, "cugraph.BiPartiteGraph.__init__"]], "graph (class in cugraph)": [[1, "cugraph.Graph"]], "__init__() (cugraph.graph method)": [[1, "cugraph.Graph.__init__"]], "add_internal_vertex_id() (cugraph.graph method)": [[2, "cugraph.Graph.add_internal_vertex_id"]], "add_nodes_from() (cugraph.graph method)": [[3, "cugraph.Graph.add_nodes_from"]], "clear() (cugraph.graph method)": [[4, "cugraph.Graph.clear"]], "from_cudf_adjlist() (cugraph.graph method)": [[5, "cugraph.Graph.from_cudf_adjlist"]], "from_cudf_edgelist() (cugraph.graph method)": [[6, "cugraph.Graph.from_cudf_edgelist"]], "from_dask_cudf_edgelist() (cugraph.graph method)": [[7, "cugraph.Graph.from_dask_cudf_edgelist"]], "from_numpy_array() (cugraph.graph method)": [[8, "cugraph.Graph.from_numpy_array"]], "from_numpy_matrix() (cugraph.graph method)": [[9, "cugraph.Graph.from_numpy_matrix"]], "from_pandas_adjacency() (cugraph.graph method)": [[10, "cugraph.Graph.from_pandas_adjacency"]], "from_pandas_edgelist() (cugraph.graph method)": [[11, "cugraph.Graph.from_pandas_edgelist"]], "has_isolated_vertices() (cugraph.graph method)": [[12, "cugraph.Graph.has_isolated_vertices"]], "is_bipartite() (cugraph.graph method)": [[13, "cugraph.Graph.is_bipartite"]], "is_directed() (cugraph.graph method)": [[14, "cugraph.Graph.is_directed"]], "is_multigraph() (cugraph.graph method)": [[15, "cugraph.Graph.is_multigraph"]], "is_multipartite() (cugraph.graph method)": [[16, "cugraph.Graph.is_multipartite"]], "is_renumbered() (cugraph.graph method)": [[17, "cugraph.Graph.is_renumbered"]], "is_weighted() (cugraph.graph method)": [[18, "cugraph.Graph.is_weighted"]], "lookup_internal_vertex_id() (cugraph.graph method)": [[19, "cugraph.Graph.lookup_internal_vertex_id"]], "to_directed() (cugraph.graph method)": [[20, "cugraph.Graph.to_directed"]], "to_undirected() (cugraph.graph method)": [[21, "cugraph.Graph.to_undirected"]], "unrenumber() (cugraph.graph method)": [[22, "cugraph.Graph.unrenumber"]], "multigraph (class in cugraph)": [[23, "cugraph.MultiGraph"]], "__init__() (cugraph.multigraph method)": [[23, "cugraph.MultiGraph.__init__"]], "analyzeclustering_edge_cut() (in module cugraph)": [[24, "cugraph.analyzeClustering_edge_cut"]], "analyzeclustering_modularity() (in module cugraph)": [[25, "cugraph.analyzeClustering_modularity"]], "analyzeclustering_ratio_cut() (in module cugraph)": [[26, "cugraph.analyzeClustering_ratio_cut"]], "batched_ego_graphs() (in module cugraph)": [[27, "cugraph.batched_ego_graphs"]], "betweenness_centrality() (in module cugraph)": [[28, "cugraph.betweenness_centrality"]], "bfs() (in module cugraph)": [[29, "cugraph.bfs"]], "bfs_edges() (in module cugraph)": [[30, "cugraph.bfs_edges"]], "eigenvector_centrality() (in module cugraph.centrality)": [[31, "cugraph.centrality.eigenvector_centrality"]], "connected_components() (in module cugraph)": [[32, "cugraph.connected_components"]], "core_number() (in module cugraph)": [[33, "cugraph.core_number"]], "eigenvector_centrality() (in module cugraph.dask.centrality.eigenvector_centrality)": [[34, "cugraph.dask.centrality.eigenvector_centrality.eigenvector_centrality"]], "katz_centrality() (in module cugraph.dask.centrality.katz_centrality)": [[35, "cugraph.dask.centrality.katz_centrality.katz_centrality"]], "get_chunksize() (in module cugraph.dask.common.read_utils)": [[36, "cugraph.dask.common.read_utils.get_chunksize"]], "destroy() (in module cugraph.dask.comms.comms)": [[37, "cugraph.dask.comms.comms.destroy"]], "get_2d_partition() (in module cugraph.dask.comms.comms)": [[38, "cugraph.dask.comms.comms.get_2D_partition"]], "get_comms() (in module cugraph.dask.comms.comms)": [[39, "cugraph.dask.comms.comms.get_comms"]], "get_default_handle() (in module cugraph.dask.comms.comms)": [[40, "cugraph.dask.comms.comms.get_default_handle"]], "get_handle() (in module cugraph.dask.comms.comms)": [[41, "cugraph.dask.comms.comms.get_handle"]], "get_session_id() (in module cugraph.dask.comms.comms)": [[42, "cugraph.dask.comms.comms.get_session_id"]], "get_worker_id() (in module cugraph.dask.comms.comms)": [[43, "cugraph.dask.comms.comms.get_worker_id"]], "get_workers() (in module cugraph.dask.comms.comms)": [[44, "cugraph.dask.comms.comms.get_workers"]], "initialize() (in module cugraph.dask.comms.comms)": [[45, "cugraph.dask.comms.comms.initialize"]], "is_initialized() (in module cugraph.dask.comms.comms)": [[46, "cugraph.dask.comms.comms.is_initialized"]], "louvain() (in module cugraph.dask.community.louvain)": [[47, "cugraph.dask.community.louvain.louvain"]], "weakly_connected_components() (in module cugraph.dask.components.connectivity)": [[48, "cugraph.dask.components.connectivity.weakly_connected_components"]], "hits() (in module cugraph.dask.link_analysis.hits)": [[49, "cugraph.dask.link_analysis.hits.hits"]], "pagerank() (in module cugraph.dask.link_analysis.pagerank)": [[50, "cugraph.dask.link_analysis.pagerank.pagerank"]], "bfs() (in module cugraph.dask.traversal.bfs)": [[51, "cugraph.dask.traversal.bfs.bfs"]], "sssp() (in module cugraph.dask.traversal.sssp)": [[52, "cugraph.dask.traversal.sssp.sssp"]], "degree_centrality() (in module cugraph)": [[53, "cugraph.degree_centrality"]], "dense_hungarian() (in module cugraph)": [[54, "cugraph.dense_hungarian"]], "ecg() (in module cugraph)": [[55, "cugraph.ecg"]], "edge_betweenness_centrality() (in module cugraph)": [[56, "cugraph.edge_betweenness_centrality"]], "ego_graph() (in module cugraph)": [[57, "cugraph.ego_graph"]], "filter_unreachable() (in module cugraph)": [[58, "cugraph.filter_unreachable"]], "force_atlas2() (in module cugraph)": [[59, "cugraph.force_atlas2"]], "from_adjlist() (in module cugraph)": [[60, "cugraph.from_adjlist"]], "from_cudf_edgelist() (in module cugraph)": [[61, "cugraph.from_cudf_edgelist"]], "from_edgelist() (in module cugraph)": [[62, "cugraph.from_edgelist"]], "from_numpy_array() (in module cugraph)": [[63, "cugraph.from_numpy_array"]], "from_numpy_matrix() (in module cugraph)": [[64, "cugraph.from_numpy_matrix"]], "from_pandas_adjacency() (in module cugraph)": [[65, "cugraph.from_pandas_adjacency"]], "from_pandas_edgelist() (in module cugraph)": [[66, "cugraph.from_pandas_edgelist"]], "rmat() (in module cugraph.generators)": [[67, "cugraph.generators.rmat"]], "hits() (in module cugraph)": [[68, "cugraph.hits"]], "hungarian() (in module cugraph)": [[69, "cugraph.hungarian"]], "hypergraph() (in module cugraph)": [[70, "cugraph.hypergraph"]], "jaccard() (in module cugraph)": [[71, "cugraph.jaccard"]], "jaccard_coefficient() (in module cugraph)": [[72, "cugraph.jaccard_coefficient"]], "jaccard_w() (in module cugraph)": [[73, "cugraph.jaccard_w"]], "k_core() (in module cugraph)": [[74, "cugraph.k_core"]], "k_truss() (in module cugraph)": [[75, "cugraph.k_truss"]], "katz_centrality() (in module cugraph)": [[76, "cugraph.katz_centrality"]], "ktruss_subgraph() (in module cugraph)": [[77, "cugraph.ktruss_subgraph"]], "leiden() (in module cugraph)": [[78, "cugraph.leiden"]], "louvain() (in module cugraph)": [[79, "cugraph.louvain"]], "node2vec() (in module cugraph)": [[80, "cugraph.node2vec"]], "overlap() (in module cugraph)": [[81, "cugraph.overlap"]], "overlap_coefficient() (in module cugraph)": [[82, "cugraph.overlap_coefficient"]], "overlap_w() (in module cugraph)": [[83, "cugraph.overlap_w"]], "pagerank() (in module cugraph)": [[84, "cugraph.pagerank"]], "random_walks() (in module cugraph)": [[85, "cugraph.random_walks"]], "shortest_path() (in module cugraph)": [[86, "cugraph.shortest_path"]], "shortest_path_length() (in module cugraph)": [[87, "cugraph.shortest_path_length"]], "sorensen() (in module cugraph)": [[88, "cugraph.sorensen"]], "sorensen_coefficient() (in module cugraph)": [[89, "cugraph.sorensen_coefficient"]], "sorensen_w() (in module cugraph)": [[90, "cugraph.sorensen_w"]], "spectralbalancedcutclustering() (in module cugraph)": [[91, "cugraph.spectralBalancedCutClustering"]], "spectralmodularitymaximizationclustering() (in module cugraph)": [[92, "cugraph.spectralModularityMaximizationClustering"]], "sssp() (in module cugraph)": [[93, "cugraph.sssp"]], "strongly_connected_components() (in module cugraph)": [[94, "cugraph.strongly_connected_components"]], "numbermap (class in cugraph.structure)": [[95, "cugraph.structure.NumberMap"]], "__init__() (cugraph.structure.numbermap method)": [[95, "cugraph.structure.NumberMap.__init__"]], "add_internal_vertex_id() (cugraph.structure.numbermap method)": [[98, "cugraph.structure.NumberMap.add_internal_vertex_id"]], "compute_vals() (cugraph.structure.numbermap static method)": [[99, "cugraph.structure.NumberMap.compute_vals"]], "compute_vals_types() (cugraph.structure.numbermap static method)": [[100, "cugraph.structure.NumberMap.compute_vals_types"]], "from_internal_vertex_id() (cugraph.structure.numbermap method)": [[101, "cugraph.structure.NumberMap.from_internal_vertex_id"]], "generate_unused_column_name() (cugraph.structure.numbermap static method)": [[102, "cugraph.structure.NumberMap.generate_unused_column_name"]], "renumber() (cugraph.structure.numbermap static method)": [[103, "cugraph.structure.NumberMap.renumber"]], "renumber_and_segment() (cugraph.structure.numbermap static method)": [[104, "cugraph.structure.NumberMap.renumber_and_segment"]], "set_renumbered_col_names() (cugraph.structure.numbermap method)": [[105, "cugraph.structure.NumberMap.set_renumbered_col_names"]], "to_internal_vertex_id() (cugraph.structure.numbermap method)": [[106, "cugraph.structure.NumberMap.to_internal_vertex_id"]], "unrenumber() (cugraph.structure.numbermap method)": [[107, "cugraph.structure.NumberMap.unrenumber"]], "vertex_column_size() (cugraph.structure.numbermap method)": [[108, "cugraph.structure.NumberMap.vertex_column_size"]], "degree() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[109, "cugraph.structure.graph_implementation.simpleGraphImpl.degree"]], "degrees() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[110, "cugraph.structure.graph_implementation.simpleGraphImpl.degrees"]], "delete_adj_list() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[111, "cugraph.structure.graph_implementation.simpleGraphImpl.delete_adj_list"]], "delete_edge_list() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[112, "cugraph.structure.graph_implementation.simpleGraphImpl.delete_edge_list"]], "edges() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[113, "cugraph.structure.graph_implementation.simpleGraphImpl.edges"]], "enable_batch() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[114, "cugraph.structure.graph_implementation.simpleGraphImpl.enable_batch"]], "get_two_hop_neighbors() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[115, "cugraph.structure.graph_implementation.simpleGraphImpl.get_two_hop_neighbors"]], "has_edge() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[116, "cugraph.structure.graph_implementation.simpleGraphImpl.has_edge"]], "has_node() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[117, "cugraph.structure.graph_implementation.simpleGraphImpl.has_node"]], "has_self_loop() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[118, "cugraph.structure.graph_implementation.simpleGraphImpl.has_self_loop"]], "in_degree() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[119, "cugraph.structure.graph_implementation.simpleGraphImpl.in_degree"]], "neighbors() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[120, "cugraph.structure.graph_implementation.simpleGraphImpl.neighbors"]], "nodes() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[121, "cugraph.structure.graph_implementation.simpleGraphImpl.nodes"]], "number_of_edges() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[122, "cugraph.structure.graph_implementation.simpleGraphImpl.number_of_edges"]], "number_of_nodes() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[123, "cugraph.structure.graph_implementation.simpleGraphImpl.number_of_nodes"]], "number_of_vertices() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[124, "cugraph.structure.graph_implementation.simpleGraphImpl.number_of_vertices"]], "out_degree() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[125, "cugraph.structure.graph_implementation.simpleGraphImpl.out_degree"]], "vertex_column_size() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[126, "cugraph.structure.graph_implementation.simpleGraphImpl.vertex_column_size"]], "view_adj_list() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[127, "cugraph.structure.graph_implementation.simpleGraphImpl.view_adj_list"]], "view_edge_list() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[128, "cugraph.structure.graph_implementation.simpleGraphImpl.view_edge_list"]], "view_transposed_adj_list() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[129, "cugraph.structure.graph_implementation.simpleGraphImpl.view_transposed_adj_list"]], "experimental__propertygraph (class in cugraph.structure.property_graph)": [[130, "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph"]], "__init__() (cugraph.structure.property_graph.experimental__propertygraph method)": [[130, "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.__init__"]], "add_edge_data() (cugraph.structure.property_graph.experimental__propertygraph method)": [[131, "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.add_edge_data"]], "add_vertex_data() (cugraph.structure.property_graph.experimental__propertygraph method)": [[132, "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.add_vertex_data"]], "annotate_dataframe() (cugraph.structure.property_graph.experimental__propertygraph method)": [[133, "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.annotate_dataframe"]], "edge_props_to_graph() (cugraph.structure.property_graph.experimental__propertygraph method)": [[134, "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.edge_props_to_graph"]], "extract_subgraph() (cugraph.structure.property_graph.experimental__propertygraph method)": [[135, "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.extract_subgraph"]], "get_edge_data() (cugraph.structure.property_graph.experimental__propertygraph method)": [[136, "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.get_edge_data"]], "get_num_edges() (cugraph.structure.property_graph.experimental__propertygraph method)": [[137, "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.get_num_edges"]], "get_num_vertices() (cugraph.structure.property_graph.experimental__propertygraph method)": [[138, "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.get_num_vertices"]], "get_vertex_data() (cugraph.structure.property_graph.experimental__propertygraph method)": [[139, "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.get_vertex_data"]], "get_vertices() (cugraph.structure.property_graph.experimental__propertygraph method)": [[140, "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.get_vertices"]], "has_duplicate_edges() (cugraph.structure.property_graph.experimental__propertygraph class method)": [[141, "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.has_duplicate_edges"]], "is_multigraph() (cugraph.structure.property_graph.experimental__propertygraph class method)": [[142, "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.is_multigraph"]], "renumber_edges_by_type() (cugraph.structure.property_graph.experimental__propertygraph method)": [[143, "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.renumber_edges_by_type"]], "renumber_vertices_by_type() (cugraph.structure.property_graph.experimental__propertygraph method)": [[144, "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.renumber_vertices_by_type"]], "select_edges() (cugraph.structure.property_graph.experimental__propertygraph method)": [[145, "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.select_edges"]], "select_vertices() (cugraph.structure.property_graph.experimental__propertygraph method)": [[146, "cugraph.structure.property_graph.EXPERIMENTAL__PropertyGraph.select_vertices"]], "experimental__propertyselection (class in cugraph.structure.property_graph)": [[147, "cugraph.structure.property_graph.EXPERIMENTAL__PropertySelection"]], "__init__() (cugraph.structure.property_graph.experimental__propertyselection method)": [[147, "cugraph.structure.property_graph.EXPERIMENTAL__PropertySelection.__init__"]], "shuffle() (in module cugraph.structure)": [[148, "cugraph.structure.shuffle"]], "subgraph() (in module cugraph)": [[149, "cugraph.subgraph"]], "symmetrize() (in module cugraph)": [[150, "cugraph.symmetrize"]], "symmetrize_ddf() (in module cugraph)": [[151, "cugraph.symmetrize_ddf"]], "symmetrize_df() (in module cugraph)": [[152, "cugraph.symmetrize_df"]], "to_numpy_array() (in module cugraph)": [[153, "cugraph.to_numpy_array"]], "to_numpy_matrix() (in module cugraph)": [[154, "cugraph.to_numpy_matrix"]], "to_pandas_adjacency() (in module cugraph)": [[155, "cugraph.to_pandas_adjacency"]], "to_pandas_edgelist() (in module cugraph)": [[156, "cugraph.to_pandas_edgelist"]], "maximum_spanning_tree() (in module cugraph.tree.minimum_spanning_tree)": [[157, "cugraph.tree.minimum_spanning_tree.maximum_spanning_tree"]], "minimum_spanning_tree() (in module cugraph.tree.minimum_spanning_tree)": [[158, "cugraph.tree.minimum_spanning_tree.minimum_spanning_tree"]], "triangle_count() (in module cugraph)": [[159, "cugraph.triangle_count"]], "uniform_neighbor_sample() (in module cugraph)": [[160, "cugraph.uniform_neighbor_sample"]], "weakly_connected_components() (in module cugraph)": [[161, "cugraph.weakly_connected_components"]], "bfs() (in module pylibcugraph)": [[162, "pylibcugraph.bfs"]], "eigenvector_centrality() (in module pylibcugraph)": [[163, "pylibcugraph.eigenvector_centrality"]], "hits() (in module pylibcugraph)": [[164, "pylibcugraph.hits"]], "katz_centrality() (in module pylibcugraph)": [[165, "pylibcugraph.katz_centrality"]], "node2vec() (in module pylibcugraph)": [[166, "pylibcugraph.node2vec"]], "pagerank() (in module pylibcugraph)": [[167, "pylibcugraph.pagerank"]], "sssp() (in module pylibcugraph)": [[168, "pylibcugraph.sssp"]], "strongly_connected_components() (in module pylibcugraph)": [[169, "pylibcugraph.strongly_connected_components"]], "weakly_connected_components() (in module pylibcugraph)": [[170, "pylibcugraph.weakly_connected_components"]]}})