Search.setIndex({"docnames": ["api_docs/api/cugraph.BiPartiteGraph", "api_docs/api/cugraph.Graph", "api_docs/api/cugraph.Graph.add_internal_vertex_id", "api_docs/api/cugraph.Graph.add_nodes_from", "api_docs/api/cugraph.Graph.clear", "api_docs/api/cugraph.Graph.from_cudf_adjlist", "api_docs/api/cugraph.Graph.from_cudf_edgelist", "api_docs/api/cugraph.Graph.from_dask_cudf_edgelist", "api_docs/api/cugraph.Graph.from_numpy_array", "api_docs/api/cugraph.Graph.from_numpy_matrix", "api_docs/api/cugraph.Graph.from_pandas_adjacency", "api_docs/api/cugraph.Graph.from_pandas_edgelist", "api_docs/api/cugraph.Graph.has_isolated_vertices", "api_docs/api/cugraph.Graph.is_bipartite", "api_docs/api/cugraph.Graph.is_directed", "api_docs/api/cugraph.Graph.is_multigraph", "api_docs/api/cugraph.Graph.is_multipartite", "api_docs/api/cugraph.Graph.is_renumbered", "api_docs/api/cugraph.Graph.is_weighted", "api_docs/api/cugraph.Graph.lookup_internal_vertex_id", "api_docs/api/cugraph.Graph.to_directed", "api_docs/api/cugraph.Graph.to_undirected", "api_docs/api/cugraph.Graph.unrenumber", "api_docs/api/cugraph.MultiGraph", "api_docs/api/cugraph.analyzeClustering_edge_cut", "api_docs/api/cugraph.analyzeClustering_modularity", "api_docs/api/cugraph.analyzeClustering_ratio_cut", "api_docs/api/cugraph.batched_ego_graphs", "api_docs/api/cugraph.betweenness_centrality", "api_docs/api/cugraph.bfs", "api_docs/api/cugraph.bfs_edges", "api_docs/api/cugraph.centrality.eigenvector_centrality", "api_docs/api/cugraph.connected_components", "api_docs/api/cugraph.core_number", "api_docs/api/cugraph.dask.centrality.eigenvector_centrality.eigenvector_centrality", "api_docs/api/cugraph.dask.centrality.katz_centrality.katz_centrality", "api_docs/api/cugraph.dask.common.read_utils.get_chunksize", "api_docs/api/cugraph.dask.comms.comms.destroy", "api_docs/api/cugraph.dask.comms.comms.get_2D_partition", "api_docs/api/cugraph.dask.comms.comms.get_comms", "api_docs/api/cugraph.dask.comms.comms.get_default_handle", "api_docs/api/cugraph.dask.comms.comms.get_handle", "api_docs/api/cugraph.dask.comms.comms.get_session_id", "api_docs/api/cugraph.dask.comms.comms.get_worker_id", "api_docs/api/cugraph.dask.comms.comms.get_workers", "api_docs/api/cugraph.dask.comms.comms.initialize", "api_docs/api/cugraph.dask.comms.comms.is_initialized", "api_docs/api/cugraph.dask.community.louvain.louvain", "api_docs/api/cugraph.dask.components.connectivity.weakly_connected_components", "api_docs/api/cugraph.dask.link_analysis.hits.hits", "api_docs/api/cugraph.dask.link_analysis.pagerank.pagerank", "api_docs/api/cugraph.dask.traversal.bfs.bfs", "api_docs/api/cugraph.dask.traversal.sssp.sssp", "api_docs/api/cugraph.degree_centrality", "api_docs/api/cugraph.dense_hungarian", "api_docs/api/cugraph.ecg", "api_docs/api/cugraph.edge_betweenness_centrality", "api_docs/api/cugraph.ego_graph", "api_docs/api/cugraph.filter_unreachable", "api_docs/api/cugraph.force_atlas2", "api_docs/api/cugraph.from_adjlist", "api_docs/api/cugraph.from_cudf_edgelist", "api_docs/api/cugraph.from_edgelist", "api_docs/api/cugraph.from_numpy_array", "api_docs/api/cugraph.from_numpy_matrix", "api_docs/api/cugraph.from_pandas_adjacency", "api_docs/api/cugraph.from_pandas_edgelist", "api_docs/api/cugraph.generators.rmat", "api_docs/api/cugraph.hits", "api_docs/api/cugraph.hungarian", "api_docs/api/cugraph.hypergraph", "api_docs/api/cugraph.jaccard", "api_docs/api/cugraph.jaccard_coefficient", "api_docs/api/cugraph.jaccard_w", "api_docs/api/cugraph.k_core", "api_docs/api/cugraph.k_truss", "api_docs/api/cugraph.katz_centrality", "api_docs/api/cugraph.ktruss_subgraph", "api_docs/api/cugraph.leiden", "api_docs/api/cugraph.louvain", "api_docs/api/cugraph.node2vec", "api_docs/api/cugraph.overlap", "api_docs/api/cugraph.overlap_coefficient", "api_docs/api/cugraph.overlap_w", "api_docs/api/cugraph.pagerank", "api_docs/api/cugraph.random_walks", "api_docs/api/cugraph.shortest_path", "api_docs/api/cugraph.shortest_path_length", "api_docs/api/cugraph.sorensen", "api_docs/api/cugraph.sorensen_coefficient", "api_docs/api/cugraph.sorensen_w", "api_docs/api/cugraph.spectralBalancedCutClustering", "api_docs/api/cugraph.spectralModularityMaximizationClustering", "api_docs/api/cugraph.sssp", "api_docs/api/cugraph.strongly_connected_components", "api_docs/api/cugraph.structure.NumberMap", "api_docs/api/cugraph.structure.NumberMap.MultiGPU", "api_docs/api/cugraph.structure.NumberMap.SingleGPU", "api_docs/api/cugraph.structure.NumberMap.add_internal_vertex_id", "api_docs/api/cugraph.structure.NumberMap.compute_vals", "api_docs/api/cugraph.structure.NumberMap.compute_vals_types", "api_docs/api/cugraph.structure.NumberMap.from_internal_vertex_id", "api_docs/api/cugraph.structure.NumberMap.generate_unused_column_name", "api_docs/api/cugraph.structure.NumberMap.renumber", "api_docs/api/cugraph.structure.NumberMap.renumber_and_segment", "api_docs/api/cugraph.structure.NumberMap.set_renumbered_col_names", "api_docs/api/cugraph.structure.NumberMap.to_internal_vertex_id", "api_docs/api/cugraph.structure.NumberMap.unrenumber", "api_docs/api/cugraph.structure.NumberMap.vertex_column_size", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.degree", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.degrees", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.delete_adj_list", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.delete_edge_list", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.edges", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.enable_batch", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.get_two_hop_neighbors", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.has_edge", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.has_node", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.has_self_loop", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.in_degree", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.neighbors", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.nodes", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.number_of_edges", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.number_of_nodes", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.number_of_vertices", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.out_degree", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.vertex_column_size", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.view_adj_list", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.view_edge_list", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.view_transposed_adj_list", "api_docs/api/cugraph.structure.shuffle", "api_docs/api/cugraph.subgraph", "api_docs/api/cugraph.symmetrize", "api_docs/api/cugraph.symmetrize_ddf", "api_docs/api/cugraph.symmetrize_df", "api_docs/api/cugraph.to_numpy_array", "api_docs/api/cugraph.to_numpy_matrix", "api_docs/api/cugraph.to_pandas_adjacency", "api_docs/api/cugraph.to_pandas_edgelist", "api_docs/api/cugraph.tree.minimum_spanning_tree.maximum_spanning_tree", "api_docs/api/cugraph.tree.minimum_spanning_tree.minimum_spanning_tree", "api_docs/api/cugraph.triangle_count", "api_docs/api/cugraph.uniform_neighbor_sample", "api_docs/api/cugraph.weakly_connected_components", "api_docs/api/pylibcugraph.bfs", "api_docs/api/pylibcugraph.eigenvector_centrality", "api_docs/api/pylibcugraph.hits", "api_docs/api/pylibcugraph.katz_centrality", "api_docs/api/pylibcugraph.node2vec", "api_docs/api/pylibcugraph.pagerank", "api_docs/api/pylibcugraph.sssp", "api_docs/api/pylibcugraph.strongly_connected_components", "api_docs/api/pylibcugraph.weakly_connected_components", "api_docs/centrality", "api_docs/community", "api_docs/components", "api_docs/cores", "api_docs/dask-cugraph", "api_docs/generator", "api_docs/graph_implementation", "api_docs/helper_functions", "api_docs/index", "api_docs/layout", "api_docs/linear_assignment", "api_docs/link_analysis", "api_docs/link_prediction", "api_docs/pylibcugraph", "api_docs/sampling", "api_docs/structure", "api_docs/traversal", "api_docs/tree", "basics/cugraph_blogs", "basics/cugraph_intro", "basics/cugraph_ref", "basics/index", "basics/nx_transition", "index"], "filenames": ["api_docs/api/cugraph.BiPartiteGraph.rst", "api_docs/api/cugraph.Graph.rst", "api_docs/api/cugraph.Graph.add_internal_vertex_id.rst", "api_docs/api/cugraph.Graph.add_nodes_from.rst", "api_docs/api/cugraph.Graph.clear.rst", "api_docs/api/cugraph.Graph.from_cudf_adjlist.rst", "api_docs/api/cugraph.Graph.from_cudf_edgelist.rst", "api_docs/api/cugraph.Graph.from_dask_cudf_edgelist.rst", "api_docs/api/cugraph.Graph.from_numpy_array.rst", "api_docs/api/cugraph.Graph.from_numpy_matrix.rst", "api_docs/api/cugraph.Graph.from_pandas_adjacency.rst", "api_docs/api/cugraph.Graph.from_pandas_edgelist.rst", "api_docs/api/cugraph.Graph.has_isolated_vertices.rst", "api_docs/api/cugraph.Graph.is_bipartite.rst", "api_docs/api/cugraph.Graph.is_directed.rst", "api_docs/api/cugraph.Graph.is_multigraph.rst", "api_docs/api/cugraph.Graph.is_multipartite.rst", "api_docs/api/cugraph.Graph.is_renumbered.rst", "api_docs/api/cugraph.Graph.is_weighted.rst", "api_docs/api/cugraph.Graph.lookup_internal_vertex_id.rst", "api_docs/api/cugraph.Graph.to_directed.rst", "api_docs/api/cugraph.Graph.to_undirected.rst", "api_docs/api/cugraph.Graph.unrenumber.rst", "api_docs/api/cugraph.MultiGraph.rst", "api_docs/api/cugraph.analyzeClustering_edge_cut.rst", "api_docs/api/cugraph.analyzeClustering_modularity.rst", "api_docs/api/cugraph.analyzeClustering_ratio_cut.rst", "api_docs/api/cugraph.batched_ego_graphs.rst", "api_docs/api/cugraph.betweenness_centrality.rst", "api_docs/api/cugraph.bfs.rst", "api_docs/api/cugraph.bfs_edges.rst", "api_docs/api/cugraph.centrality.eigenvector_centrality.rst", "api_docs/api/cugraph.connected_components.rst", "api_docs/api/cugraph.core_number.rst", "api_docs/api/cugraph.dask.centrality.eigenvector_centrality.eigenvector_centrality.rst", "api_docs/api/cugraph.dask.centrality.katz_centrality.katz_centrality.rst", "api_docs/api/cugraph.dask.common.read_utils.get_chunksize.rst", "api_docs/api/cugraph.dask.comms.comms.destroy.rst", "api_docs/api/cugraph.dask.comms.comms.get_2D_partition.rst", "api_docs/api/cugraph.dask.comms.comms.get_comms.rst", "api_docs/api/cugraph.dask.comms.comms.get_default_handle.rst", "api_docs/api/cugraph.dask.comms.comms.get_handle.rst", "api_docs/api/cugraph.dask.comms.comms.get_session_id.rst", "api_docs/api/cugraph.dask.comms.comms.get_worker_id.rst", "api_docs/api/cugraph.dask.comms.comms.get_workers.rst", "api_docs/api/cugraph.dask.comms.comms.initialize.rst", "api_docs/api/cugraph.dask.comms.comms.is_initialized.rst", "api_docs/api/cugraph.dask.community.louvain.louvain.rst", "api_docs/api/cugraph.dask.components.connectivity.weakly_connected_components.rst", "api_docs/api/cugraph.dask.link_analysis.hits.hits.rst", "api_docs/api/cugraph.dask.link_analysis.pagerank.pagerank.rst", "api_docs/api/cugraph.dask.traversal.bfs.bfs.rst", "api_docs/api/cugraph.dask.traversal.sssp.sssp.rst", "api_docs/api/cugraph.degree_centrality.rst", "api_docs/api/cugraph.dense_hungarian.rst", "api_docs/api/cugraph.ecg.rst", "api_docs/api/cugraph.edge_betweenness_centrality.rst", "api_docs/api/cugraph.ego_graph.rst", "api_docs/api/cugraph.filter_unreachable.rst", "api_docs/api/cugraph.force_atlas2.rst", "api_docs/api/cugraph.from_adjlist.rst", "api_docs/api/cugraph.from_cudf_edgelist.rst", "api_docs/api/cugraph.from_edgelist.rst", "api_docs/api/cugraph.from_numpy_array.rst", "api_docs/api/cugraph.from_numpy_matrix.rst", "api_docs/api/cugraph.from_pandas_adjacency.rst", "api_docs/api/cugraph.from_pandas_edgelist.rst", "api_docs/api/cugraph.generators.rmat.rst", "api_docs/api/cugraph.hits.rst", "api_docs/api/cugraph.hungarian.rst", "api_docs/api/cugraph.hypergraph.rst", "api_docs/api/cugraph.jaccard.rst", "api_docs/api/cugraph.jaccard_coefficient.rst", "api_docs/api/cugraph.jaccard_w.rst", "api_docs/api/cugraph.k_core.rst", "api_docs/api/cugraph.k_truss.rst", "api_docs/api/cugraph.katz_centrality.rst", "api_docs/api/cugraph.ktruss_subgraph.rst", "api_docs/api/cugraph.leiden.rst", "api_docs/api/cugraph.louvain.rst", "api_docs/api/cugraph.node2vec.rst", "api_docs/api/cugraph.overlap.rst", "api_docs/api/cugraph.overlap_coefficient.rst", "api_docs/api/cugraph.overlap_w.rst", "api_docs/api/cugraph.pagerank.rst", "api_docs/api/cugraph.random_walks.rst", "api_docs/api/cugraph.shortest_path.rst", "api_docs/api/cugraph.shortest_path_length.rst", "api_docs/api/cugraph.sorensen.rst", "api_docs/api/cugraph.sorensen_coefficient.rst", "api_docs/api/cugraph.sorensen_w.rst", "api_docs/api/cugraph.spectralBalancedCutClustering.rst", "api_docs/api/cugraph.spectralModularityMaximizationClustering.rst", "api_docs/api/cugraph.sssp.rst", "api_docs/api/cugraph.strongly_connected_components.rst", "api_docs/api/cugraph.structure.NumberMap.rst", "api_docs/api/cugraph.structure.NumberMap.MultiGPU.rst", "api_docs/api/cugraph.structure.NumberMap.SingleGPU.rst", "api_docs/api/cugraph.structure.NumberMap.add_internal_vertex_id.rst", "api_docs/api/cugraph.structure.NumberMap.compute_vals.rst", "api_docs/api/cugraph.structure.NumberMap.compute_vals_types.rst", "api_docs/api/cugraph.structure.NumberMap.from_internal_vertex_id.rst", "api_docs/api/cugraph.structure.NumberMap.generate_unused_column_name.rst", "api_docs/api/cugraph.structure.NumberMap.renumber.rst", "api_docs/api/cugraph.structure.NumberMap.renumber_and_segment.rst", "api_docs/api/cugraph.structure.NumberMap.set_renumbered_col_names.rst", "api_docs/api/cugraph.structure.NumberMap.to_internal_vertex_id.rst", "api_docs/api/cugraph.structure.NumberMap.unrenumber.rst", "api_docs/api/cugraph.structure.NumberMap.vertex_column_size.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.degree.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.degrees.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.delete_adj_list.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.delete_edge_list.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.edges.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.enable_batch.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.get_two_hop_neighbors.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.has_edge.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.has_node.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.has_self_loop.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.in_degree.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.neighbors.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.nodes.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.number_of_edges.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.number_of_nodes.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.number_of_vertices.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.out_degree.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.vertex_column_size.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.view_adj_list.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.view_edge_list.rst", "api_docs/api/cugraph.structure.graph_implementation.simpleGraphImpl.view_transposed_adj_list.rst", "api_docs/api/cugraph.structure.shuffle.rst", "api_docs/api/cugraph.subgraph.rst", "api_docs/api/cugraph.symmetrize.rst", "api_docs/api/cugraph.symmetrize_ddf.rst", "api_docs/api/cugraph.symmetrize_df.rst", "api_docs/api/cugraph.to_numpy_array.rst", "api_docs/api/cugraph.to_numpy_matrix.rst", "api_docs/api/cugraph.to_pandas_adjacency.rst", "api_docs/api/cugraph.to_pandas_edgelist.rst", "api_docs/api/cugraph.tree.minimum_spanning_tree.maximum_spanning_tree.rst", "api_docs/api/cugraph.tree.minimum_spanning_tree.minimum_spanning_tree.rst", "api_docs/api/cugraph.triangle_count.rst", "api_docs/api/cugraph.uniform_neighbor_sample.rst", "api_docs/api/cugraph.weakly_connected_components.rst", "api_docs/api/pylibcugraph.bfs.rst", "api_docs/api/pylibcugraph.eigenvector_centrality.rst", "api_docs/api/pylibcugraph.hits.rst", "api_docs/api/pylibcugraph.katz_centrality.rst", "api_docs/api/pylibcugraph.node2vec.rst", "api_docs/api/pylibcugraph.pagerank.rst", "api_docs/api/pylibcugraph.sssp.rst", "api_docs/api/pylibcugraph.strongly_connected_components.rst", "api_docs/api/pylibcugraph.weakly_connected_components.rst", "api_docs/centrality.rst", "api_docs/community.rst", "api_docs/components.rst", "api_docs/cores.rst", "api_docs/dask-cugraph.rst", "api_docs/generator.rst", "api_docs/graph_implementation.rst", "api_docs/helper_functions.rst", "api_docs/index.rst", "api_docs/layout.rst", "api_docs/linear_assignment.rst", "api_docs/link_analysis.rst", "api_docs/link_prediction.rst", "api_docs/pylibcugraph.rst", "api_docs/sampling.rst", "api_docs/structure.rst", "api_docs/traversal.rst", "api_docs/tree.rst", "basics/cugraph_blogs.rst", "basics/cugraph_intro.md", "basics/cugraph_ref.rst", "basics/index.rst", "basics/nx_transition.rst", "index.rst"], "titles": ["cugraph.BiPartiteGraph", "cugraph.Graph", "cugraph.Graph.add_internal_vertex_id", "cugraph.Graph.add_nodes_from", "cugraph.Graph.clear", "cugraph.Graph.from_cudf_adjlist", "cugraph.Graph.from_cudf_edgelist", "cugraph.Graph.from_dask_cudf_edgelist", "cugraph.Graph.from_numpy_array", "cugraph.Graph.from_numpy_matrix", "cugraph.Graph.from_pandas_adjacency", "cugraph.Graph.from_pandas_edgelist", "cugraph.Graph.has_isolated_vertices", "cugraph.Graph.is_bipartite", "cugraph.Graph.is_directed", "cugraph.Graph.is_multigraph", "cugraph.Graph.is_multipartite", "cugraph.Graph.is_renumbered", "cugraph.Graph.is_weighted", "cugraph.Graph.lookup_internal_vertex_id", "cugraph.Graph.to_directed", "cugraph.Graph.to_undirected", "cugraph.Graph.unrenumber", "cugraph.MultiGraph", "cugraph.analyzeClustering_edge_cut", "cugraph.analyzeClustering_modularity", "cugraph.analyzeClustering_ratio_cut", "cugraph.batched_ego_graphs", "cugraph.betweenness_centrality", "cugraph.bfs", "cugraph.bfs_edges", "cugraph.centrality.eigenvector_centrality", "cugraph.connected_components", "cugraph.core_number", "cugraph.dask.centrality.eigenvector_centrality.eigenvector_centrality", "cugraph.dask.centrality.katz_centrality.katz_centrality", "cugraph.dask.common.read_utils.get_chunksize", "cugraph.dask.comms.comms.destroy", "cugraph.dask.comms.comms.get_2D_partition", "cugraph.dask.comms.comms.get_comms", "cugraph.dask.comms.comms.get_default_handle", "cugraph.dask.comms.comms.get_handle", "cugraph.dask.comms.comms.get_session_id", "cugraph.dask.comms.comms.get_worker_id", "cugraph.dask.comms.comms.get_workers", "cugraph.dask.comms.comms.initialize", "cugraph.dask.comms.comms.is_initialized", "cugraph.dask.community.louvain.louvain", "cugraph.dask.components.connectivity.weakly_connected_components", "cugraph.dask.link_analysis.hits.hits", "cugraph.dask.link_analysis.pagerank.pagerank", "cugraph.dask.traversal.bfs.bfs", "cugraph.dask.traversal.sssp.sssp", "cugraph.degree_centrality", "cugraph.dense_hungarian", "cugraph.ecg", "cugraph.edge_betweenness_centrality", "cugraph.ego_graph", "cugraph.filter_unreachable", "cugraph.force_atlas2", "cugraph.from_adjlist", "cugraph.from_cudf_edgelist", "cugraph.from_edgelist", "cugraph.from_numpy_array", "cugraph.from_numpy_matrix", "cugraph.from_pandas_adjacency", "cugraph.from_pandas_edgelist", "cugraph.generators.rmat", "cugraph.hits", "cugraph.hungarian", "cugraph.hypergraph", "cugraph.jaccard", "cugraph.jaccard_coefficient", "cugraph.jaccard_w", "cugraph.k_core", "cugraph.k_truss", "cugraph.katz_centrality", "cugraph.ktruss_subgraph", "cugraph.leiden", "cugraph.louvain", "cugraph.node2vec", "cugraph.overlap", "cugraph.overlap_coefficient", "cugraph.overlap_w", "cugraph.pagerank", "cugraph.random_walks", "cugraph.shortest_path", "cugraph.shortest_path_length", "cugraph.sorensen", "cugraph.sorensen_coefficient", "cugraph.sorensen_w", "cugraph.spectralBalancedCutClustering", "cugraph.spectralModularityMaximizationClustering", "cugraph.sssp", "cugraph.strongly_connected_components", "cugraph.structure.NumberMap", "cugraph.structure.NumberMap.MultiGPU", "cugraph.structure.NumberMap.SingleGPU", "cugraph.structure.NumberMap.add_internal_vertex_id", "cugraph.structure.NumberMap.compute_vals", "cugraph.structure.NumberMap.compute_vals_types", "cugraph.structure.NumberMap.from_internal_vertex_id", "cugraph.structure.NumberMap.generate_unused_column_name", "cugraph.structure.NumberMap.renumber", "cugraph.structure.NumberMap.renumber_and_segment", "cugraph.structure.NumberMap.set_renumbered_col_names", "cugraph.structure.NumberMap.to_internal_vertex_id", "cugraph.structure.NumberMap.unrenumber", "cugraph.structure.NumberMap.vertex_column_size", "cugraph.structure.graph_implementation.simpleGraphImpl.degree", "cugraph.structure.graph_implementation.simpleGraphImpl.degrees", "cugraph.structure.graph_implementation.simpleGraphImpl.delete_adj_list", "cugraph.structure.graph_implementation.simpleGraphImpl.delete_edge_list", "cugraph.structure.graph_implementation.simpleGraphImpl.edges", "cugraph.structure.graph_implementation.simpleGraphImpl.enable_batch", "cugraph.structure.graph_implementation.simpleGraphImpl.get_two_hop_neighbors", "cugraph.structure.graph_implementation.simpleGraphImpl.has_edge", "cugraph.structure.graph_implementation.simpleGraphImpl.has_node", "cugraph.structure.graph_implementation.simpleGraphImpl.has_self_loop", "cugraph.structure.graph_implementation.simpleGraphImpl.in_degree", "cugraph.structure.graph_implementation.simpleGraphImpl.neighbors", "cugraph.structure.graph_implementation.simpleGraphImpl.nodes", "cugraph.structure.graph_implementation.simpleGraphImpl.number_of_edges", "cugraph.structure.graph_implementation.simpleGraphImpl.number_of_nodes", "cugraph.structure.graph_implementation.simpleGraphImpl.number_of_vertices", "cugraph.structure.graph_implementation.simpleGraphImpl.out_degree", "cugraph.structure.graph_implementation.simpleGraphImpl.vertex_column_size", "cugraph.structure.graph_implementation.simpleGraphImpl.view_adj_list", "cugraph.structure.graph_implementation.simpleGraphImpl.view_edge_list", "cugraph.structure.graph_implementation.simpleGraphImpl.view_transposed_adj_list", "cugraph.structure.shuffle", "cugraph.subgraph", "cugraph.symmetrize", "cugraph.symmetrize_ddf", "cugraph.symmetrize_df", "cugraph.to_numpy_array", "cugraph.to_numpy_matrix", "cugraph.to_pandas_adjacency", "cugraph.to_pandas_edgelist", "cugraph.tree.minimum_spanning_tree.maximum_spanning_tree", "cugraph.tree.minimum_spanning_tree.minimum_spanning_tree", "cugraph.triangle_count", "cugraph.uniform_neighbor_sample", "cugraph.weakly_connected_components", "pylibcugraph.bfs", "pylibcugraph.eigenvector_centrality", "pylibcugraph.hits", "pylibcugraph.katz_centrality", "pylibcugraph.node2vec", "pylibcugraph.pagerank", "pylibcugraph.sssp", "pylibcugraph.strongly_connected_components", "pylibcugraph.weakly_connected_components", "Centrality", "Community", "Components", "Cores", "Multi-GPU with cuGraph", "Generator", "Graph Implementation", "DASK MG Helper functions", "API reference", "Layout", "Linear Assignment", "Link Analysis", "Link Prediction", "pylibcugraph", "Sampling", "Graph Classes", "Traversal", "Tree", "cuGraph BLOGS and Presentations", "cuGraph Introduction", "References", "Basics", "NetworkX Compatibility and Transition", "Welcome to cugraph\u2019s documentation!"], "terms": {"class": [0, 1, 23, 28, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 95, 161, 176], "direct": [0, 1, 5, 14, 20, 21, 23, 28, 29, 30, 31, 32, 33, 34, 35, 48, 49, 50, 51, 52, 53, 56, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 74, 76, 80, 85, 86, 88, 89, 93, 94, 128, 131, 132, 133, 134, 143], "fals": [0, 1, 2, 6, 7, 11, 13, 14, 15, 16, 22, 23, 27, 28, 30, 32, 45, 46, 50, 57, 59, 66, 67, 70, 84, 85, 94, 98, 101, 103, 104, 107, 122, 130, 132, 133, 134, 139, 140, 142, 143, 144, 145, 148, 149, 150, 157], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 157, 161, 175], "A": [0, 1, 2, 6, 8, 9, 10, 11, 19, 20, 21, 22, 23, 28, 33, 45, 49, 54, 57, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 85, 88, 89, 90, 98, 101, 107, 110, 119, 125, 131, 139, 140, 144, 145, 146, 147, 148, 149, 150, 171, 172, 173], "bipartit": [0, 13, 54, 69, 175], "graph": [0, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 107, 109, 110, 113, 116, 117, 118, 119, 121, 122, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 161, 171, 172, 173, 174, 176], "method": [0, 1, 5, 6, 11, 23, 47, 50, 66, 78, 79, 84, 86, 91, 92, 93, 95, 109, 110, 119, 125, 149, 161], "__init__": [0, 1, 23, 95], "m_graph": 1, "none": [1, 5, 6, 7, 8, 11, 19, 20, 21, 27, 28, 29, 30, 32, 33, 35, 42, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 98, 101, 106, 107, 109, 110, 119, 125, 127, 129, 132, 133, 134, 139, 140, 141, 143, 144, 146, 147, 149, 151, 152, 157, 175], "gpu": [1, 19, 22, 27, 28, 31, 32, 33, 34, 35, 36, 45, 47, 49, 50, 51, 52, 53, 55, 56, 59, 67, 68, 71, 72, 73, 76, 77, 78, 79, 81, 83, 84, 88, 89, 90, 91, 92, 94, 107, 109, 110, 119, 125, 130, 132, 141, 142, 143, 145, 146, 147, 149, 150, 161, 171, 172, 173, 175, 176], "object": [1, 5, 6, 7, 11, 27, 29, 30, 32, 48, 51, 57, 60, 66, 67, 93, 94, 101, 131, 143, 151, 152, 174], "base": [1, 29, 30, 31, 32, 33, 34, 49, 68, 71, 73, 74, 76, 77, 81, 83, 87, 93, 94, 99, 101, 142, 143, 146, 147, 151, 152, 157, 172], "other": [1, 27, 45, 57, 59, 69, 70, 105, 133, 134, 157, 161, 172, 174, 175], "type": [1, 5, 28, 29, 30, 32, 52, 54, 56, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 78, 87, 93, 94, 98, 100, 101, 127, 128, 129, 143, 146, 147, 148, 149, 150], "paramet": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 16, 19, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 98, 101, 106, 107, 109, 110, 119, 125, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "multigraph": [1, 15, 175], "default": [1, 2, 5, 6, 7, 8, 11, 19, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 40, 45, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 98, 101, 107, 109, 110, 119, 125, 130, 132, 133, 134, 138, 139, 140, 142, 143, 146, 149, 175], "initi": [1, 5, 6, 7, 8, 9, 10, 11, 28, 35, 37, 40, 42, 44, 46, 49, 50, 56, 59, 60, 63, 64, 65, 66, 68, 76, 84, 146, 149, 157, 172], "from": [1, 2, 5, 6, 7, 8, 9, 10, 11, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 41, 43, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 98, 101, 107, 125, 131, 132, 133, 134, 139, 140, 142, 143, 144, 148, 150, 151, 152, 157, 161, 171, 173, 175], "boolean": [1, 30, 98, 101], "option": [1, 2, 5, 6, 7, 8, 11, 19, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 45, 47, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 98, 101, 106, 107, 109, 110, 119, 125, 130, 132, 133, 134, 138, 142, 143, 146], "indic": [1, 5, 6, 7, 11, 28, 51, 56, 60, 61, 62, 66, 73, 83, 86, 90, 93, 127, 129, 137, 142, 151, 152, 175], "i": [1, 5, 6, 7, 11, 13, 14, 15, 16, 17, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 42, 44, 45, 47, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 98, 101, 107, 109, 110, 115, 119, 123, 125, 127, 128, 129, 132, 133, 134, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 157, 171, 172, 175, 176], "exampl": [1, 5, 6, 11, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 107, 109, 110, 119, 125, 131, 132, 133, 134, 139, 140, 141, 143, 144, 145, 146, 148, 149, 150, 151, 152, 161, 172, 175], "undirect": [1, 5, 7, 14, 21, 27, 28, 29, 31, 32, 33, 34, 35, 47, 53, 56, 57, 71, 72, 74, 75, 76, 77, 78, 79, 80, 85, 88, 89, 94, 128, 131, 139, 140, 141, 143, 144], "g": [1, 5, 6, 11, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 47, 53, 54, 55, 56, 57, 59, 60, 61, 62, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 107, 109, 110, 119, 125, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 157, 172, 175], "true": [1, 2, 6, 7, 11, 12, 14, 15, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 62, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 98, 101, 107, 116, 117, 118, 131, 132, 133, 134, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 157], "properti": [1, 84, 133, 134, 149], "df": [2, 6, 11, 19, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 49, 51, 52, 53, 55, 56, 58, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 78, 79, 81, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 98, 100, 101, 103, 104, 106, 107, 109, 110, 115, 119, 125, 128, 132, 134, 138, 142, 143, 175], "internal_column_nam": [2, 101], "external_column_nam": [2, 101], "drop": [2, 73, 83, 90, 98, 101, 132, 133, 134], "preserve_ord": [2, 22, 98, 103, 104, 107], "given": [2, 19, 22, 24, 25, 26, 27, 57, 70, 71, 72, 73, 75, 77, 81, 83, 88, 89, 90, 91, 92, 98, 101, 106, 107, 109, 110, 119, 125, 131], "datafram": [2, 6, 7, 10, 11, 19, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 98, 101, 106, 107, 109, 110, 113, 115, 119, 121, 125, 128, 131, 132, 133, 134, 137, 138, 141, 142, 143, 144, 172, 175, 176], "contain": [2, 5, 6, 8, 9, 10, 11, 19, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 98, 101, 106, 107, 109, 110, 113, 116, 117, 119, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152], "extern": [2, 6, 7, 11, 19, 22, 24, 25, 26, 66, 98, 99, 101, 106, 107, 115], "vertex": [2, 6, 7, 11, 19, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 66, 67, 68, 69, 71, 72, 73, 74, 76, 78, 79, 81, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 98, 101, 106, 107, 109, 110, 115, 119, 125, 130, 131, 141, 142, 143, 144, 146, 147, 149, 150, 151, 152, 172, 175], "id": [2, 6, 7, 11, 19, 22, 24, 25, 26, 29, 30, 47, 51, 52, 54, 55, 58, 66, 67, 69, 70, 71, 72, 73, 78, 79, 81, 83, 87, 88, 89, 90, 93, 98, 101, 106, 107, 109, 110, 115, 119, 125, 133, 134, 151, 152], "identifi": [2, 19, 22, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 47, 49, 50, 53, 54, 55, 56, 59, 68, 69, 73, 74, 76, 78, 79, 83, 84, 90, 91, 92, 94, 98, 101, 106, 107, 143, 146, 149, 150], "column": [2, 5, 6, 7, 8, 11, 19, 22, 24, 25, 26, 28, 29, 30, 32, 45, 47, 52, 54, 55, 56, 57, 59, 61, 62, 66, 69, 70, 71, 72, 73, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 93, 94, 98, 99, 100, 101, 102, 105, 106, 107, 115, 121, 127, 128, 129, 131, 132, 133, 134, 137, 138, 143, 175], "return": [2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 98, 101, 106, 107, 109, 110, 113, 115, 116, 117, 118, 119, 121, 125, 127, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 175], "intern": [2, 19, 22, 35, 59, 74, 76, 80, 98, 99, 100, 101, 106, 107, 128, 171, 172, 173], "specifi": [2, 24, 25, 26, 27, 28, 35, 45, 47, 52, 54, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 76, 78, 79, 80, 81, 83, 88, 89, 90, 91, 92, 93, 94, 98, 101, 109, 110, 119, 125, 131, 142, 143, 150], "name": [2, 6, 7, 8, 11, 19, 22, 24, 25, 26, 34, 35, 48, 49, 50, 51, 52, 56, 66, 70, 77, 98, 99, 100, 101, 102, 105, 106, 107, 132, 133, 134, 137, 138, 157, 172, 175], "preserv": [2, 22, 98, 107], "order": [2, 19, 22, 28, 54, 56, 71, 72, 73, 74, 81, 83, 88, 89, 90, 98, 106, 107, 109, 110, 119, 125, 151, 152, 173, 175], "origin": [2, 6, 7, 11, 22, 66, 70, 101, 107], "cudf": [2, 3, 5, 6, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 98, 101, 106, 107, 109, 110, 113, 115, 119, 121, 125, 127, 128, 129, 131, 132, 134, 141, 142, 143, 144], "dask_cudf": [2, 6, 7, 19, 22, 34, 35, 36, 47, 48, 49, 50, 51, 52, 62, 67, 98, 101, 106, 107, 132, 133, 157], "convert": [2, 6, 7, 19, 22, 29, 32, 94, 98, 101, 106, 107, 143], "string": [2, 19, 22, 61, 62, 70, 98, 101, 106, 107, 133, 134, 139, 140], "list": [2, 3, 5, 6, 8, 11, 25, 27, 28, 29, 32, 47, 49, 50, 51, 52, 55, 56, 61, 62, 66, 68, 69, 70, 71, 72, 73, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 94, 98, 101, 106, 107, 109, 110, 111, 112, 119, 125, 127, 128, 129, 131, 132, 133, 134, 138, 139, 141, 142, 143, 161, 175], "": [2, 35, 43, 51, 52, 56, 61, 62, 70, 76, 93, 128, 133, 134, 142, 147, 157, 171, 173], "bool": [2, 6, 7, 11, 22, 27, 28, 29, 32, 45, 49, 51, 52, 53, 56, 57, 59, 61, 62, 66, 67, 68, 70, 77, 80, 85, 94, 107, 130, 132, 133, 134, 139, 140, 142, 143, 146, 150], "data": [2, 27, 28, 31, 32, 33, 34, 35, 47, 49, 50, 52, 53, 55, 56, 59, 60, 67, 68, 70, 71, 72, 73, 76, 78, 79, 80, 81, 83, 84, 88, 89, 90, 91, 92, 93, 94, 98, 133, 134, 141, 142, 143, 145, 146, 147, 148, 149, 150, 157, 161, 171, 172, 174, 175, 176], "frame": [2, 27, 28, 31, 32, 33, 34, 35, 47, 49, 50, 53, 55, 56, 59, 68, 71, 72, 73, 76, 78, 79, 81, 83, 84, 88, 89, 90, 91, 92, 94, 133, 134, 141, 142, 143], "requir": [2, 6, 7, 29, 35, 51, 67, 69, 76, 80, 101, 142, 172, 175], "an": [2, 5, 6, 7, 11, 14, 21, 22, 28, 29, 31, 32, 34, 35, 49, 50, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 76, 80, 81, 83, 84, 87, 88, 89, 90, 94, 98, 101, 102, 106, 115, 123, 128, 132, 139, 140, 143, 146, 149, 172, 173, 175], "extra": [2, 98], "sort": [2, 22, 98, 115, 151, 152], "new": [2, 35, 60, 61, 62, 76, 105, 133, 134, 147, 172, 173, 175], "node": [3, 8, 20, 21, 27, 28, 31, 33, 34, 35, 45, 49, 56, 57, 59, 68, 70, 73, 74, 76, 80, 83, 85, 90, 117, 124, 128, 142, 145, 146, 147, 148, 157, 171, 172, 175], "add": [3, 22, 171], "inform": [3, 6, 8, 9, 10, 11, 27, 29, 30, 31, 32, 34, 35, 38, 45, 47, 48, 49, 50, 51, 52, 53, 55, 57, 59, 63, 64, 65, 66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 81, 83, 84, 87, 88, 89, 90, 93, 94, 139, 140, 141, 142, 143, 173, 175], "seri": [3, 5, 19, 27, 28, 31, 32, 33, 34, 35, 47, 49, 50, 53, 54, 55, 56, 60, 68, 69, 71, 72, 73, 74, 76, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 91, 92, 94, 98, 101, 106, 109, 110, 115, 119, 121, 125, 127, 128, 129, 131, 132, 141, 142, 143, 144], "The": [3, 5, 6, 7, 11, 19, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 93, 94, 98, 101, 105, 106, 107, 109, 110, 115, 119, 125, 127, 129, 130, 132, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 157, 171, 172, 173, 175], "store": [3, 5, 6, 7, 52, 61, 62, 71, 93, 128, 132, 133, 134, 172, 175, 176], "empti": [4, 70, 80, 144, 148], "offset_col": [5, 127, 129], "index_col": [5, 127, 129], "value_col": [5, 127, 129], "adjac": [5, 6, 7, 8, 9, 10, 32, 47, 49, 55, 60, 63, 64, 65, 67, 68, 71, 72, 73, 78, 79, 81, 83, 84, 88, 89, 90, 94, 109, 110, 111, 119, 125, 127, 129, 135, 136, 137, 139, 143], "It": [5, 6, 11, 45, 47, 55, 59, 66, 78, 79, 113, 175], "error": [5, 6, 11, 47, 59, 66, 78, 79, 145, 147], "call": [5, 6, 11, 13, 16, 24, 25, 28, 33, 45, 47, 56, 66, 74, 78, 79, 132, 133, 134, 144, 172, 175, 176], "thi": [5, 6, 11, 13, 16, 19, 20, 22, 25, 26, 28, 29, 31, 32, 33, 34, 35, 40, 45, 47, 49, 50, 51, 54, 55, 56, 59, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 88, 89, 90, 92, 94, 98, 101, 106, 107, 109, 110, 119, 123, 125, 127, 128, 129, 131, 132, 133, 134, 141, 142, 143, 144, 146, 147, 149, 150, 151, 152, 161, 172, 175], "pass": [5, 6, 28, 56, 60, 61, 62, 63, 64, 65, 66, 132], "argument": [5, 6, 7, 11, 61, 62, 66, 145, 147], "wrap": [5, 6, 45, 127, 128, 129, 172], "gdf_column": [5, 6, 127, 129], "repres": [5, 6, 29, 30, 32, 33, 38, 45, 50, 54, 55, 57, 60, 70, 71, 72, 73, 74, 80, 81, 83, 84, 85, 88, 89, 90, 93, 94, 128, 133, 134, 143, 148, 149, 151, 152, 172], "us": [5, 6, 7, 11, 22, 28, 29, 30, 31, 32, 34, 35, 41, 45, 47, 49, 50, 51, 53, 54, 55, 56, 59, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 101, 105, 106, 107, 113, 133, 134, 139, 140, 141, 143, 144, 147, 149, 157, 171, 172, 173, 174, 176], "format": [5, 6, 161], "If": [5, 6, 7, 11, 22, 28, 29, 30, 31, 32, 34, 35, 45, 50, 51, 52, 53, 56, 57, 60, 61, 62, 66, 67, 69, 70, 71, 72, 73, 74, 76, 80, 81, 83, 84, 85, 87, 88, 89, 90, 93, 94, 98, 101, 106, 107, 109, 110, 119, 121, 125, 128, 132, 133, 134, 143, 144, 146, 147, 148, 149, 150, 157, 175], "unweight": [5, 60, 86, 93, 127, 129], "creat": [5, 29, 50, 51, 60, 61, 62, 63, 64, 65, 66, 70, 73, 80, 83, 84, 90, 132, 133, 134, 142, 157, 175], "weight": [5, 6, 7, 11, 18, 20, 21, 25, 26, 27, 28, 29, 30, 32, 33, 35, 47, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 113, 127, 128, 129, 132, 133, 134, 139, 140, 141, 143, 144, 145, 148, 149, 150, 151, 152, 175], "edg": [5, 6, 11, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 109, 112, 116, 119, 122, 125, 127, 128, 129, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 148, 149, 150, 151, 152, 172, 175], "must": [5, 6, 7, 45, 50, 51, 52, 74, 91, 92, 144, 150], "both": [5, 29, 32, 33, 49, 68, 71, 72, 74, 88, 89, 94, 109, 128, 131, 132, 133, 134, 143, 172, 175], "size": [5, 28, 31, 32, 33, 34, 35, 47, 49, 50, 53, 55, 56, 59, 68, 71, 72, 73, 74, 76, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 91, 92, 94, 109, 110, 119, 125, 127, 129, 143, 148, 151, 152, 157], "v": [5, 6, 7, 11, 20, 21, 28, 31, 32, 33, 34, 35, 47, 49, 50, 53, 55, 59, 61, 62, 66, 67, 68, 69, 74, 76, 78, 79, 84, 91, 92, 94, 116, 127, 129, 133, 134, 143, 173], "1": [5, 6, 11, 20, 21, 22, 27, 28, 29, 31, 32, 33, 34, 35, 45, 47, 49, 50, 52, 55, 56, 57, 59, 60, 61, 62, 66, 67, 68, 75, 76, 77, 78, 79, 80, 84, 91, 93, 94, 98, 101, 106, 107, 109, 110, 119, 125, 127, 129, 131, 132, 134, 139, 140, 141, 143, 144, 145, 146, 148, 149, 150, 151, 152, 171, 173, 175], "number": [5, 6, 7, 11, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 45, 47, 49, 50, 54, 55, 56, 59, 61, 62, 66, 67, 68, 71, 74, 76, 78, 79, 84, 91, 92, 94, 101, 109, 119, 122, 124, 125, 127, 129, 130, 141, 143, 144, 145, 146, 147, 148, 149, 151, 152, 161, 175], "vertic": [5, 6, 7, 11, 12, 28, 31, 32, 33, 34, 35, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 61, 62, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 93, 94, 109, 110, 119, 121, 125, 127, 129, 131, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "gdf": [5, 127, 129, 141], "offset": [5, 27, 60, 80, 127, 129, 151, 152], "rang": [5, 6, 7, 11, 55, 61, 62, 66, 73, 83, 90, 127, 129], "0": [5, 6, 7, 11, 20, 21, 22, 28, 29, 30, 31, 32, 34, 35, 47, 50, 51, 52, 54, 55, 56, 59, 60, 61, 62, 66, 67, 69, 76, 78, 79, 80, 84, 91, 92, 93, 94, 98, 101, 107, 109, 110, 119, 125, 127, 129, 131, 132, 134, 141, 143, 144, 145, 148, 149, 150, 151, 152, 157, 171, 175], "e": [5, 47, 56, 71, 72, 73, 77, 79, 81, 83, 88, 89, 90, 127, 128, 129, 133, 134, 171, 172, 173, 175], "destin": [5, 6, 7, 11, 27, 34, 35, 48, 49, 50, 51, 52, 56, 61, 62, 66, 71, 72, 73, 81, 83, 88, 89, 90, 113, 127, 128, 129, 132, 133, 134, 137, 138, 141, 142, 144, 157], "index": [5, 6, 7, 11, 22, 30, 61, 62, 66, 73, 76, 83, 87, 88, 90, 93, 127, 128, 129, 150, 157, 173, 176], "each": [5, 20, 21, 27, 28, 29, 30, 32, 35, 48, 49, 50, 51, 52, 53, 54, 56, 59, 68, 70, 71, 73, 75, 76, 77, 80, 81, 83, 84, 85, 88, 90, 93, 94, 127, 128, 129, 142, 143, 144, 146, 147, 148, 150, 151, 152, 172], "pointer": [5, 61, 62, 127, 129, 146, 148], "can": [5, 6, 7, 11, 28, 29, 30, 31, 32, 33, 34, 35, 45, 50, 53, 54, 56, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 74, 76, 77, 80, 84, 85, 93, 94, 105, 143, 149, 151, 152, 157, 175], "valu": [5, 27, 28, 29, 30, 31, 32, 33, 34, 35, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 67, 68, 69, 70, 71, 73, 74, 76, 80, 83, 84, 87, 90, 93, 94, 105, 127, 128, 129, 132, 133, 134, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 175], "expect": [5, 45, 127, 129, 172], "element": [5, 31, 34, 56, 98, 127, 129, 133, 134, 149, 150, 172, 175], "float": [5, 24, 25, 26, 27, 29, 30, 31, 34, 35, 47, 49, 50, 54, 55, 57, 59, 67, 68, 69, 76, 78, 79, 80, 84, 87, 91, 92, 93, 127, 129, 146], "point": [5, 27, 29, 30, 32, 47, 57, 59, 78, 79, 87, 93, 94, 105, 119, 125, 127, 129, 143, 172], "read_csv": [5, 6, 11, 20, 21, 34, 35, 36, 48, 49, 50, 51, 52, 60, 61, 62, 66, 70, 107, 109, 110, 119, 125, 132, 133, 134, 141, 144, 157, 175], "datasets_path": [5, 6, 11, 20, 21, 34, 35, 36, 48, 49, 50, 51, 52, 60, 61, 62, 66, 70, 107, 109, 110, 119, 125, 132, 134, 141, 144], "karat": [5, 6, 11, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 107, 109, 110, 119, 125, 131, 132, 133, 134, 141, 143, 144, 173], "csv": [5, 6, 11, 20, 21, 34, 35, 36, 48, 49, 50, 51, 52, 60, 61, 62, 66, 70, 107, 109, 110, 119, 125, 132, 133, 134, 141, 144, 157], "delimit": [5, 6, 11, 20, 21, 34, 35, 48, 49, 50, 51, 52, 60, 61, 62, 66, 70, 107, 109, 110, 119, 125, 132, 133, 134, 141, 144], "dtype": [5, 6, 11, 20, 21, 34, 35, 48, 49, 50, 51, 52, 54, 60, 61, 62, 66, 69, 70, 80, 107, 109, 110, 119, 125, 131, 132, 133, 134, 141, 144, 145, 148, 149, 150, 151, 152, 157], "int32": [5, 6, 11, 20, 21, 34, 35, 48, 49, 50, 51, 52, 60, 61, 62, 66, 70, 80, 95, 107, 109, 110, 119, 125, 131, 132, 133, 134, 141, 142, 144, 145, 148, 149, 150, 151, 152, 157], "float32": [5, 6, 11, 20, 21, 28, 34, 35, 48, 49, 50, 51, 52, 56, 60, 61, 62, 66, 70, 107, 109, 110, 119, 125, 132, 133, 134, 141, 144, 145, 148, 149, 150], "header": [5, 6, 11, 20, 21, 60, 61, 62, 66, 70, 107, 109, 110, 119, 125, 132, 134, 141, 144], "m": [5, 20, 21, 60, 61, 62, 70, 76, 77, 85, 109, 110, 119, 125, 132, 134, 144, 147, 173], "to_panda": 5, "scipi": [5, 27, 29, 30, 32, 48, 57, 60, 93, 94, 143, 151, 152, 172, 176], "spars": [5, 27, 29, 30, 32, 48, 57, 59, 60, 87, 93, 94, 143, 151, 152, 172, 176], "coo_matrix": [5, 60], "2": [5, 6, 11, 27, 28, 29, 30, 31, 32, 34, 35, 56, 57, 59, 60, 61, 62, 66, 67, 71, 75, 76, 77, 80, 91, 92, 93, 94, 131, 132, 141, 143, 144, 145, 148, 149, 150, 151, 152, 161, 171, 173, 175], "tocsr": [5, 60], "indptr": [5, 60, 151, 152], "input_df": [6, 132], "edge_attr": [6, 7, 11, 34, 48, 49, 50, 51, 52, 61, 62, 66, 84, 141, 144], "renumb": [6, 7, 11, 17, 22, 50, 61, 62, 66, 84, 95, 107, 128, 130, 144, 145, 148, 149, 150], "store_transpos": [6, 7, 103, 104, 144, 145, 148, 149, 150], "legacy_renum_onli": [6, 7, 29, 51, 80, 103, 104, 142], "By": [6, 7, 11, 66, 109, 110, 119, 125], "enabl": [6, 7, 11, 29, 51, 66, 80, 142], "map": [6, 7, 11, 28, 56, 66, 70], "where": [6, 7, 11, 28, 32, 33, 35, 45, 56, 61, 62, 66, 67, 71, 72, 74, 75, 76, 77, 88, 89, 94, 101, 132, 133, 134, 143, 145, 146, 148, 149, 150, 171, 172], "input": [6, 7, 11, 22, 29, 30, 32, 33, 45, 47, 50, 51, 52, 53, 55, 56, 57, 66, 70, 74, 78, 79, 84, 87, 93, 94, 98, 107, 128, 130, 133, 134, 141, 143, 144, 145, 146, 147, 148, 149, 150, 157, 175], "ar": [6, 7, 11, 22, 27, 28, 31, 32, 33, 34, 35, 45, 49, 50, 51, 52, 54, 56, 57, 59, 61, 62, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 88, 89, 90, 93, 94, 101, 105, 107, 109, 110, 115, 119, 125, 127, 128, 129, 131, 132, 133, 134, 141, 143, 144, 146, 148, 149, 150, 151, 152, 171, 172], "singl": [6, 7, 11, 19, 22, 27, 28, 29, 30, 56, 57, 59, 66, 67, 80, 85, 87, 93, 107, 132, 145, 146, 147, 149, 150, 157, 161, 171, 172, 175], "integ": [6, 7, 11, 24, 25, 26, 27, 28, 29, 30, 47, 51, 52, 54, 55, 56, 57, 59, 61, 62, 66, 69, 78, 79, 91, 92], "disabl": [6, 7, 11, 66], "present": [6, 11, 27, 29, 30, 32, 47, 49, 55, 57, 59, 66, 68, 71, 72, 73, 78, 79, 81, 83, 84, 87, 88, 89, 90, 93, 94, 128, 143, 151, 152, 174, 176], "reinterpret": 6, "For": [6, 29, 32, 70, 72, 82, 89, 94, 113, 127, 128, 129, 131, 143, 149, 150, 151, 152, 172, 175], "distribut": [6, 7, 35, 45, 49, 59, 130, 132, 133, 161], "path": [6, 28, 29, 30, 32, 51, 52, 56, 58, 80, 85, 87, 93, 94, 142, 143, 148, 150, 161, 173, 174], "pleas": [6, 28, 56, 71], "from_dask_cudf_edgelist": [6, 34, 35, 48, 49, 50, 51, 52, 157], "str": [6, 7, 11, 24, 25, 26, 32, 33, 55, 66, 70, 84, 87, 94, 101, 132, 133, 134, 138, 143], "arrai": [6, 7, 8, 11, 29, 30, 63, 66, 80, 135, 138, 144, 145, 146, 147, 148, 149, 150, 151, 152, 175], "like": [6, 7, 8, 11, 66, 80, 138, 148, 175], "whether": [6, 11, 29, 59, 66, 67, 70, 77, 144, 157], "transpos": [6, 7, 84, 129, 130], "matrix": [6, 7, 8, 9, 10, 27, 29, 30, 32, 48, 54, 57, 60, 63, 64, 65, 67, 71, 87, 93, 94, 128, 130, 135, 136, 137, 143, 151, 152, 172], "certain": [6, 7], "algorithm": [6, 7, 24, 25, 28, 29, 32, 45, 47, 49, 50, 51, 52, 54, 55, 56, 59, 67, 68, 69, 71, 72, 73, 77, 78, 79, 80, 81, 83, 88, 89, 90, 93, 94, 131, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 171, 172, 174, 176], "skip": [6, 7, 70], "c": [6, 7, 54, 67, 69, 76, 157, 172, 173], "step": [6, 7, 67, 172], "pylibcugraph": [6, 7, 29, 51, 80, 142, 161, 176], "yet": [6, 7, 77, 146], "api": [6, 7, 29, 34, 35, 48, 49, 50, 51, 52, 54, 86, 94, 143, 175, 176], "input_ddf": 7, "edgelist": [7, 50, 66, 67, 84, 128, 130, 132, 138, 144], "current": [7, 13, 15, 16, 28, 30, 33, 45, 47, 56, 71, 72, 75, 77, 78, 79, 80, 85, 88, 89, 141, 142, 146, 151, 152, 157, 175], "support": [7, 27, 28, 31, 33, 34, 35, 47, 56, 57, 61, 74, 76, 77, 78, 79, 80, 85, 93, 141, 146, 150, 151, 152, 157, 172], "note": [7, 13, 15, 16, 19, 22, 28, 29, 32, 35, 50, 51, 54, 56, 59, 71, 75, 76, 77, 80, 84, 94, 98, 106, 107, 128, 133, 134, 142, 143, 151, 152, 175], "refer": [7, 76, 77, 80, 174, 176], "provid": [7, 45, 50, 57, 60, 69, 71, 72, 73, 81, 83, 84, 86, 88, 89, 90, 98, 109, 110, 119, 125, 131, 144, 161, 171, 172], "should": [7, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 45, 47, 48, 49, 50, 51, 52, 55, 56, 57, 59, 61, 62, 68, 69, 71, 72, 73, 74, 76, 77, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 101, 131, 133, 134, 141, 143, 144, 146, 147, 149, 171], "np_arrai": 8, "numpi": [8, 9, 28, 29, 30, 32, 56, 63, 64, 93, 94, 95, 135, 136, 143, 145, 148, 149, 150, 151, 152], "act": 8, "label": [8, 22, 32, 48, 94, 101, 107, 143, 151, 152, 172], "np_matrix": 9, "pdf": [10, 11, 60, 173], "panda": [10, 11, 27, 29, 30, 60, 62, 65, 66, 93, 137, 138, 175], "download": [11, 34, 35, 48, 49, 50, 51, 52, 66, 132, 133, 134], "dataset": [11, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 66, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 131, 132, 133, 134, 139, 140, 143, 157], "http": [11, 34, 35, 47, 48, 49, 50, 51, 52, 55, 66, 76, 77, 79, 80, 132, 133, 134, 171, 172, 173], "github": [11, 34, 35, 48, 49, 50, 51, 52, 66, 132, 133, 134, 172], "com": [11, 34, 35, 48, 49, 50, 51, 52, 66, 132, 133, 134, 171, 172, 173], "rapidsai": [11, 34, 35, 48, 49, 50, 51, 52, 66, 132, 133, 134, 172], "pd": [11, 60, 66, 175], "ha": [12, 18, 28, 33, 50, 56, 70, 77, 84, 118, 144, 149, 150, 172], "isol": [12, 50, 67, 84], "check": [13, 16, 145, 147, 161], "sole": [13, 16], "reli": [13, 16, 28, 56], "user": [13, 16, 56, 71, 73, 81, 83, 84, 88, 90, 171, 172], "add_nodes_from": [13, 16], "doe": [13, 16, 19, 22, 28, 33, 40, 50, 56, 61, 74, 84, 106, 107, 113, 131, 139, 142, 172, 175], "pars": [13, 16], "implement": [13, 15, 16, 28, 30, 47, 49, 56, 68, 71, 72, 76, 77, 78, 79, 88, 89, 141, 147, 161, 176], "alwai": [13, 15, 16, 35, 76, 172], "els": [15, 70, 73, 81, 83, 85, 90], "multipartit": 16, "partit": [16, 19, 22, 24, 25, 26, 36, 38, 45, 47, 50, 51, 52, 55, 67, 69, 78, 79, 91, 92, 98, 106, 107, 130, 157, 173], "column_nam": [19, 22, 99, 100, 102, 107], "function": [19, 20, 22, 30, 50, 61, 75, 77, 84, 99, 100, 102, 107, 123, 157, 161, 172, 176], "guarante": [19, 22, 35, 76, 78, 98, 106, 107, 173], "mode": [19, 22, 59, 107], "multi": [19, 22, 45, 69, 73, 80, 83, 85, 90, 107, 121, 131, 132, 133, 134, 145, 146, 147, 149, 150, 161, 171, 172, 176], "represent": [20, 54], "set": [20, 29, 31, 33, 34, 35, 49, 50, 52, 59, 67, 68, 69, 70, 71, 73, 74, 76, 80, 81, 83, 84, 88, 90, 93, 94, 105, 109, 110, 119, 125, 131, 132, 133, 134, 141, 143, 144, 146, 147, 149, 150, 151, 152, 157, 174], "attribut": [20, 57, 60, 61, 62, 63, 64, 65, 66, 70, 75, 84, 139, 140], "view": [20, 113], "same": [20, 21, 22, 28, 70, 107, 128, 133, 134, 150], "u": [20, 21, 116, 133, 134, 172, 173], "replac": [20, 21, 22, 105, 107, 142, 175], "two": [20, 28, 29, 30, 31, 32, 33, 34, 35, 47, 49, 50, 53, 55, 59, 68, 69, 71, 72, 73, 74, 76, 78, 79, 81, 83, 84, 88, 89, 90, 91, 92, 94, 115, 132, 142, 143, 146], "from_cudf_edgelist": [20, 21, 107, 109, 110, 119, 125, 141, 144], "dig": [20, 21], "copi": [21, 57, 75, 139, 140], "get_column_nam": [22, 107], "output": [22, 33, 58, 59, 77, 101, 107, 133, 134], "through": [22, 28, 56, 70, 107, 161], "n": [22, 27, 28, 56, 57, 73, 76, 78, 83, 90, 101, 107, 109, 110, 117, 119, 120, 125, 147, 173], "suffix": [22, 107], "_column_nam": [22, 107], "you": [22, 59, 71, 76, 157], "wish": 22, "row": [22, 45, 54, 57, 70, 107, 137, 151, 152, 175], "match": [22, 54, 69, 76, 107, 133, 134, 144, 172], "exist": [22, 101, 105, 107, 131, 132, 133, 134, 175], "unmodifi": [22, 101, 107], "dentifi": 22, "ad": [22, 29, 35, 61, 70, 76, 94, 101, 107, 123, 143, 147, 161, 175], "remov": [22, 58, 107], "more": [23, 28, 33, 47, 51, 52, 56, 59, 74, 78, 79, 80, 98, 106, 144, 146, 148, 149, 150, 157, 175], "than": [23, 28, 35, 45, 47, 50, 56, 59, 76, 78, 79, 84, 91, 147, 149, 157, 172, 175], "one": [23, 28, 29, 50, 51, 52, 56, 69, 70, 87, 115, 139, 144, 157, 172, 175], "between": [23, 28, 29, 30, 31, 34, 35, 50, 56, 59, 67, 70, 71, 72, 73, 76, 81, 83, 84, 88, 89, 90, 93, 149, 161, 172, 173, 175], "pair": [23, 28, 56, 70, 71, 72, 73, 81, 83, 88, 89, 90, 115, 128, 132, 175], "n_cluster": [24, 25, 26], "cluster": [24, 25, 26, 34, 35, 45, 48, 49, 50, 51, 52, 55, 59, 91, 92, 133, 157, 161, 171, 173, 175], "vertex_col_nam": [24, 25, 26], "cluster_col_nam": [24, 25, 26], "comput": [24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 47, 49, 50, 52, 53, 55, 56, 57, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 99, 100, 109, 110, 115, 119, 125, 127, 128, 129, 131, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 157, 171, 172, 173, 175], "cut": [24, 26, 91], "score": [24, 25, 26, 28, 35, 47, 49, 50, 56, 68, 76, 78, 79, 84, 145, 147, 149, 171, 173, 175], "assumpt": [24, 25], "result": [24, 25, 28, 31, 33, 34, 35, 45, 48, 49, 53, 55, 56, 58, 60, 68, 70, 71, 76, 115, 141, 142], "special": [24, 25], "descriptor": [24, 25, 26, 31, 34, 35, 47, 49, 50, 52, 53, 55, 57, 59, 68, 69, 74, 75, 76, 77, 78, 79, 84, 87, 91, 92, 131, 139, 140, 141], "assign": [24, 25, 26, 47, 54, 55, 69, 78, 79, 91, 92, 161, 173, 175, 176], "analyz": [24, 25, 26, 157], "experiment": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 47, 53, 55, 56, 57, 59, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 131, 139, 140, 143], "import": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 45, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 107, 131, 132, 133, 134, 139, 140, 143, 145, 148, 149, 150, 151, 152, 157, 175], "get_graph": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 47, 53, 55, 56, 57, 59, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 131, 139, 140, 143], "fetch": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 47, 53, 55, 56, 57, 59, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 131, 139, 140, 143], "spectralbalancedcutclust": [24, 25, 26], "5": [24, 25, 26, 27, 35, 49, 50, 54, 55, 59, 68, 69, 80, 84, 91, 92, 146, 149, 151, 157], "modular": [25, 47, 78, 79, 92], "networkx": [25, 27, 28, 29, 30, 31, 32, 33, 34, 48, 49, 53, 55, 56, 57, 61, 62, 68, 71, 72, 74, 75, 76, 79, 80, 82, 84, 85, 86, 87, 89, 91, 92, 93, 94, 123, 128, 139, 140, 141, 143, 171, 172, 174, 176], "have": [25, 26, 50, 52, 57, 67, 70, 71, 75, 84, 92, 93, 139, 140, 144, 150, 157, 172], "ratio": [26, 71, 73, 81, 83, 88, 90], "seed": [27, 28, 56, 67, 148, 157], "radiu": [27, 57], "center": [27, 57, 59], "distanc": [27, 29, 30, 51, 52, 57, 58, 87, 93, 144, 150, 175], "induc": [27, 57, 131], "subgraph": [27, 33, 57, 74, 75, 77, 161, 173, 175], "neighbor": [27, 31, 34, 57, 71, 73, 81, 83, 142], "within": [27, 41, 43, 57, 70, 172, 175], "cupi": [27, 29, 30, 32, 48, 57, 87, 93, 94, 143, 144, 145, 148, 149, 150, 151, 152, 172, 176], "which": [27, 29, 30, 31, 32, 34, 35, 48, 50, 51, 55, 56, 57, 60, 76, 80, 84, 85, 93, 94, 101, 109, 142, 143, 144, 149, 157], "connect": [27, 29, 30, 31, 32, 34, 35, 47, 49, 50, 51, 52, 53, 55, 57, 59, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 87, 88, 89, 90, 93, 94, 139, 140, 141, 142, 143, 151, 152, 161, 173, 175], "doubl": [27, 29, 30, 47, 52, 54, 56, 57, 59, 69, 78, 79, 87, 93, 145, 146, 147, 148, 149, 150], "precis": [27, 29, 30, 57, 59, 87, 93], "egonet": [27, 161], "includ": [27, 28, 57, 67, 70, 131, 172], "all": [27, 28, 45, 50, 52, 54, 56, 57, 69, 70, 71, 72, 73, 75, 81, 83, 84, 87, 88, 89, 90, 93, 109, 110, 113, 119, 121, 125, 132, 133, 134, 139, 140, 144, 147, 150, 161, 171, 172], "kei": [27, 32, 57, 77, 94, 143], "count": [27, 28, 57, 77, 141, 161, 173, 175], "hop": [27, 57, 71, 115, 142, 175], "case": [27, 57, 69, 80, 84, 85, 106, 172], "ego_edge_list": 27, "seeds_offset": 27, "start": [27, 28, 29, 30, 50, 51, 52, 56, 58, 84, 87, 93, 105, 142, 144], "b_ego_graph": 27, "k": [28, 33, 56, 74, 75, 76, 77, 91, 92, 161, 173, 175], "normal": [28, 31, 34, 35, 49, 53, 56, 59, 68, 76, 146], "endpoint": [28, 45, 175], "result_dtyp": [28, 56], "float64": [28, 56], "central": [28, 53, 56, 76, 145, 147, 161, 173, 175, 176], "measur": [28, 56], "shortest": [28, 29, 30, 32, 52, 56, 87, 93, 94, 143, 150, 161, 173, 175], "high": [28, 56, 70, 77, 171, 172, 173], "therefor": [28, 35, 56, 76, 77], "believ": [28, 56], "To": [28, 56, 172, 175], "improv": [28, 56, 175], "perform": [28, 40, 45, 50, 51, 52, 54, 56, 77, 84, 130, 132, 133, 134, 144, 146, 149, 150, 171, 172, 173, 175], "rather": [28, 56, 172, 175], "do": [28, 31, 34, 35, 45, 50, 56, 70, 71, 76, 84, 98, 139, 140, 149], "sampl": [28, 56, 70, 73, 80, 83, 90, 142, 148, 161, 176], "seen": [28, 56, 71, 73, 81, 83], "correspond": [28, 31, 32, 33, 34, 35, 49, 50, 53, 56, 68, 69, 70, 73, 74, 76, 83, 84, 90, 91, 92, 94, 101, 109, 110, 119, 125, 142, 143, 145, 146, 148, 149], "either": [28, 31, 32, 34, 35, 53, 56, 76, 80, 85, 94, 143, 145, 146, 147, 149, 150, 175], "ignor": [28, 33, 56, 80, 84, 85, 101, 175], "bf": [28, 56, 58, 175], "travers": [28, 29, 30, 56, 58, 131, 144, 148, 161, 175, 176], "need": [28, 45, 56, 59, 71, 85, 127, 128, 129, 145, 146, 147, 148, 149, 150, 171, 172], "consid": [28, 52, 54, 56, 60, 69, 70, 85, 93, 150, 175], "int": [28, 30, 31, 32, 34, 35, 45, 49, 50, 54, 56, 67, 68, 74, 75, 76, 77, 80, 84, 85, 87, 93, 94, 143, 146, 151, 152], "estim": [28, 49, 56, 68, 146], "higher": [28, 47, 55, 56, 78, 79, 80, 148, 173], "give": [28, 51, 52, 54, 56, 58, 59, 69, 87, 93], "better": [28, 31, 34, 35, 50, 56, 76, 84, 149, 172, 175], "approxim": [28, 31, 34, 35, 49, 50, 56, 59, 68, 76, 84, 146, 149], "content": [28, 29, 30, 56, 93], "obtain": [28, 56], "defin": [28, 31, 34, 56, 69, 71, 73, 75, 76, 77, 81, 83, 88, 90, 101, 115, 147], "assourc": 28, "insid": [28, 56], "__2": 28, "__": 28, "__1": 28, "ensur": [28, 50, 51, 52, 56, 84, 144, 146, 149, 150], "scale": [28, 56, 59, 67, 157, 171, 172], "highest": [28, 56], "possibl": [28, 56, 172], "cross": [28, 56], "everi": [28, 35, 56, 70, 76, 84, 147, 149], "Not": [28, 56], "random": [28, 50, 56, 67, 73, 80, 83, 84, 85, 90, 142, 148, 149, 157, 161], "gener": [28, 32, 48, 56, 70, 94, 102, 105, 143, 148, 151, 152, 157, 161, 173, 175, 176], "behavior": [28, 50, 56, 71, 84, 173], "system": [28, 56, 75, 77], "time": [28, 31, 34, 35, 50, 51, 52, 56, 76, 77, 84, 144, 146, 149, 150, 175], "np": [28, 56, 75, 77, 80, 131, 151, 152], "dictionari": [28, 31, 32, 33, 53, 55, 56, 70, 76, 94, 143, 175], "might": [28, 56], "ascend": [28, 56], "bc": [28, 56], "depth_limit": [29, 30, 51, 144], "i_start": 29, "return_predecessor": [29, 86, 93], "find": [29, 30, 32, 42, 50, 51, 75, 77, 84, 87, 91, 92, 94, 139, 140, 143, 149, 173], "predecessor": [29, 30, 51, 52, 58, 93, 144, 150, 175], "breadth": [29, 30, 51, 144, 161, 172, 175], "first": [29, 30, 51, 57, 67, 71, 72, 73, 77, 81, 83, 88, 89, 90, 115, 144, 145, 146, 148, 149, 150, 161, 172, 175], "wa": [29, 46, 50, 51, 52, 58, 75, 77, 80, 84, 93, 142, 172], "begin": [29, 51], "compon": [29, 32, 51, 70, 94, 143, 151, 152, 161, 175, 176], "onli": [29, 32, 47, 51, 56, 57, 58, 59, 67, 69, 70, 75, 77, 78, 79, 80, 94, 115, 128, 131, 132, 133, 134, 141, 143, 144, 147, 151, 152, 175], "per": [29, 45, 50, 51, 52, 130, 142, 157, 175], "allow": [29, 51, 59, 132, 133, 134, 144, 172, 175, 176], "limit": [29, 30, 31, 34, 35, 50, 51, 76, 84, 144, 149, 172], "depth": [29, 30, 51, 80, 85, 144], "search": [29, 30, 51, 144, 161, 175, 176], "ident": [29, 71, 72, 81, 88, 89, 109, 110, 119, 125], "compat": [29, 55, 61, 72, 82, 84, 86, 89, 94, 123, 143, 171, 174, 176], "non": [29, 31, 32, 34, 35, 45, 50, 70, 71, 76, 84, 94, 143, 149], "eg": [29, 32, 94, 143], "rais": [29, 32, 94, 143], "typeerror": [29, 32, 94, 143], "otherwis": [29, 46, 80, 98, 148], "th": [29, 30, 31, 34, 58, 69], "posit": [29, 30, 59, 80], "immedi": [29, 30], "preced": [29, 30, 150], "equival": [29, 30, 93], "describ": [29, 30, 47, 78, 79, 93, 172], "abov": [29, 30, 59, 93, 151, 152, 172, 175], "tupl": [29, 30, 38, 93, 144, 145, 146, 148, 149, 150], "ndarrai": [29, 30, 32, 93, 94, 143], "reconstruct": [29, 30, 93, 142], "return_sp_count": [29, 30], "3": [29, 30, 75, 77, 80, 85, 131, 145, 148, 149, 150, 151, 175], "plu": [29, 30], "sp_counter": [29, 30], "lead": [29, 30, 31, 34, 35, 47, 50, 76, 78, 79, 84, 149], "revers": [30, 76], "sort_neighbor": 30, "process": [30, 45, 70, 130, 141, 175], "max_it": [31, 34, 35, 47, 49, 50, 59, 68, 76, 78, 79, 84, 107, 146, 175], "100": [31, 34, 35, 47, 49, 50, 54, 59, 68, 69, 71, 76, 78, 79, 84, 91, 92, 146, 149, 175], "tol": [31, 34, 35, 49, 50, 68, 76, 84, 107, 146, 157], "1e": [31, 34, 35, 49, 50, 54, 68, 69, 76, 84, 91, 92, 145, 157], "06": [31, 34, 35, 76], "eigenvector": [31, 34, 84, 91, 92, 145, 149, 161, 173], "its": [31, 34, 70, 74, 77, 172], "vector": [31, 34], "x": [31, 34, 59], "equat": [31, 34], "maximum": [31, 34, 35, 47, 49, 50, 52, 59, 68, 76, 78, 79, 80, 84, 85, 91, 92, 93, 139, 145, 146, 147, 148, 149, 150, 161, 175], "iter": [31, 34, 35, 47, 49, 50, 59, 68, 71, 76, 77, 78, 79, 84, 91, 92, 109, 110, 119, 125, 145, 146, 147, 149, 175], "befor": [31, 34, 35, 49, 50, 58, 68, 76, 84, 115, 146, 149, 175], "answer": [31, 34, 35, 49, 50, 68, 76, 84, 146, 149, 172], "execut": [31, 34, 35, 50, 54, 69, 76, 77, 84, 149, 175], "earli": [31, 34, 35, 47, 50, 76, 78, 79, 84, 149, 172], "exit": [31, 34, 35, 50, 76, 84, 149], "solver": [31, 34, 35, 50, 76, 84, 91, 92, 149], "reach": [31, 34, 35, 50, 51, 52, 58, 76, 84, 93, 149], "converg": [31, 34, 35, 50, 59, 76, 84, 145, 147, 149], "toler": [31, 34, 35, 49, 50, 68, 76, 84, 91, 92, 145, 146, 147, 149], "6": [31, 34, 35, 54, 69, 76, 145, 149], "small": [31, 34, 35, 49, 50, 68, 71, 76, 84, 146, 149, 173], "magnitud": [31, 34, 35, 49, 50, 68, 76, 84, 146, 149, 175], "lower": [31, 34, 35, 47, 50, 59, 67, 76, 78, 79, 80, 84, 91, 92, 148, 149], "0f": [31, 34, 35, 50, 76, 84, 149], "0e": [31, 34, 35, 49, 50, 68, 76, 84, 107, 146, 149], "too": [31, 34, 35, 50, 76, 84, 149], "due": [31, 34, 35, 50, 76, 84, 149], "numer": [31, 34, 35, 50, 76, 84, 149, 172], "roundoff": [31, 34, 35, 50, 76, 84, 149], "usual": [31, 34, 35, 50, 55, 76, 84, 149, 172], "accept": [31, 34, 35, 50, 76, 84, 149, 175], "ec": [31, 34], "weak": [32, 143], "return_label": [32, 94, 143], "strongli": [32, 70, 94, 151, 175], "weakli": [32, 48, 77, 143, 152, 175], "attach": [32, 48, 94, 143, 151, 152], "alreadi": [32, 47, 49, 55, 68, 71, 72, 73, 78, 79, 81, 83, 84, 88, 89, 90, 94, 143], "fit": [32, 94, 143, 157], "32b": [32, 94, 143], "digraph": [32, 80, 85, 94, 143, 157, 171, 175], "move": [32, 94, 143], "j": [32, 47, 54, 76, 77, 78, 79, 80, 94, 143, 171, 173], "along": [32, 49, 59, 68, 94, 132, 134, 143], "csgraph": [32, 94, 143], "progress": [32, 94, 143, 175], "strong": [32, 59, 94], "python": [32, 33, 55, 94, 143, 157, 172], "shape": [32, 94, 143], "num": [32, 94, 143], "degree_typ": 33, "core": [33, 62, 74, 161, 173, 175, 176], "maxim": [33, 74, 75, 77, 92], "degre": [33, 35, 53, 67, 74, 76, 119, 125, 142, 161], "belong": 33, "self": [33, 59, 67, 74, 105, 118], "loop": [33, 67, 74, 118], "parallel": [33, 45, 74, 139, 140, 157, 173], "while": [33, 59, 74, 80, 148, 175], "thei": [33, 59, 70, 74, 75, 77], "don": [33, 74], "t": [33, 74, 171, 173], "particip": [33, 74], "calcul": [33, 35, 36, 74, 76], "determin": [33, 54, 55, 69], "valid": [33, 45, 171], "being": [33, 59, 172, 175], "incom": [33, 49, 68, 146], "outgo": [33, 49, 50, 68, 80, 84, 146, 148, 149], "bidirect": 33, "respect": [33, 146], "releas": [33, 150, 172, 175], "warn": 33, "input_graph": [34, 35, 47, 48, 49, 50, 51, 52, 55, 59, 71, 73, 81, 83, 88, 90], "dcg": [34, 35, 36, 48, 49, 50, 51, 52, 133], "init": [34, 35, 48, 49, 50, 51, 52, 133], "see": [34, 35, 48, 49, 50, 51, 52, 55, 72, 82, 86, 89, 175], "doc": [34, 35, 48, 49, 50, 51, 52], "rapid": [34, 35, 48, 49, 50, 51, 52, 61, 157, 171, 172, 173, 175, 176], "ai": [34, 35, 48, 49, 50, 51, 52, 171, 173], "stabl": [34, 35, 48, 49, 50, 51, 52], "html": [34, 35, 48, 49, 50, 51, 52], "chunksiz": [34, 35, 36, 48, 49, 50, 51, 52, 133, 157], "get_chunks": [34, 35, 48, 49, 50, 51, 52, 133, 157], "ddf": [34, 35, 47, 48, 49, 50, 51, 52, 133, 141], "src": [34, 35, 48, 49, 50, 51, 52, 56, 70, 128, 132, 133, 138, 144, 145, 148, 149, 150, 157], "dst": [34, 35, 48, 49, 50, 51, 52, 56, 70, 128, 132, 133, 138, 144, 145, 148, 149, 150, 157], "dg": [34, 35, 48, 49, 50, 51, 52, 130], "alpha": [35, 50, 76, 84, 107, 147, 149], "beta": [35, 76, 147, 175], "nstart": [35, 49, 50, 68, 76, 84], "katz": [35, 76, 147, 161, 173, 175], "attenu": [35, 76, 147], "factor": [35, 45, 50, 67, 76, 80, 84, 147, 148, 149, 172], "degree_max": [35, 76], "out": [35, 50, 70, 74, 76, 80, 84, 109, 110, 119, 125, 131, 142, 148, 157, 175], "alpha_max": [35, 76], "lambda_max": [35, 76], "largest": [35, 76], "eigenvalu": [35, 76, 147], "sinc": [35, 76, 128, 172, 175], "lesser": [35, 76], "equal": [35, 36, 45, 50, 76, 84, 91, 92, 149], "greater": [35, 50, 76, 84, 91, 149], "never": [35, 76], "exce": [35, 76], "thu": [35, 50, 59, 76, 84, 149], "turn": [35, 70, 76, 172], "fulfil": [35, 76], "scalar": [35, 76], "guess": [35, 49, 50, 68, 76, 84, 146, 149], "pr": [35, 50, 84, 107], "input_path": 36, "appropri": 36, "get": [36, 71, 122, 124, 157], "netscienc": [36, 139, 140, 173], "shut": 37, "down": [37, 172], "clean": [37, 45, 157, 175], "up": [37, 45, 157], "resourc": [37, 45, 144, 145, 146, 147, 148, 149, 150, 157], "2d": [38, 45, 130], "prow": [38, 45, 130], "pcol": [38, 45, 130], "partition_typ": [38, 45], "raft": [39, 45], "instanc": [39, 44, 51, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 81, 83, 87, 88, 89, 90], "handl": [40, 41, 45, 144, 145, 146, 147, 148, 149, 150], "nccl": [40, 45], "sid": [41, 43], "worker": [41, 42, 43, 44, 45, 54, 69, 144], "sessionst": [41, 42], "sessionid": [42, 43], "p2p": [45, 157], "commun": [45, 78, 79, 161, 173, 176], "right": 45, "after": [45, 47, 59, 78, 79], "client": [45, 157], "run": [45, 51, 52, 55, 80, 85, 144, 145, 146, 147, 148, 149, 150, 157, 171, 172, 175], "manag": [45, 144, 172], "underli": [45, 145, 146, 147, 148, 149, 150], "ucx": 45, "across": [45, 67, 71, 157], "recommend": 45, "also": [45, 52, 70, 93, 133, 134, 139, 157, 172, 175], "destroi": [45, 157], "when": [45, 47, 54, 56, 59, 69, 70, 71, 78, 79, 84, 139, 140, 147, 149, 172], "longer": 45, "so": [45, 59, 71, 76, 133, 134, 172, 175], "pre": 45, "mnmg": 45, "total": [45, 109, 172, 175], "ani": [45, 50, 73, 83, 84, 90, 105, 131, 133, 134, 172, 175], "p": [45, 77, 80, 130, 148, 173], "dask_cuda": [45, 157], "localcudaclust": [45, 157], "work": [45, 54, 69, 98, 131, 172, 175], "here": [45, 55, 84, 171], "done": [45, 77, 142, 172], "close": [45, 54, 69, 157], "resolut": [47, 78, 79], "optim": [47, 50, 78, 79, 84, 149], "vd": [47, 79, 173], "blondel": [47, 79, 173], "l": [47, 76, 77, 78, 79, 173], "guillaum": [47, 79, 173], "r": [47, 67, 79, 171, 173], "lambiott": [47, 79, 173], "lefebvr": [47, 79, 173], "fast": [47, 77, 79, 173], "unfold": [47, 79, 173], "hierarchi": [47, 79, 173], "larg": [47, 70, 71, 79, 171, 173], "network": [47, 59, 77, 79, 80, 84, 149, 172, 173, 175], "stat": [47, 79, 173], "mech": [47, 79, 173], "p10008": [47, 79, 173], "2008": [47, 77, 79, 173], "arxiv": [47, 55, 79, 80], "org": [47, 55, 76, 77, 79, 80, 173], "ab": [47, 55, 79, 80], "0803": [47, 79], "0476": [47, 79], "control": [47, 59, 67, 78, 79], "level": [47, 59, 78, 79, 142], "termin": [47, 59, 78, 79], "No": [47, 59, 78, 79, 146], "occur": [47, 59, 67, 78, 79], "manner": [47, 59, 78, 79], "gamma": [47, 78, 79], "formula": [47, 78, 79], "chang": [47, 54, 78, 79, 172, 175], "smaller": [47, 78, 79, 81, 83, 133, 134, 147], "fewer": [47, 78, 79], "larger": [47, 55, 78, 79, 157, 175], "part": [47, 55, 67, 71, 75, 77, 78, 79, 175], "modularity_scor": [47, 78, 79], "global": [47, 78, 79], "05": [49, 50, 55, 68, 84, 91, 92, 107, 157], "hub": [49, 59, 68, 146], "author": [49, 68, 146], "link": [49, 68, 146, 161, 176], "norm": [49, 68], "flag": [49, 67, 68, 142, 145, 147], "hubsandauthor": [49, 68], "three": [49, 56, 59, 68, 132, 141], "50": [49, 59, 68], "85": [50, 84, 107, 149, 173], "person": [50, 84, 175], "precomputed_vertex_out_weight": [50, 84, 149], "multipl": [50, 57, 61, 67, 70, 73, 83, 90, 132, 133, 134, 157, 172], "power": [50, 84, 149, 172], "damp": [50, 84, 149], "probabl": [50, 67, 84, 149], "follow": [50, 61, 62, 71, 84, 149, 175], "standard": [50, 84, 149], "teleport": [50, 84, 149], "strictli": [50, 84, 149], "subset": [50, 84, 149], "precomput": [50, 74, 84, 149], "sum": [50, 52, 84, 93, 149, 150], "01": [50, 84, 149], "00001": [50, 84, 91, 92, 149], "from_": [50, 84], "_edgelist": [50, 84], "assum": [50, 84], "contigu": [50, 84], "actual": [50, 71, 84, 131], "gap": [50, 84], "zero": [50, 54, 69, 71, 84, 131, 151, 152], "miss": [50, 84], "desir": [50, 75, 77, 84, 133, 134], "return_dist": 51, "check_start": 51, "extens": [51, 52, 144, 146, 149, 150], "test": [51, 52, 144, 146, 149, 150], "validit": [51, 52, 144, 146, 149, 150], "expens": [51, 52, 144, 145, 146, 147, 149, 150], "increas": [51, 52, 84, 144, 146, 149, 150], "cutoff": [52, 93, 150], "check_sourc": 52, "unreach": [52, 58, 93, 150], "infin": [52, 93, 150], "denot": [52, 93, 137, 150], "dc": 53, "cost": [54, 69], "num_row": 54, "num_column": 54, "epsilon": [54, 69, 145, 147, 149], "hungarian": [54, 161, 173], "against": [54, 69, 171, 172], "dens": [54, 71], "unstabl": 54, "subject": 54, "lowest": [54, 69], "exactli": [54, 69], "job": [54, 69], "major": 54, "task": 54, "enough": [54, 69, 71], "code": [54, 69, 133, 134, 171, 175], "unus": [54, 69, 102], "overal": [54, 69], "util": [54, 69, 172], "create_random_bipartit": [54, 69], "costs_flatten": 54, "flatten": 54, "min_weight": 55, "ensemble_s": 55, "16": [55, 175], "ensembl": [55, 161, 175], "truncat": 55, "louvain": [55, 78, 161, 171, 173, 175], "permut": 55, "final": 55, "found": [55, 70], "full": 55, "1809": 55, "05578": 55, "further": [55, 80, 148], "minimum": [55, 57, 140, 161], "edgeweight": 55, "left": [55, 144], "mai": [55, 128], "produc": [55, 172], "qualiti": [55, 59], "some": [55, 70, 133, 134], "over": [56, 57, 75, 139, 140, 172], "automat": [56, 157], "switch": [56, 59, 172], "differ": [56, 71, 73, 83, 90, 128, 174], "transform": [56, 70], "taken": 57, "g_ego": 57, "span": [57, 139, 140, 161, 172], "tree": [57, 161, 176], "forest": [57, 139, 140], "sssp": [58, 86, 87, 175], "filter": [58, 109, 110, 119, 125], "reachabl": 58, "500": [59, 84, 107, 149], "pos_list": 59, "outbound_attraction_distribut": 59, "lin_log_mod": 59, "prevent_overlap": 59, "edge_weight_influ": 59, "jitter_toler": 59, "barnes_hut_optim": 59, "barnes_hut_theta": 59, "scaling_ratio": 59, "strong_gravity_mod": 59, "graviti": 59, "verbos": 59, "callback": 59, "forceatlas2": 59, "continu": 59, "layout": [59, 161, 176], "handi": 59, "visual": [59, 171], "peak": 59, "memori": [59, 70, 71, 157, 171, 172], "alloc": [59, 175], "30": [59, 157, 173], "forc": [59, 161, 175], "atla": [59, 161, 175], "good": [59, 172], "short": 59, "term": [59, 172], "achiev": [59, 175], "1000": [59, 145, 175], "discourag": 59, "y": 59, "attract": 59, "outbound": 59, "less": [59, 80, 148], "push": 59, "border": 59, "model": [59, 173, 175], "lin": 59, "log": 59, "make": [59, 70, 80, 148, 157, 171, 172], "tight": 59, "prevent": 59, "overlap": [59, 82, 83, 161, 171, 175], "how": [59, 175], "much": 59, "influenc": 59, "swing": 59, "speed": [59, 172], "barn": 59, "hut": 59, "slower": 59, "exact": 59, "version": [59, 61, 76, 147, 157, 171], "tradeoff": 59, "accuraci": 59, "repuls": 59, "want": [59, 157], "regular": 59, "linlog": 59, "readjust": 59, "distant": 59, "sometim": [59, 175], "domin": 59, "island": 59, "drift": 59, "awai": 59, "info": 59, "inter": 59, "graphbaseddimredcallback": 59, "intercept": 59, "state": [59, 171], "train": [59, 171], "usag": 59, "customcallback": 59, "def": 59, "on_preprocess_end": 59, "print": [59, 151, 152], "copy_to_host": 59, "on_epoch_end": 59, "on_train_end": 59, "po": 59, "create_us": [60, 61, 62, 63, 64, 65, 66, 67, 157], "structur": [60, 61, 62, 63, 64, 65, 66, 67, 70, 132, 133, 134, 172, 173, 175], "graph_class": [60, 61, 62, 63, 64, 65, 66, 67, 70], "csr": [60, 151, 152], "representaion": [61, 62], "from_pandas_edge_list": 61, "But": [61, 71, 175], "target": [61, 62, 70, 87], "terminologi": [61, 62, 174, 176], "num_edg": [67, 151, 152, 157], "b": [67, 157, 171, 173], "clip_and_flip": [67, 157], "scramble_vertex_id": [67, 157], "mg": [67, 161, 176], "recurs": 67, "mat": 67, "second": [67, 71, 72, 73, 81, 83, 88, 89, 90, 115, 145, 146, 148, 149, 150], "thrid": 67, "triangular": [67, 71, 128], "diagon": [67, 71], "scrambl": 67, "bit": 67, "break": [67, 172], "correl": 67, "construct": [67, 71, 88, 175], "benchmark": [67, 171], "raw": 67, "potenti": 67, "duplic": [67, 73, 83, 90, 132, 133, 134], "edgefactor": 67, "57": [67, 173], "19": 67, "42": 67, "instead": [67, 70, 131, 132, 133, 134, 144], "symmetr": [69, 128, 133, 134, 144, 161], "As": 69, "disjoint": 69, "variabl": 69, "reflect": 69, "particular": [69, 171], "In": [69, 71, 73, 77, 80, 81, 83, 85, 171, 172, 173, 175], "implicitli": 69, "dropna": 70, "categori": 70, "drop_edge_attr": 70, "categorical_metadata": 70, "delim": 70, "nodeid": 70, "node_id": 70, "eventid": 70, "event_id": 70, "attribid": 70, "attrib_id": 70, "nodetyp": 70, "node_typ": 70, "edgetyp": 70, "edge_typ": 70, "reveal": 70, "relationship": [70, 172], "uniqu": [70, 98, 105, 106, 144], "event": 70, "dimension": 70, "entri": 70, "anoth": [70, 172], "distinct": 70, "metadata": 70, "about": 70, "common": 70, "transit": [70, 174, 176], "those": [70, 71, 88, 109, 110, 119, 125, 172, 175], "convers": [70, 161], "best": [70, 172, 175], "categor": 70, "group": [70, 75, 77, 173], "kind": 70, "sequenc": 70, "null": 70, "omit": 70, "hypernod": 70, "dict": [70, 84], "appear": [70, 133, 134], "exclud": [70, 71], "categoricaldtyp": 70, "These": 70, "typic": [70, 77, 175], "low": 70, "cardin": 70, "save": 70, "signific": 70, "amount": [70, 77, 175], "select": [70, 171], "join": 70, "entiti": 70, "hyper": 70, "vertex_pair": [71, 72, 73, 81, 83, 88, 89, 90], "similar": [71, 73, 81, 83, 90, 171], "arbitrari": [71, 73, 81, 83, 88, 90], "volum": [71, 73, 81, 83, 88, 90], "intersect": [71, 73, 81, 83, 88, 90], "divid": [71, 73, 81, 83, 88, 90, 130], "union": [71, 73], "context": [71, 73, 81, 83], "neighborhood": [71, 73, 81, 83, 142], "strength": [71, 73, 81, 83], "rel": [71, 72, 73, 81, 83, 88, 89, 90, 109, 110, 119, 125], "vice": [71, 73, 81, 83, 88], "versa": [71, 73, 81, 83, 88], "except": [71, 73, 81, 83, 88], "thrown": [71, 73, 81, 83, 88], "jaccard_coeffici": 71, "absenc": [71, 88], "coeffici": [71, 72, 73, 81, 83, 88, 89, 90, 161, 171, 175], "upper": [71, 128], "well": [71, 78, 172, 173], "directli": 71, "technic": [71, 77, 173], "lazi": 71, "dereferenc": 71, "feasibl": 71, "000": 71, "would": [71, 148, 157], "4": [71, 75, 77, 151, 152, 157, 171, 173], "9": [71, 78, 109, 110, 119, 125, 151, 152, 173], "billion": [71, 172], "your": [71, 157, 171, 175], "patienc": 71, "interest": [71, 171], "solut": [71, 77, 157, 172], "get_two_hop_neighbor": 71, "rememb": 71, "fill": 71, "entir": [71, 109, 110, 119, 125, 141], "request": [71, 144], "ll": 71, "consist": [71, 72, 73, 81, 83, 88, 89, 90, 172], "jaccard_coeff": [71, 72, 73], "ebunch": [72, 82, 89], "jaccard": [72, 73, 161, 171, 175], "10": [73, 76, 77, 78, 83, 90, 144, 173], "avoid": [73, 83, 90, 175], "drop_dupl": [73, 83, 90], "reset": [73, 83, 90], "reset_index": [73, 83, 90], "inplac": [73, 83, 90], "w": [73, 83, 90], "len": [73, 83, 90, 151, 152], "core_numb": 74, "neg": [74, 93, 144, 150], "main": 74, "kcoregraph": 74, "truss": [75, 77, 161, 173, 175], "specif": [75, 77, 101], "avail": [75, 77, 157], "cuda": [75, 77, 157, 171, 172], "11": [75, 77], "least": [75, 77, 144], "triangl": [75, 77, 128, 141, 161, 173, 175], "tighlti": [75, 77], "knit": [75, 77], "relax": [75, 76, 77, 147], "cliqu": [75, 77], "computation": [75, 77], "demand": [75, 77], "known": [75, 77, 172], "hard": [75, 77], "extract": [75, 77, 161, 175], "g_truss": [75, 77], "NOT": 75, "k_subgraph": [75, 77], "foster": [76, 147, 173], "reduc": [76, 147, 175], "complex": [76, 147, 172], "o": [76, 77, 147, 171, 173], "On": [76, 173], "opposit": 76, "flip": 76, "muth": [76, 173], "q": [76, 80, 148, 173], "potterat": [76, 173], "et": [76, 77, 173], "al": [76, 77, 173], "mathemat": [76, 172, 173], "organ": [76, 173], "theori": [76, 172, 173], "2001": [76, 173], "7": [76, 151, 152, 173], "275": [76, 173], "doi": [76, 77, 78, 173], "1023": 76, "1013470632383": 76, "1953": [76, 173], "statu": [76, 171, 173], "deriv": [76, 173], "sociometr": [76, 173], "analysi": [76, 77, 161, 171, 172, 173, 175, 176], "psychometrika": [76, 173], "18": [76, 173], "39": [76, 173], "43": [76, 173], "kc": 76, "use_weight": 77, "contrast": 77, "tractabl": 77, "build": [77, 174], "block": [77, 175], "polnymomi": 77, "take": [77, 132, 133, 134], "mani": [77, 171, 172], "oper": [77, 144, 145, 146, 147, 149, 150], "monoton": 77, "shrink": [77, 173], "fairli": 77, "reason": 77, "shown": 77, "them": [77, 132, 133, 134], "cohen": [77, 173], "cohes": [77, 173], "social": [77, 172, 173], "nation": [77, 173], "secur": [77, 173], "agenc": [77, 173], "report": [77, 78, 173], "green": [77, 171, 173], "fox": [77, 173], "kim": [77, 173], "f": [77, 151, 152, 173], "busato": [77, 173], "quickli": [77, 173], "haystack": [77, 173], "ieee": [77, 171, 173], "extrem": [77, 171, 173], "confer": [77, 80, 173, 174], "hpec": [77, 171, 173], "2017": [77, 173], "1109": [77, 173], "8091038": [77, 173], "yalamanchili": [77, 173], "munguia": [77, 173], "irregular": [77, 173], "applic": [77, 172, 173], "architectur": [77, 172, 174], "ia3": [77, 173], "2014": [77, 173], "traag": [78, 173], "waltman": [78, 173], "van": [78, 173], "eck": [78, 173], "2019": [78, 173], "scientif": [78, 173], "5233": 78, "1038": 78, "s41598": 78, "019": 78, "41695": 78, "z": 78, "start_vertic": [80, 85], "max_depth": [80, 85, 148], "compress_result": [80, 148], "walk": [80, 85, 148, 161, 171], "under": [80, 148], "framework": [80, 172], "coalesc": [80, 85], "pad": [80, 85, 148], "likelihood": [80, 148], "backtrack": [80, 148], "previou": [80, 150], "previous": [80, 148], "visit": [80, 148], "local": [80, 148, 173], "closer": [80, 148], "likeli": [80, 148], "vertex_path": [80, 85], "edge_weight_path": [80, 85], "grover": 80, "leskovec": [80, 173], "scalabl": 80, "featur": [80, 157, 171, 173], "learn": [80, 171, 172], "proceed": [80, 171, 173], "22nd": 80, "acm": [80, 171, 173], "sigkdd": [80, 171, 173], "knowledg": [80, 171, 173], "discoveri": [80, 171, 173], "mine": [80, 171, 173], "1607": 80, "00653": 80, "path_siz": 80, "8": [80, 173], "overlap_coeff": [81, 83], "dangl": 84, "depend": [84, 87, 149], "itself": [84, 149], "descreas": [84, 149], "toward": [84, 149], "free": 84, "use_pad": 85, "get_edgelist": 85, "_": 85, "overwrit": [86, 93], "alia": [86, 123], "detail": 86, "coo": [87, 132, 133, 134], "twice": [88, 90], "sorensen_coeff": [88, 89, 90], "sorensen": [89, 90, 161], "num_clust": [91, 92], "num_eigen_vect": [91, 92], "evs_toler": [91, 92], "evs_max_it": [91, 92], "kmean_toler": [91, 92], "kmean_max_it": [91, 92], "spectral": [91, 92, 161, 175], "balanc": 91, "eigensolv": [91, 92], "mean": [91, 92, 151, 152], "cycl": [93, 141, 150], "id_typ": 95, "renumber_typ": 95, "multigpu": 95, "singlegpu": 95, "renumber_and_seg": 95, "vertex_column_s": 95, "id_column_nam": 98, "col_nam": [98, 106], "collect": [98, 101, 106, 172], "combin": 98, "appli": 98, "addit": 98, "static": [99, 100, 102, 103, 104, 172], "helper": [99, 100, 102, 157, 161, 176], "external_column": 101, "start_with_nam": 102, "col": 102, "src_col_nam": [103, 104], "dst_col_nam": [103, 104], "src_col_names_to_replac": 105, "dst_col_names_to_replac": 105, "all_col_nam": 105, "renumbered_src_col_nam": [105, 107], "renumbered_dst_col_nam": [105, 107], "collid": 105, "vertex_id": 106, "matter": 106, "add_internal_vertex_id": 106, "ourder": 107, "number_map": 107, "pagerank": [107, 157, 161, 171, 173, 175], "vertex_subset": [109, 110, 119, 125], "incid": [109, 131], "displai": [109, 110, 119, 125, 127, 128, 129], "all_df": 109, "subset_df": 109, "12": [109, 110, 119, 125, 173], "in_degre": 110, "out_degre": 110, "delet": [111, 112], "view_edge_list": 113, "apart": 115, "directed_edg": 122, "number_of_vertic": 123, "could": [128, 172], "trianglar": 128, "networx": 128, "henc": 128, "swap": 128, "cusd": 128, "ngpu": 130, "rectangular": 130, "simpli": [131, 172, 175], "pull": 131, "sg": [131, 144], "vert": 131, "svert": 131, "source_col_nam": 132, "dest_col_nam": 132, "value_col_nam": 132, "associ": [132, 133, 134, 173], "dest": 132, "di": [132, 133, 134], "val": 132, "src_name": [133, 134], "dst_name": [133, 134], "weight_nam": [133, 134], "replic": [133, 134], "That": [133, 134, 175], "data1": [133, 134], "data2": [133, 134], "arbitrarili": [133, 134], "pick": [133, 134, 175], "keep": [133, 134], "caller": [133, 134], "correct": [133, 134, 144], "prior": [133, 134], "dask": [133, 142, 157, 161, 172, 176], "sym_ddf": 133, "sym_df": 134, "boruvka": [139, 140], "ignore_nan": [139, 140], "mst": [139, 140], "msf": [139, 140], "g_mst": [139, 140], "start_list": [141, 142], "length": 141, "fanout_v": 142, "with_replac": 142, "is_edge_id": 142, "fanout": 142, "branch": 142, "fan": 142, "resourcehandl": [144, 145, 146, 147, 148, 149, 150], "_gpugraph": [144, 145, 146, 147, 148, 149, 150], "bool_t": [144, 145, 146, 147, 148, 149, 150], "direction_optim": 144, "int32_t": 144, "compute_predecessor": [144, 150], "do_expensive_check": [144, 145, 146, 147, 148, 149, 150], "respons": 144, "devic": [144, 145, 146, 147, 148, 149, 150], "sggraph": [144, 145, 146, 147, 148, 149, 150], "mggraph": [144, 145, 146, 147, 149, 150], "upon": 144, "long": [144, 173], "treat": 144, "stop": 144, "without": [144, 175], "blank": 144, "form": 144, "cugraph": [144, 149, 161, 174, 175], "edgelist_df": 144, "resource_handl": [144, 145, 146, 147, 148, 149, 150], "graph_properti": 144, "graphproperti": [144, 145, 148, 149, 150], "is_multigraph": [144, 145, 148, 149, 150], "src_arrai": 144, "dst_arrai": 144, "weight_arrai": 144, "re": [144, 157], "pylibcugraph_bf": 144, "final_result": 144, "size_t": [145, 146, 147, 148, 149, 150], "max_iter": [145, 147, 149], "referenc": [145, 146, 147, 148, 149, 150], "eignevector": 145, "item": [145, 146, 148, 149, 150], "asarrai": [145, 148, 149, 150, 151, 152], "graph_prop": [145, 148, 149, 150], "is_symmetr": [145, 148, 149, 150], "initial_hubs_guess_vertic": 146, "initial_hubs_guess_valu": 146, "third": [146, 148, 150], "fixm": 146, "invers": 147, "constant": 147, "relev": 147, "seed_arrai": 148, "procedur": 148, "unpad": 148, "max": 148, "min": 148, "compress": [148, 151, 152], "precomputed_vertex_out_weight_vertic": 149, "precomputed_vertex_out_weight_sum": 149, "initial_guess_vertic": 149, "initial_guess_valu": 149, "ith": [149, 150], "11615585": 149, "21488841": 149, "2988108": 149, "3701449": 149, "999": 150, "4028235e": 150, "38": 150, "0000000e": 150, "00": 150, "num_vert": [151, 152], "__cuda_array_interface__": [151, 152], "interfac": [151, 152, 172], "unsupport": [151, 152], "becaus": [151, 152], "popul": [151, 152], "labl": [151, 152], "cp": [151, 152], "csr_matrix": [151, 152], "scipy_csr": [151, 152], "get_shap": [151, 152], "nnz": [151, 152], "cp_offset": [151, 152], "cp_indic": [151, 152], "cp_label": [151, 152], "tolist": [151, 152], "leverag": 157, "flexibl": 157, "librari": [157, 172, 176], "workflow": [157, 171, 173, 175], "smooth": 157, "simpl": [157, 175], "project": [157, 172], "abl": 157, "machin": [157, 171, 172], "let": 157, "far": 157, "With": 157, "nvidia": [157, 171, 172], "smoothli": 157, "intellig": 157, "workload": 157, "comfort": 157, "dask_cugraph": 157, "comm": 157, "rmat": [157, 161], "input_data_path": 157, "input_data": 157, "400": 157, "65": 157, "456": 157, "to_csv": 157, "reader": 157, "chunk": 157, "e_list": 157, "pr_df": 157, "page": [161, 176], "publicli": 161, "access": 161, "modul": [161, 175, 176], "namespac": 161, "constructor": 161, "numbermap": 161, "ecg": [161, 175], "leiden": [161, 173, 175], "linear": [161, 173, 176], "hit": [161, 175], "predict": [161, 176], "node2vec": 161, "analyt": [161, 171, 172, 175], "team": [171, 172], "medium": [171, 175], "post": [171, 172], "deeper": 171, "dive": 171, "we": [171, 172, 175], "ve": 171, "just": [171, 172, 175], "few": [171, 172, 175], "gtc18": 171, "fall": 171, "dgx": [171, 173], "vision": [171, 174, 176], "journei": 171, "beyond": 171, "versu": [171, 175], "gtc19": 171, "spring": 171, "acceler": [171, 172, 173, 174], "refactor": 171, "And": 171, "rethink": 171, "tackl": 171, "unifi": [171, 172], "gtc": 171, "20": 171, "goe": 171, "big": 171, "21": 171, "what": 171, "next": [171, 175], "video": 171, "slide": 171, "massiv": 171, "kdd": 171, "tutori": 171, "gnn": 171, "dgl": 171, "pyg": 171, "ubiquit": [171, 172], "kang": [171, 173], "fender": [171, 173], "eaton": [171, 173], "ree": [171, 173], "web": [171, 173], "crawl": [171, 173], "a100": [171, 173], "sep": 171, "hricik": [171, 173], "bader": [171, 173], "d": [171, 173], "septemb": [171, 173], "scienc": [171, 172, 173, 175, 176], "pp": [171, 173], "richardson": 171, "draba": 171, "oldridg": 171, "allen": 171, "august": 171, "expand": 171, "end": 171, "dl": 171, "ml": 171, "interoper": 171, "26th": 171, "3503": 171, "3504": 171, "alex": 171, "brad": 171, "joe": 171, "editor": 171, "crc": 171, "press": 171, "steroid": 171, "scientist": [171, 172, 176], "realli": 171, "park": 171, "spot": 171, "cell": 171, "genom": 171, "memgraph": 171, "dev": 171, "repost": 171, "techniqu": 172, "proverbi": 172, "toolbox": 172, "engin": 172, "statist": 172, "among": 172, "most": [172, 175], "commonli": 172, "howev": [172, 175], "focu": 172, "question": 172, "pose": 172, "problem": [172, 173], "euler": 172, "1736": 172, "seven": 172, "bridg": 172, "konigsberg": 172, "laid": 172, "foundat": 172, "field": 172, "cover": 172, "wide": 172, "varieti": 172, "market": 172, "biologi": 172, "physic": [172, 173], "sociologi": [172, 173], "cyber": 172, "seamlessli": [172, 176], "integr": [172, 176], "ecosystem": [172, 176], "easili": [172, 176], "even": [172, 176], "think": 172, "technologi": 172, "goal": [172, 175], "been": 172, "almost": 172, "twenti": 172, "year": 172, "attempt": 172, "focus": 172, "solv": 172, "tend": 172, "scope": 172, "shift": 172, "dynam": 172, "came": 172, "eas": 172, "choos": 172, "suit": 172, "paradigm": 172, "now": [172, 175], "latest": 172, "pascal": 172, "later": 172, "1000x": 172, "faster": [172, 173], "averag": 172, "moreov": 172, "rapidli": 172, "restrict": 172, "sever": 172, "emerg": 172, "de": 172, "facto": 172, "languag": 172, "interact": 172, "abil": 172, "familiar": 172, "approach": 172, "mention": 172, "etl": [172, 175], "thing": 172, "lot": 172, "area": 172, "favor": 172, "our": 172, "develop": 172, "own": 172, "argot": 172, "jargon": 172, "document": 172, "try": [172, 175], "mostli": 172, "prefer": 172, "tool": 172, "At": 172, "layer": 172, "robust": 172, "complet": [172, 175], "pictur": 172, "everyth": 172, "captur": 172, "issu": [172, 175], "epic": 172, "subtask": 172, "imag": 172, "readi": 172, "board": 172, "28": 172, "2020": [173, 175], "brand": 173, "journal": 173, "25": 173, "163": 173, "177": 173, "variant": 173, "136": 173, "145": 173, "mclaughlin": 173, "2018": 173, "61": 173, "92": 173, "date": 173, "nagi": 173, "2016": 173, "52": 173, "72": 173, "zachari": 173, "flow": 173, "conflict": 173, "fission": 173, "anthropolog": 173, "research": 173, "33": 173, "452": 173, "473": 173, "1977": 173, "dolphin": 173, "lusseau": 173, "schneider": 173, "boisseau": 173, "haas": 173, "slooten": 173, "dawson": 173, "bottlenos": 173, "doubt": 173, "sound": 173, "proport": 173, "last": [173, 174], "ecologi": 173, "sociobiologi": 173, "54": 173, "396": 173, "405": 173, "2003": 173, "newman": 173, "matric": [173, 176], "preprint": 173, "0605087": 173, "2006": 173, "email": 173, "eu": 173, "hao": 173, "yin": 173, "austin": 173, "benson": 173, "jure": 173, "david": 173, "gleich": 173, "23rd": 173, "kleinberg": 173, "faloutso": 173, "evolut": 173, "densif": 173, "diamet": 173, "transact": 173, "tkdd": 173, "2007": 173, "www": 173, "cmu": 173, "edu": 173, "pub": 173, "powergrowth": 173, "polbook": 173, "kreb": 173, "unpublish": 173, "orgnet": 173, "introduct": [174, 176], "roadmap": [174, 175, 176], "blog": [174, 175, 176], "media": 174, "academ": 174, "paper": 174, "updat": 174, "easi": 174, "updatr": 175, "flesh": 175, "One": 175, "mimic": 175, "simplifi": 175, "prep": 175, "portion": 175, "encourag": 175, "fulli": 175, "easier": 175, "oct": 175, "14th": 175, "guid": 175, "expans": 175, "complic": 175, "unchang": 175, "still": 175, "signif": 175, "cnx": 175, "text": 175, "highlight": 175, "yellow": 175, "rich": 175, "etc": 175, "fix": 175, "biggest": 175, "built": 175, "insert": 175, "record": 175, "read": 175, "data_fil": 175, "nx": 175, "iterrow": 175, "add_edg": 175, "perfectli": 175, "fine": 175, "problemat": 175, "someth": 175, "resiz": 175, "veri": 175, "effici": 175, "suggest": 175, "rewrit": 175, "bulk": 175, "load": 175, "basic": 176}, "objects": {"cugraph": [[0, 0, 1, "", "BiPartiteGraph"], [1, 0, 1, "", "Graph"], [23, 0, 1, "", "MultiGraph"], [24, 2, 1, "", "analyzeClustering_edge_cut"], [25, 2, 1, "", "analyzeClustering_modularity"], [26, 2, 1, "", "analyzeClustering_ratio_cut"], [27, 2, 1, "", "batched_ego_graphs"], [28, 2, 1, "", "betweenness_centrality"], [29, 2, 1, "", "bfs"], [30, 2, 1, "", "bfs_edges"], [32, 2, 1, "", "connected_components"], [33, 2, 1, "", "core_number"], [53, 2, 1, "", "degree_centrality"], [54, 2, 1, "", "dense_hungarian"], [55, 2, 1, "", "ecg"], [56, 2, 1, "", "edge_betweenness_centrality"], [57, 2, 1, "", "ego_graph"], [58, 2, 1, "", "filter_unreachable"], [59, 2, 1, "", "force_atlas2"], [60, 2, 1, "", "from_adjlist"], [61, 2, 1, "", "from_cudf_edgelist"], [62, 2, 1, "", "from_edgelist"], [63, 2, 1, "", "from_numpy_array"], [64, 2, 1, "", "from_numpy_matrix"], [65, 2, 1, "", "from_pandas_adjacency"], [66, 2, 1, "", "from_pandas_edgelist"], [68, 2, 1, "", "hits"], [69, 2, 1, "", "hungarian"], [70, 2, 1, "", "hypergraph"], [71, 2, 1, "", "jaccard"], [72, 2, 1, "", "jaccard_coefficient"], [73, 2, 1, "", "jaccard_w"], [74, 2, 1, "", "k_core"], [75, 2, 1, "", "k_truss"], [76, 2, 1, "", "katz_centrality"], [77, 2, 1, "", "ktruss_subgraph"], [78, 2, 1, "", "leiden"], [79, 2, 1, "", "louvain"], [80, 2, 1, "", "node2vec"], [81, 2, 1, "", "overlap"], [82, 2, 1, "", "overlap_coefficient"], [83, 2, 1, "", "overlap_w"], [84, 2, 1, "", "pagerank"], [85, 2, 1, "", "random_walks"], [86, 2, 1, "", "shortest_path"], [87, 2, 1, "", "shortest_path_length"], [88, 2, 1, "", "sorensen"], [89, 2, 1, "", "sorensen_coefficient"], [90, 2, 1, "", "sorensen_w"], [91, 2, 1, "", "spectralBalancedCutClustering"], [92, 2, 1, "", "spectralModularityMaximizationClustering"], [93, 2, 1, "", "sssp"], [94, 2, 1, "", "strongly_connected_components"], [131, 2, 1, "", "subgraph"], [132, 2, 1, "", "symmetrize"], [133, 2, 1, "", "symmetrize_ddf"], [134, 2, 1, "", "symmetrize_df"], [135, 2, 1, "", "to_numpy_array"], [136, 2, 1, "", "to_numpy_matrix"], [137, 2, 1, "", "to_pandas_adjacency"], [138, 2, 1, "", "to_pandas_edgelist"], [141, 2, 1, "", "triangle_count"], [142, 2, 1, "", "uniform_neighbor_sample"], [143, 2, 1, "", "weakly_connected_components"]], "cugraph.BiPartiteGraph": [[0, 1, 1, "", "__init__"]], "cugraph.Graph": [[1, 1, 1, "", "__init__"], [2, 1, 1, "", "add_internal_vertex_id"], [3, 1, 1, "", "add_nodes_from"], [4, 1, 1, "", "clear"], [5, 1, 1, "", "from_cudf_adjlist"], [6, 1, 1, "", "from_cudf_edgelist"], [7, 1, 1, "", "from_dask_cudf_edgelist"], [8, 1, 1, "", "from_numpy_array"], [9, 1, 1, "", "from_numpy_matrix"], [10, 1, 1, "", "from_pandas_adjacency"], [11, 1, 1, "", "from_pandas_edgelist"], [12, 1, 1, "", "has_isolated_vertices"], [13, 1, 1, "", "is_bipartite"], [14, 1, 1, "", "is_directed"], [15, 1, 1, "", "is_multigraph"], [16, 1, 1, "", "is_multipartite"], [17, 1, 1, "", "is_renumbered"], [18, 1, 1, "", "is_weighted"], [19, 1, 1, "", "lookup_internal_vertex_id"], [20, 1, 1, "", "to_directed"], [21, 1, 1, "", "to_undirected"], [22, 1, 1, "", "unrenumber"]], "cugraph.MultiGraph": [[23, 1, 1, "", "__init__"]], "cugraph.centrality": [[31, 2, 1, "", "eigenvector_centrality"]], "cugraph.dask.centrality.eigenvector_centrality": [[34, 2, 1, "", "eigenvector_centrality"]], "cugraph.dask.centrality.katz_centrality": [[35, 2, 1, "", "katz_centrality"]], "cugraph.dask.common.read_utils": [[36, 2, 1, "", "get_chunksize"]], "cugraph.dask.comms.comms": [[37, 2, 1, "", "destroy"], [38, 2, 1, "", "get_2D_partition"], [39, 2, 1, "", "get_comms"], [40, 2, 1, "", "get_default_handle"], [41, 2, 1, "", "get_handle"], [42, 2, 1, "", "get_session_id"], [43, 2, 1, "", "get_worker_id"], [44, 2, 1, "", "get_workers"], [45, 2, 1, "", "initialize"], [46, 2, 1, "", "is_initialized"]], "cugraph.dask.community.louvain": [[47, 2, 1, "", "louvain"]], "cugraph.dask.components.connectivity": [[48, 2, 1, "", "weakly_connected_components"]], "cugraph.dask.link_analysis.hits": [[49, 2, 1, "", "hits"]], "cugraph.dask.link_analysis.pagerank": [[50, 2, 1, "", "pagerank"]], "cugraph.dask.traversal.bfs": [[51, 2, 1, "", "bfs"]], "cugraph.dask.traversal.sssp": [[52, 2, 1, "", "sssp"]], "cugraph.generators": [[67, 2, 1, "", "rmat"]], "cugraph.structure": [[95, 0, 1, "", "NumberMap"], [130, 2, 1, "", "shuffle"]], "cugraph.structure.NumberMap": [[95, 1, 1, "", "__init__"], [98, 1, 1, "", "add_internal_vertex_id"], [99, 1, 1, "", "compute_vals"], [100, 1, 1, "", "compute_vals_types"], [101, 1, 1, "", "from_internal_vertex_id"], [102, 1, 1, "", "generate_unused_column_name"], [103, 1, 1, "", "renumber"], [104, 1, 1, "", "renumber_and_segment"], [105, 1, 1, "", "set_renumbered_col_names"], [106, 1, 1, "", "to_internal_vertex_id"], [107, 1, 1, "", "unrenumber"], [108, 1, 1, "", "vertex_column_size"]], "cugraph.structure.graph_implementation.simpleGraphImpl": [[109, 1, 1, "", "degree"], [110, 1, 1, "", "degrees"], [111, 1, 1, "", "delete_adj_list"], [112, 1, 1, "", "delete_edge_list"], [113, 1, 1, "", "edges"], [114, 1, 1, "", "enable_batch"], [115, 1, 1, "", "get_two_hop_neighbors"], [116, 1, 1, "", "has_edge"], [117, 1, 1, "", "has_node"], [118, 1, 1, "", "has_self_loop"], [119, 1, 1, "", "in_degree"], [120, 1, 1, "", "neighbors"], [121, 1, 1, "", "nodes"], [122, 1, 1, "", "number_of_edges"], [123, 1, 1, "", "number_of_nodes"], [124, 1, 1, "", "number_of_vertices"], [125, 1, 1, "", "out_degree"], [126, 1, 1, "", "vertex_column_size"], [127, 1, 1, "", "view_adj_list"], [128, 1, 1, "", "view_edge_list"], [129, 1, 1, "", "view_transposed_adj_list"]], "cugraph.tree.minimum_spanning_tree": [[139, 2, 1, "", "maximum_spanning_tree"], [140, 2, 1, "", "minimum_spanning_tree"]], "pylibcugraph": [[144, 2, 1, "", "bfs"], [145, 2, 1, "", "eigenvector_centrality"], [146, 2, 1, "", "hits"], [147, 2, 1, "", "katz_centrality"], [148, 2, 1, "", "node2vec"], [149, 2, 1, "", "pagerank"], [150, 2, 1, "", "sssp"], [151, 2, 1, "", "strongly_connected_components"], [152, 2, 1, "", "weakly_connected_components"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "titleterms": {"cugraph": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 157, 171, 172, 176], "bipartitegraph": 0, "graph": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 154, 157, 159, 168, 175], "add_internal_vertex_id": [2, 98], "add_nodes_from": 3, "clear": 4, "from_cudf_adjlist": 5, "from_cudf_edgelist": [6, 61], "from_dask_cudf_edgelist": 7, "from_numpy_arrai": [8, 63], "from_numpy_matrix": [9, 64], "from_pandas_adjac": [10, 65], "from_pandas_edgelist": [11, 66], "has_isolated_vertic": 12, "is_bipartit": 13, "is_direct": 14, "is_multigraph": 15, "is_multipartit": 16, "is_renumb": 17, "is_weight": 18, "lookup_internal_vertex_id": 19, "to_direct": 20, "to_undirect": 21, "unrenumb": [22, 107], "multigraph": 23, "analyzeclustering_edge_cut": 24, "analyzeclustering_modular": 25, "analyzeclustering_ratio_cut": 26, "batched_ego_graph": 27, "betweenness_centr": 28, "bf": [29, 51, 144], "bfs_edg": 30, "central": [31, 34, 35, 153], "eigenvector_centr": [31, 34, 145], "connected_compon": 32, "core_numb": 33, "dask": [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 160], "katz_centr": [35, 76, 147], "common": 36, "read_util": 36, "get_chunks": 36, "comm": [37, 38, 39, 40, 41, 42, 43, 44, 45, 46], "destroi": 37, "get_2d_partit": 38, "get_comm": 39, "get_default_handl": 40, "get_handl": 41, "get_session_id": 42, "get_worker_id": 43, "get_work": 44, "initi": 45, "is_initi": 46, "commun": [47, 154], "louvain": [47, 79, 154], "compon": [48, 155], "connect": [48, 155], "weakly_connected_compon": [48, 143, 152], "link_analysi": [49, 50], "hit": [49, 68, 146, 164], "pagerank": [50, 84, 149, 164], "travers": [51, 52, 169], "sssp": [52, 93, 150], "degree_centr": 53, "dense_hungarian": 54, "ecg": [55, 154], "edge_betweenness_centr": 56, "ego_graph": 57, "filter_unreach": 58, "force_atlas2": 59, "from_adjlist": 60, "from_edgelist": 62, "gener": [67, 158], "rmat": [67, 158], "hungarian": [69, 163], "hypergraph": 70, "jaccard": [71, 165], "jaccard_coeffici": 72, "jaccard_w": 73, "k_core": 74, "k_truss": 75, "ktruss_subgraph": 77, "leiden": [78, 154], "node2vec": [80, 148, 167], "overlap": [81, 165], "overlap_coeffici": 82, "overlap_w": 83, "random_walk": 85, "shortest_path": 86, "shortest_path_length": 87, "sorensen": [88, 165], "sorensen_coeffici": 89, "sorensen_w": 90, "spectralbalancedcutclust": 91, "spectralmodularitymaximizationclust": 92, "strongly_connected_compon": [94, 151], "structur": [95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "numbermap": [95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 168], "multigpu": 96, "singlegpu": 97, "compute_v": 99, "compute_vals_typ": 100, "from_internal_vertex_id": 101, "generate_unused_column_nam": 102, "renumb": 103, "renumber_and_seg": 104, "set_renumbered_col_nam": 105, "to_internal_vertex_id": 106, "vertex_column_s": [108, 126], "graph_implement": [109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "simplegraphimpl": [109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "degre": [109, 110, 153], "delete_adj_list": 111, "delete_edge_list": 112, "edg": 113, "enable_batch": 114, "get_two_hop_neighbor": 115, "has_edg": 116, "has_nod": 117, "has_self_loop": 118, "in_degre": 119, "neighbor": 120, "node": 121, "number_of_edg": 122, "number_of_nod": 123, "number_of_vertic": 124, "out_degre": 125, "view_adj_list": 127, "view_edge_list": 128, "view_transposed_adj_list": 129, "shuffl": 130, "subgraph": [131, 154], "symmetr": [132, 168], "symmetrize_ddf": 133, "symmetrize_df": 134, "to_numpy_arrai": 135, "to_numpy_matrix": 136, "to_pandas_adjac": 137, "to_pandas_edgelist": 138, "tree": [139, 140, 170], "minimum_spanning_tre": [139, 140], "maximum_spanning_tre": 139, "triangle_count": 141, "uniform_neighbor_sampl": 142, "pylibcugraph": [144, 145, 146, 147, 148, 149, 150, 151, 152, 166], "between": 153, "katz": 153, "mg": [153, 154, 155, 160, 164, 169], "eigenvector": 153, "egonet": 154, "ensembl": 154, "cluster": 154, "k": [154, 156], "truss": 154, "spectral": 154, "extract": 154, "triangl": 154, "count": 154, "core": 156, "number": 156, "multi": 157, "gpu": 157, "distribut": 157, "analyt": 157, "exampl": 157, "implement": 159, "helper": 160, "function": 160, "method": [160, 166], "api": 161, "refer": [161, 173], "document": [161, 176], "layout": 162, "forc": 162, "atla": 162, "2": 162, "linear": 163, "assign": 163, "link": [164, 165], "analysi": 164, "predict": 165, "coeffici": 165, "sampl": 167, "random": 167, "walk": 167, "class": 168, "constructor": 168, "ad": 168, "data": [168, 173], "check": 168, "convers": 168, "from": 168, "other": [168, 171, 173], "format": 168, "breadth": 169, "first": 169, "search": 169, "singl": 169, "sourc": 169, "shortest": 169, "path": [169, 175], "minimum": 170, "span": 170, "maximum": 170, "blog": 171, "present": 171, "confer": 171, "2018": 171, "2019": 171, "2020": 171, "2021": 171, "2022": 171, "media": 171, "academ": 171, "paper": [171, 173], "introduct": 172, "vision": 172, "terminologi": 172, "roadmap": 172, "architectur": 173, "algorithm": [173, 175], "set": 173, "basic": 174, "networkx": 175, "compat": 175, "transit": 175, "last": 175, "updat": 175, "easi": 175, "us": 175, "object": 175, "acceler": 175, "differ": 175, "exactli": 175, "match": 175, "do": 175, "copi": 175, "over": 175, "addit": 175, "attribut": 175, "where": 175, "all": 175, "argument": 175, "ar": 175, "support": 175, "result": 175, "build": 175, "welcom": 176, "": 176, "content": 176, "indic": 176, "tabl": 176}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"cugraph.BiPartiteGraph": [[0, "cugraph-bipartitegraph"]], "cugraph.Graph": [[1, "cugraph-graph"]], "cugraph.Graph.add_internal_vertex_id": [[2, "cugraph-graph-add-internal-vertex-id"]], "cugraph.Graph.add_nodes_from": [[3, "cugraph-graph-add-nodes-from"]], "cugraph.Graph.clear": [[4, "cugraph-graph-clear"]], "cugraph.Graph.from_cudf_adjlist": [[5, "cugraph-graph-from-cudf-adjlist"]], "cugraph.Graph.from_cudf_edgelist": [[6, "cugraph-graph-from-cudf-edgelist"]], "cugraph.Graph.from_dask_cudf_edgelist": [[7, "cugraph-graph-from-dask-cudf-edgelist"]], "cugraph.Graph.from_numpy_array": [[8, "cugraph-graph-from-numpy-array"]], "cugraph.Graph.from_numpy_matrix": [[9, "cugraph-graph-from-numpy-matrix"]], "cugraph.Graph.from_pandas_adjacency": [[10, "cugraph-graph-from-pandas-adjacency"]], "cugraph.Graph.from_pandas_edgelist": [[11, "cugraph-graph-from-pandas-edgelist"]], "cugraph.Graph.has_isolated_vertices": [[12, "cugraph-graph-has-isolated-vertices"]], "cugraph.Graph.is_bipartite": [[13, "cugraph-graph-is-bipartite"]], "cugraph.Graph.is_directed": [[14, "cugraph-graph-is-directed"]], "cugraph.Graph.is_multigraph": [[15, "cugraph-graph-is-multigraph"]], "cugraph.Graph.is_multipartite": [[16, "cugraph-graph-is-multipartite"]], "cugraph.Graph.is_renumbered": [[17, "cugraph-graph-is-renumbered"]], "cugraph.Graph.is_weighted": [[18, "cugraph-graph-is-weighted"]], "cugraph.Graph.lookup_internal_vertex_id": [[19, "cugraph-graph-lookup-internal-vertex-id"]], "cugraph.Graph.to_directed": [[20, "cugraph-graph-to-directed"]], "cugraph.Graph.to_undirected": [[21, "cugraph-graph-to-undirected"]], "cugraph.Graph.unrenumber": [[22, "cugraph-graph-unrenumber"]], "cugraph.MultiGraph": [[23, "cugraph-multigraph"]], "cugraph.analyzeClustering_edge_cut": [[24, "cugraph-analyzeclustering-edge-cut"]], "cugraph.analyzeClustering_modularity": [[25, "cugraph-analyzeclustering-modularity"]], "cugraph.analyzeClustering_ratio_cut": [[26, "cugraph-analyzeclustering-ratio-cut"]], "cugraph.batched_ego_graphs": [[27, "cugraph-batched-ego-graphs"]], "cugraph.betweenness_centrality": [[28, "cugraph-betweenness-centrality"]], "cugraph.bfs": [[29, "cugraph-bfs"]], "cugraph.bfs_edges": [[30, "cugraph-bfs-edges"]], "cugraph.centrality.eigenvector_centrality": [[31, "cugraph-centrality-eigenvector-centrality"]], "cugraph.connected_components": [[32, "cugraph-connected-components"]], "cugraph.core_number": [[33, "cugraph-core-number"]], "cugraph.dask.centrality.eigenvector_centrality.eigenvector_centrality": [[34, "cugraph-dask-centrality-eigenvector-centrality-eigenvector-centrality"]], "cugraph.dask.centrality.katz_centrality.katz_centrality": [[35, "cugraph-dask-centrality-katz-centrality-katz-centrality"]], "cugraph.dask.common.read_utils.get_chunksize": [[36, "cugraph-dask-common-read-utils-get-chunksize"]], "cugraph.dask.comms.comms.destroy": [[37, "cugraph-dask-comms-comms-destroy"]], "cugraph.dask.comms.comms.get_2D_partition": [[38, "cugraph-dask-comms-comms-get-2d-partition"]], "cugraph.dask.comms.comms.get_comms": [[39, "cugraph-dask-comms-comms-get-comms"]], "cugraph.dask.comms.comms.get_default_handle": [[40, "cugraph-dask-comms-comms-get-default-handle"]], "cugraph.dask.comms.comms.get_handle": [[41, "cugraph-dask-comms-comms-get-handle"]], "cugraph.dask.comms.comms.get_session_id": [[42, "cugraph-dask-comms-comms-get-session-id"]], "cugraph.dask.comms.comms.get_worker_id": [[43, "cugraph-dask-comms-comms-get-worker-id"]], "cugraph.dask.comms.comms.get_workers": [[44, "cugraph-dask-comms-comms-get-workers"]], "cugraph.dask.comms.comms.initialize": [[45, "cugraph-dask-comms-comms-initialize"]], "cugraph.dask.comms.comms.is_initialized": [[46, "cugraph-dask-comms-comms-is-initialized"]], "cugraph.dask.community.louvain.louvain": [[47, "cugraph-dask-community-louvain-louvain"]], "cugraph.dask.components.connectivity.weakly_connected_components": [[48, "cugraph-dask-components-connectivity-weakly-connected-components"]], "cugraph.dask.link_analysis.hits.hits": [[49, "cugraph-dask-link-analysis-hits-hits"]], "cugraph.dask.link_analysis.pagerank.pagerank": [[50, "cugraph-dask-link-analysis-pagerank-pagerank"]], "cugraph.dask.traversal.bfs.bfs": [[51, "cugraph-dask-traversal-bfs-bfs"]], "cugraph.dask.traversal.sssp.sssp": [[52, "cugraph-dask-traversal-sssp-sssp"]], "cugraph.degree_centrality": [[53, "cugraph-degree-centrality"]], "cugraph.dense_hungarian": [[54, "cugraph-dense-hungarian"]], "cugraph.ecg": [[55, "cugraph-ecg"]], "cugraph.edge_betweenness_centrality": [[56, "cugraph-edge-betweenness-centrality"]], "cugraph.ego_graph": [[57, "cugraph-ego-graph"]], "cugraph.filter_unreachable": [[58, "cugraph-filter-unreachable"]], "cugraph.force_atlas2": [[59, "cugraph-force-atlas2"]], "cugraph.from_adjlist": [[60, "cugraph-from-adjlist"]], "cugraph.from_cudf_edgelist": [[61, "cugraph-from-cudf-edgelist"]], "cugraph.from_edgelist": [[62, "cugraph-from-edgelist"]], "cugraph.from_numpy_array": [[63, "cugraph-from-numpy-array"]], "cugraph.from_numpy_matrix": [[64, "cugraph-from-numpy-matrix"]], "cugraph.from_pandas_adjacency": [[65, "cugraph-from-pandas-adjacency"]], "cugraph.from_pandas_edgelist": [[66, "cugraph-from-pandas-edgelist"]], "cugraph.generators.rmat": [[67, "cugraph-generators-rmat"]], "cugraph.hits": [[68, "cugraph-hits"]], "cugraph.hungarian": [[69, "cugraph-hungarian"]], "cugraph.hypergraph": [[70, "cugraph-hypergraph"]], "cugraph.jaccard": [[71, "cugraph-jaccard"]], "cugraph.jaccard_coefficient": [[72, "cugraph-jaccard-coefficient"]], "cugraph.jaccard_w": [[73, "cugraph-jaccard-w"]], "cugraph.k_core": [[74, "cugraph-k-core"]], "cugraph.k_truss": [[75, "cugraph-k-truss"]], "cugraph.katz_centrality": [[76, "cugraph-katz-centrality"]], "cugraph.ktruss_subgraph": [[77, "cugraph-ktruss-subgraph"]], "cugraph.leiden": [[78, "cugraph-leiden"]], "cugraph.louvain": [[79, "cugraph-louvain"]], "cugraph.node2vec": [[80, "cugraph-node2vec"]], "cugraph.overlap": [[81, "cugraph-overlap"]], "cugraph.overlap_coefficient": [[82, "cugraph-overlap-coefficient"]], "cugraph.overlap_w": [[83, "cugraph-overlap-w"]], "cugraph.pagerank": [[84, "cugraph-pagerank"]], "cugraph.random_walks": [[85, "cugraph-random-walks"]], "cugraph.shortest_path": [[86, "cugraph-shortest-path"]], "cugraph.shortest_path_length": [[87, "cugraph-shortest-path-length"]], "cugraph.sorensen": [[88, "cugraph-sorensen"]], "cugraph.sorensen_coefficient": [[89, "cugraph-sorensen-coefficient"]], "cugraph.sorensen_w": [[90, "cugraph-sorensen-w"]], "cugraph.spectralBalancedCutClustering": [[91, "cugraph-spectralbalancedcutclustering"]], "cugraph.spectralModularityMaximizationClustering": [[92, "cugraph-spectralmodularitymaximizationclustering"]], "cugraph.sssp": [[93, "cugraph-sssp"]], "cugraph.strongly_connected_components": [[94, "cugraph-strongly-connected-components"]], "cugraph.structure.NumberMap": [[95, "cugraph-structure-numbermap"]], "cugraph.structure.NumberMap.MultiGPU": [[96, "cugraph-structure-numbermap-multigpu"]], "cugraph.structure.NumberMap.SingleGPU": [[97, "cugraph-structure-numbermap-singlegpu"]], "cugraph.structure.NumberMap.add_internal_vertex_id": [[98, "cugraph-structure-numbermap-add-internal-vertex-id"]], "cugraph.structure.NumberMap.compute_vals": [[99, "cugraph-structure-numbermap-compute-vals"]], "cugraph.structure.NumberMap.compute_vals_types": [[100, "cugraph-structure-numbermap-compute-vals-types"]], "cugraph.structure.NumberMap.from_internal_vertex_id": [[101, "cugraph-structure-numbermap-from-internal-vertex-id"]], "cugraph.structure.NumberMap.generate_unused_column_name": [[102, "cugraph-structure-numbermap-generate-unused-column-name"]], "cugraph.structure.NumberMap.renumber": [[103, "cugraph-structure-numbermap-renumber"]], "cugraph.structure.NumberMap.renumber_and_segment": [[104, "cugraph-structure-numbermap-renumber-and-segment"]], "cugraph.structure.NumberMap.set_renumbered_col_names": [[105, "cugraph-structure-numbermap-set-renumbered-col-names"]], "cugraph.structure.NumberMap.to_internal_vertex_id": [[106, "cugraph-structure-numbermap-to-internal-vertex-id"]], "cugraph.structure.NumberMap.unrenumber": [[107, "cugraph-structure-numbermap-unrenumber"]], "cugraph.structure.NumberMap.vertex_column_size": [[108, "cugraph-structure-numbermap-vertex-column-size"]], "cugraph.structure.graph_implementation.simpleGraphImpl.degree": [[109, "cugraph-structure-graph-implementation-simplegraphimpl-degree"]], "cugraph.structure.graph_implementation.simpleGraphImpl.degrees": [[110, "cugraph-structure-graph-implementation-simplegraphimpl-degrees"]], "cugraph.structure.graph_implementation.simpleGraphImpl.delete_adj_list": [[111, "cugraph-structure-graph-implementation-simplegraphimpl-delete-adj-list"]], "cugraph.structure.graph_implementation.simpleGraphImpl.delete_edge_list": [[112, "cugraph-structure-graph-implementation-simplegraphimpl-delete-edge-list"]], "cugraph.structure.graph_implementation.simpleGraphImpl.edges": [[113, "cugraph-structure-graph-implementation-simplegraphimpl-edges"]], "cugraph.structure.graph_implementation.simpleGraphImpl.enable_batch": [[114, "cugraph-structure-graph-implementation-simplegraphimpl-enable-batch"]], "cugraph.structure.graph_implementation.simpleGraphImpl.get_two_hop_neighbors": [[115, "cugraph-structure-graph-implementation-simplegraphimpl-get-two-hop-neighbors"]], "cugraph.structure.graph_implementation.simpleGraphImpl.has_edge": [[116, "cugraph-structure-graph-implementation-simplegraphimpl-has-edge"]], "cugraph.structure.graph_implementation.simpleGraphImpl.has_node": [[117, "cugraph-structure-graph-implementation-simplegraphimpl-has-node"]], "cugraph.structure.graph_implementation.simpleGraphImpl.has_self_loop": [[118, "cugraph-structure-graph-implementation-simplegraphimpl-has-self-loop"]], "cugraph.structure.graph_implementation.simpleGraphImpl.in_degree": [[119, "cugraph-structure-graph-implementation-simplegraphimpl-in-degree"]], "cugraph.structure.graph_implementation.simpleGraphImpl.neighbors": [[120, "cugraph-structure-graph-implementation-simplegraphimpl-neighbors"]], "cugraph.structure.graph_implementation.simpleGraphImpl.nodes": [[121, "cugraph-structure-graph-implementation-simplegraphimpl-nodes"]], "cugraph.structure.graph_implementation.simpleGraphImpl.number_of_edges": [[122, "cugraph-structure-graph-implementation-simplegraphimpl-number-of-edges"]], "cugraph.structure.graph_implementation.simpleGraphImpl.number_of_nodes": [[123, "cugraph-structure-graph-implementation-simplegraphimpl-number-of-nodes"]], "cugraph.structure.graph_implementation.simpleGraphImpl.number_of_vertices": [[124, "cugraph-structure-graph-implementation-simplegraphimpl-number-of-vertices"]], "cugraph.structure.graph_implementation.simpleGraphImpl.out_degree": [[125, "cugraph-structure-graph-implementation-simplegraphimpl-out-degree"]], "cugraph.structure.graph_implementation.simpleGraphImpl.vertex_column_size": [[126, "cugraph-structure-graph-implementation-simplegraphimpl-vertex-column-size"]], "cugraph.structure.graph_implementation.simpleGraphImpl.view_adj_list": [[127, "cugraph-structure-graph-implementation-simplegraphimpl-view-adj-list"]], "cugraph.structure.graph_implementation.simpleGraphImpl.view_edge_list": [[128, "cugraph-structure-graph-implementation-simplegraphimpl-view-edge-list"]], "cugraph.structure.graph_implementation.simpleGraphImpl.view_transposed_adj_list": [[129, "cugraph-structure-graph-implementation-simplegraphimpl-view-transposed-adj-list"]], "cugraph.structure.shuffle": [[130, "cugraph-structure-shuffle"]], "cugraph.subgraph": [[131, "cugraph-subgraph"]], "cugraph.symmetrize": [[132, "cugraph-symmetrize"]], "cugraph.symmetrize_ddf": [[133, "cugraph-symmetrize-ddf"]], "cugraph.symmetrize_df": [[134, "cugraph-symmetrize-df"]], "cugraph.to_numpy_array": [[135, "cugraph-to-numpy-array"]], "cugraph.to_numpy_matrix": [[136, "cugraph-to-numpy-matrix"]], "cugraph.to_pandas_adjacency": [[137, "cugraph-to-pandas-adjacency"]], "cugraph.to_pandas_edgelist": [[138, "cugraph-to-pandas-edgelist"]], "cugraph.tree.minimum_spanning_tree.maximum_spanning_tree": [[139, "cugraph-tree-minimum-spanning-tree-maximum-spanning-tree"]], "cugraph.tree.minimum_spanning_tree.minimum_spanning_tree": [[140, "cugraph-tree-minimum-spanning-tree-minimum-spanning-tree"]], "cugraph.triangle_count": [[141, "cugraph-triangle-count"]], "cugraph.uniform_neighbor_sample": [[142, "cugraph-uniform-neighbor-sample"]], "cugraph.weakly_connected_components": [[143, "cugraph-weakly-connected-components"]], "pylibcugraph.bfs": [[144, "pylibcugraph-bfs"]], "pylibcugraph.eigenvector_centrality": [[145, "pylibcugraph-eigenvector-centrality"]], "pylibcugraph.hits": [[146, "pylibcugraph-hits"]], "pylibcugraph.katz_centrality": [[147, "pylibcugraph-katz-centrality"]], "pylibcugraph.node2vec": [[148, "pylibcugraph-node2vec"]], "pylibcugraph.pagerank": [[149, "pylibcugraph-pagerank"]], "pylibcugraph.sssp": [[150, "pylibcugraph-sssp"]], "pylibcugraph.strongly_connected_components": [[151, "pylibcugraph-strongly-connected-components"]], "pylibcugraph.weakly_connected_components": [[152, "pylibcugraph-weakly-connected-components"]], "Centrality": [[153, "centrality"]], "Betweenness Centrality": [[153, "betweenness-centrality"]], "Katz Centrality": [[153, "katz-centrality"]], "Katz Centrality (MG)": [[153, "katz-centrality-mg"]], "Degree Centrality": [[153, "degree-centrality"]], "Eigenvector Centrality": [[153, "eigenvector-centrality"]], "Eigenvector Centrality (MG)": [[153, "eigenvector-centrality-mg"]], "Community": [[154, "community"]], "EgoNet": [[154, "egonet"]], "Ensemble clustering for graphs (ECG)": [[154, "ensemble-clustering-for-graphs-ecg"]], "K-Truss": [[154, "k-truss"]], "Leiden": [[154, "leiden"]], "Louvain": [[154, "louvain"]], "Louvain (MG)": [[154, "louvain-mg"]], "Spectral Clustering": [[154, "spectral-clustering"]], "Subgraph Extraction": [[154, "subgraph-extraction"]], "Triangle Counting": [[154, "triangle-counting"]], "Components": [[155, "components"]], "Connected Components": [[155, "connected-components"]], "Connected Components (MG)": [[155, "connected-components-mg"]], "Cores": [[156, "cores"]], "Core Number": [[156, "core-number"]], "K-Core": [[156, "k-core"]], "Multi-GPU with cuGraph": [[157, "multi-gpu-with-cugraph"]], "Distributed graph analytics": [[157, "distributed-graph-analytics"]], "Example": [[157, "example"]], "Generator": [[158, "generator"]], "RMAT": [[158, "rmat"]], "Graph Implementation": [[159, "graph-implementation"], [159, "id1"]], "DASK MG Helper functions": [[160, "dask-mg-helper-functions"]], "Methods": [[160, "methods"], [166, "methods"]], "API reference": [[161, "api-reference"]], "API Documentation": [[161, null]], "Layout": [[162, "layout"]], "Force Atlas 2": [[162, "force-atlas-2"]], "Linear Assignment": [[163, "linear-assignment"]], "Hungarian": [[163, "hungarian"]], "Link Analysis": [[164, "link-analysis"]], "HITS": [[164, "hits"]], "HITS (MG)": [[164, "hits-mg"]], "Pagerank": [[164, "pagerank"]], "Pagerank (MG)": [[164, "pagerank-mg"]], "Link Prediction": [[165, "link-prediction"]], "Jaccard Coefficient": [[165, "jaccard-coefficient"]], "Overlap Coefficient": [[165, "overlap-coefficient"]], "Sorensen Coefficient": [[165, "sorensen-coefficient"]], "pylibcugraph": [[166, "pylibcugraph"]], "Sampling": [[167, "sampling"]], "Random Walks": [[167, "random-walks"]], "Node2Vec": [[167, "node2vec"]], "Graph Classes": [[168, "graph-classes"]], "Constructors": [[168, "constructors"]], "Adding Data": [[168, "adding-data"]], "Checks": [[168, "checks"]], "Symmetrize": [[168, "symmetrize"]], "Conversion from Other Formats": [[168, "conversion-from-other-formats"]], "NumberMap": [[168, "numbermap"]], "Other": [[168, "other"]], "Traversal": [[169, "traversal"]], "Breadth-first-search": [[169, "breadth-first-search"]], "Breadth-first-search (MG)": [[169, "breadth-first-search-mg"]], "Single-source-shortest-path": [[169, "single-source-shortest-path"]], "Single-source-shortest-path (MG)": [[169, "single-source-shortest-path-mg"]], "Tree": [[170, "tree"]], "Minimum Spanning Tree": [[170, "minimum-spanning-tree"]], "Maximum Spanning Tree": [[170, "maximum-spanning-tree"]], "cuGraph BLOGS and Presentations": [[171, "cugraph-blogs-and-presentations"]], "BLOGS & Conferences": [[171, "blogs-conferences"]], "2018": [[171, "id1"]], "2019": [[171, "id2"]], "2020": [[171, "id3"]], "2021": [[171, "id4"]], "2022": [[171, "id5"]], "Media": [[171, "media"]], "Academic Papers": [[171, "academic-papers"]], "Other BLOGS": [[171, "other-blogs"]], "cuGraph Introduction": [[172, "cugraph-introduction"]], "Vision": [[172, "vision"]], "Terminology": [[172, "terminology"]], "Roadmap": [[172, "roadmap"]], "References": [[173, "references"]], "Architecture": [[173, "architecture"]], "Algorithms": [[173, "algorithms"]], "Other Papers": [[173, "other-papers"]], "Data Sets": [[173, "data-sets"]], "Basics": [[174, "basics"]], "NetworkX Compatibility and Transition": [[175, "networkx-compatibility-and-transition"]], "Last Update": [[175, "last-update"]], "Easy Path \u2013 Use NetworkX Graph Objects, Accelerated Algorithms": [[175, "easy-path-use-networkx-graph-objects-accelerated-algorithms"]], "Differences in Algorithms": [[175, "differences-in-algorithms"]], "Algorithms that exactly match": [[175, "algorithms-that-exactly-match"]], "Algorithms that do not copy over additional attributes": [[175, "algorithms-that-do-not-copy-over-additional-attributes"]], "Algorithms not in NetworkX": [[175, "algorithms-not-in-networkx"]], "Algorithm where not all arguments are supported": [[175, "algorithm-where-not-all-arguments-are-supported"]], "Algorithms where the results are different": [[175, "algorithms-where-the-results-are-different"]], "Graph Building": [[175, "graph-building"]], "Welcome to cugraph\u2019s documentation!": [[176, "welcome-to-cugraph-s-documentation"]], "Contents:": [[176, null]], "Indices and tables": [[176, "indices-and-tables"]]}, "indexentries": {"bipartitegraph (class in cugraph)": [[0, "cugraph.BiPartiteGraph"]], "__init__() (cugraph.bipartitegraph method)": [[0, "cugraph.BiPartiteGraph.__init__"]], "graph (class in cugraph)": [[1, "cugraph.Graph"]], "__init__() (cugraph.graph method)": [[1, "cugraph.Graph.__init__"]], "add_internal_vertex_id() (cugraph.graph method)": [[2, "cugraph.Graph.add_internal_vertex_id"]], "add_nodes_from() (cugraph.graph method)": [[3, "cugraph.Graph.add_nodes_from"]], "clear() (cugraph.graph method)": [[4, "cugraph.Graph.clear"]], "from_cudf_adjlist() (cugraph.graph method)": [[5, "cugraph.Graph.from_cudf_adjlist"]], "from_cudf_edgelist() (cugraph.graph method)": [[6, "cugraph.Graph.from_cudf_edgelist"]], "from_dask_cudf_edgelist() (cugraph.graph method)": [[7, "cugraph.Graph.from_dask_cudf_edgelist"]], "from_numpy_array() (cugraph.graph method)": [[8, "cugraph.Graph.from_numpy_array"]], "from_numpy_matrix() (cugraph.graph method)": [[9, "cugraph.Graph.from_numpy_matrix"]], "from_pandas_adjacency() (cugraph.graph method)": [[10, "cugraph.Graph.from_pandas_adjacency"]], "from_pandas_edgelist() (cugraph.graph method)": [[11, "cugraph.Graph.from_pandas_edgelist"]], "has_isolated_vertices() (cugraph.graph method)": [[12, "cugraph.Graph.has_isolated_vertices"]], "is_bipartite() (cugraph.graph method)": [[13, "cugraph.Graph.is_bipartite"]], "is_directed() (cugraph.graph method)": [[14, "cugraph.Graph.is_directed"]], "is_multigraph() (cugraph.graph method)": [[15, "cugraph.Graph.is_multigraph"]], "is_multipartite() (cugraph.graph method)": [[16, "cugraph.Graph.is_multipartite"]], "is_renumbered() (cugraph.graph method)": [[17, "cugraph.Graph.is_renumbered"]], "is_weighted() (cugraph.graph method)": [[18, "cugraph.Graph.is_weighted"]], "lookup_internal_vertex_id() (cugraph.graph method)": [[19, "cugraph.Graph.lookup_internal_vertex_id"]], "to_directed() (cugraph.graph method)": [[20, "cugraph.Graph.to_directed"]], "to_undirected() (cugraph.graph method)": [[21, "cugraph.Graph.to_undirected"]], "unrenumber() (cugraph.graph method)": [[22, "cugraph.Graph.unrenumber"]], "multigraph (class in cugraph)": [[23, "cugraph.MultiGraph"]], "__init__() (cugraph.multigraph method)": [[23, "cugraph.MultiGraph.__init__"]], "analyzeclustering_edge_cut() (in module cugraph)": [[24, "cugraph.analyzeClustering_edge_cut"]], "analyzeclustering_modularity() (in module cugraph)": [[25, "cugraph.analyzeClustering_modularity"]], "analyzeclustering_ratio_cut() (in module cugraph)": [[26, "cugraph.analyzeClustering_ratio_cut"]], "batched_ego_graphs() (in module cugraph)": [[27, "cugraph.batched_ego_graphs"]], "betweenness_centrality() (in module cugraph)": [[28, "cugraph.betweenness_centrality"]], "bfs() (in module cugraph)": [[29, "cugraph.bfs"]], "bfs_edges() (in module cugraph)": [[30, "cugraph.bfs_edges"]], "eigenvector_centrality() (in module cugraph.centrality)": [[31, "cugraph.centrality.eigenvector_centrality"]], "connected_components() (in module cugraph)": [[32, "cugraph.connected_components"]], "core_number() (in module cugraph)": [[33, "cugraph.core_number"]], "eigenvector_centrality() (in module cugraph.dask.centrality.eigenvector_centrality)": [[34, "cugraph.dask.centrality.eigenvector_centrality.eigenvector_centrality"]], "katz_centrality() (in module cugraph.dask.centrality.katz_centrality)": [[35, "cugraph.dask.centrality.katz_centrality.katz_centrality"]], "get_chunksize() (in module cugraph.dask.common.read_utils)": [[36, "cugraph.dask.common.read_utils.get_chunksize"]], "destroy() (in module cugraph.dask.comms.comms)": [[37, "cugraph.dask.comms.comms.destroy"]], "get_2d_partition() (in module cugraph.dask.comms.comms)": [[38, "cugraph.dask.comms.comms.get_2D_partition"]], "get_comms() (in module cugraph.dask.comms.comms)": [[39, "cugraph.dask.comms.comms.get_comms"]], "get_default_handle() (in module cugraph.dask.comms.comms)": [[40, "cugraph.dask.comms.comms.get_default_handle"]], "get_handle() (in module cugraph.dask.comms.comms)": [[41, "cugraph.dask.comms.comms.get_handle"]], "get_session_id() (in module cugraph.dask.comms.comms)": [[42, "cugraph.dask.comms.comms.get_session_id"]], "get_worker_id() (in module cugraph.dask.comms.comms)": [[43, "cugraph.dask.comms.comms.get_worker_id"]], "get_workers() (in module cugraph.dask.comms.comms)": [[44, "cugraph.dask.comms.comms.get_workers"]], "initialize() (in module cugraph.dask.comms.comms)": [[45, "cugraph.dask.comms.comms.initialize"]], "is_initialized() (in module cugraph.dask.comms.comms)": [[46, "cugraph.dask.comms.comms.is_initialized"]], "louvain() (in module cugraph.dask.community.louvain)": [[47, "cugraph.dask.community.louvain.louvain"]], "weakly_connected_components() (in module cugraph.dask.components.connectivity)": [[48, "cugraph.dask.components.connectivity.weakly_connected_components"]], "hits() (in module cugraph.dask.link_analysis.hits)": [[49, "cugraph.dask.link_analysis.hits.hits"]], "pagerank() (in module cugraph.dask.link_analysis.pagerank)": [[50, "cugraph.dask.link_analysis.pagerank.pagerank"]], "bfs() (in module cugraph.dask.traversal.bfs)": [[51, "cugraph.dask.traversal.bfs.bfs"]], "sssp() (in module cugraph.dask.traversal.sssp)": [[52, "cugraph.dask.traversal.sssp.sssp"]], "degree_centrality() (in module cugraph)": [[53, "cugraph.degree_centrality"]], "dense_hungarian() (in module cugraph)": [[54, "cugraph.dense_hungarian"]], "ecg() (in module cugraph)": [[55, "cugraph.ecg"]], "edge_betweenness_centrality() (in module cugraph)": [[56, "cugraph.edge_betweenness_centrality"]], "ego_graph() (in module cugraph)": [[57, "cugraph.ego_graph"]], "filter_unreachable() (in module cugraph)": [[58, "cugraph.filter_unreachable"]], "force_atlas2() (in module cugraph)": [[59, "cugraph.force_atlas2"]], "from_adjlist() (in module cugraph)": [[60, "cugraph.from_adjlist"]], "from_cudf_edgelist() (in module cugraph)": [[61, "cugraph.from_cudf_edgelist"]], "from_edgelist() (in module cugraph)": [[62, "cugraph.from_edgelist"]], "from_numpy_array() (in module cugraph)": [[63, "cugraph.from_numpy_array"]], "from_numpy_matrix() (in module cugraph)": [[64, "cugraph.from_numpy_matrix"]], "from_pandas_adjacency() (in module cugraph)": [[65, "cugraph.from_pandas_adjacency"]], "from_pandas_edgelist() (in module cugraph)": [[66, "cugraph.from_pandas_edgelist"]], "rmat() (in module cugraph.generators)": [[67, "cugraph.generators.rmat"]], "hits() (in module cugraph)": [[68, "cugraph.hits"]], "hungarian() (in module cugraph)": [[69, "cugraph.hungarian"]], "hypergraph() (in module cugraph)": [[70, "cugraph.hypergraph"]], "jaccard() (in module cugraph)": [[71, "cugraph.jaccard"]], "jaccard_coefficient() (in module cugraph)": [[72, "cugraph.jaccard_coefficient"]], "jaccard_w() (in module cugraph)": [[73, "cugraph.jaccard_w"]], "k_core() (in module cugraph)": [[74, "cugraph.k_core"]], "k_truss() (in module cugraph)": [[75, "cugraph.k_truss"]], "katz_centrality() (in module cugraph)": [[76, "cugraph.katz_centrality"]], "ktruss_subgraph() (in module cugraph)": [[77, "cugraph.ktruss_subgraph"]], "leiden() (in module cugraph)": [[78, "cugraph.leiden"]], "louvain() (in module cugraph)": [[79, "cugraph.louvain"]], "node2vec() (in module cugraph)": [[80, "cugraph.node2vec"]], "overlap() (in module cugraph)": [[81, "cugraph.overlap"]], "overlap_coefficient() (in module cugraph)": [[82, "cugraph.overlap_coefficient"]], "overlap_w() (in module cugraph)": [[83, "cugraph.overlap_w"]], "pagerank() (in module cugraph)": [[84, "cugraph.pagerank"]], "random_walks() (in module cugraph)": [[85, "cugraph.random_walks"]], "shortest_path() (in module cugraph)": [[86, "cugraph.shortest_path"]], "shortest_path_length() (in module cugraph)": [[87, "cugraph.shortest_path_length"]], "sorensen() (in module cugraph)": [[88, "cugraph.sorensen"]], "sorensen_coefficient() (in module cugraph)": [[89, "cugraph.sorensen_coefficient"]], "sorensen_w() (in module cugraph)": [[90, "cugraph.sorensen_w"]], "spectralbalancedcutclustering() (in module cugraph)": [[91, "cugraph.spectralBalancedCutClustering"]], "spectralmodularitymaximizationclustering() (in module cugraph)": [[92, "cugraph.spectralModularityMaximizationClustering"]], "sssp() (in module cugraph)": [[93, "cugraph.sssp"]], "strongly_connected_components() (in module cugraph)": [[94, "cugraph.strongly_connected_components"]], "numbermap (class in cugraph.structure)": [[95, "cugraph.structure.NumberMap"]], "__init__() (cugraph.structure.numbermap method)": [[95, "cugraph.structure.NumberMap.__init__"]], "add_internal_vertex_id() (cugraph.structure.numbermap method)": [[98, "cugraph.structure.NumberMap.add_internal_vertex_id"]], "compute_vals() (cugraph.structure.numbermap static method)": [[99, "cugraph.structure.NumberMap.compute_vals"]], "compute_vals_types() (cugraph.structure.numbermap static method)": [[100, "cugraph.structure.NumberMap.compute_vals_types"]], "from_internal_vertex_id() (cugraph.structure.numbermap method)": [[101, "cugraph.structure.NumberMap.from_internal_vertex_id"]], "generate_unused_column_name() (cugraph.structure.numbermap static method)": [[102, "cugraph.structure.NumberMap.generate_unused_column_name"]], "renumber() (cugraph.structure.numbermap static method)": [[103, "cugraph.structure.NumberMap.renumber"]], "renumber_and_segment() (cugraph.structure.numbermap static method)": [[104, "cugraph.structure.NumberMap.renumber_and_segment"]], "set_renumbered_col_names() (cugraph.structure.numbermap method)": [[105, "cugraph.structure.NumberMap.set_renumbered_col_names"]], "to_internal_vertex_id() (cugraph.structure.numbermap method)": [[106, "cugraph.structure.NumberMap.to_internal_vertex_id"]], "unrenumber() (cugraph.structure.numbermap method)": [[107, "cugraph.structure.NumberMap.unrenumber"]], "vertex_column_size() (cugraph.structure.numbermap method)": [[108, "cugraph.structure.NumberMap.vertex_column_size"]], "degree() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[109, "cugraph.structure.graph_implementation.simpleGraphImpl.degree"]], "degrees() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[110, "cugraph.structure.graph_implementation.simpleGraphImpl.degrees"]], "delete_adj_list() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[111, "cugraph.structure.graph_implementation.simpleGraphImpl.delete_adj_list"]], "delete_edge_list() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[112, "cugraph.structure.graph_implementation.simpleGraphImpl.delete_edge_list"]], "edges() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[113, "cugraph.structure.graph_implementation.simpleGraphImpl.edges"]], "enable_batch() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[114, "cugraph.structure.graph_implementation.simpleGraphImpl.enable_batch"]], "get_two_hop_neighbors() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[115, "cugraph.structure.graph_implementation.simpleGraphImpl.get_two_hop_neighbors"]], "has_edge() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[116, "cugraph.structure.graph_implementation.simpleGraphImpl.has_edge"]], "has_node() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[117, "cugraph.structure.graph_implementation.simpleGraphImpl.has_node"]], "has_self_loop() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[118, "cugraph.structure.graph_implementation.simpleGraphImpl.has_self_loop"]], "in_degree() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[119, "cugraph.structure.graph_implementation.simpleGraphImpl.in_degree"]], "neighbors() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[120, "cugraph.structure.graph_implementation.simpleGraphImpl.neighbors"]], "nodes() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[121, "cugraph.structure.graph_implementation.simpleGraphImpl.nodes"]], "number_of_edges() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[122, "cugraph.structure.graph_implementation.simpleGraphImpl.number_of_edges"]], "number_of_nodes() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[123, "cugraph.structure.graph_implementation.simpleGraphImpl.number_of_nodes"]], "number_of_vertices() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[124, "cugraph.structure.graph_implementation.simpleGraphImpl.number_of_vertices"]], "out_degree() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[125, "cugraph.structure.graph_implementation.simpleGraphImpl.out_degree"]], "vertex_column_size() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[126, "cugraph.structure.graph_implementation.simpleGraphImpl.vertex_column_size"]], "view_adj_list() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[127, "cugraph.structure.graph_implementation.simpleGraphImpl.view_adj_list"]], "view_edge_list() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[128, "cugraph.structure.graph_implementation.simpleGraphImpl.view_edge_list"]], "view_transposed_adj_list() (cugraph.structure.graph_implementation.simplegraphimpl method)": [[129, "cugraph.structure.graph_implementation.simpleGraphImpl.view_transposed_adj_list"]], "shuffle() (in module cugraph.structure)": [[130, "cugraph.structure.shuffle"]], "subgraph() (in module cugraph)": [[131, "cugraph.subgraph"]], "symmetrize() (in module cugraph)": [[132, "cugraph.symmetrize"]], "symmetrize_ddf() (in module cugraph)": [[133, "cugraph.symmetrize_ddf"]], "symmetrize_df() (in module cugraph)": [[134, "cugraph.symmetrize_df"]], "to_numpy_array() (in module cugraph)": [[135, "cugraph.to_numpy_array"]], "to_numpy_matrix() (in module cugraph)": [[136, "cugraph.to_numpy_matrix"]], "to_pandas_adjacency() (in module cugraph)": [[137, "cugraph.to_pandas_adjacency"]], "to_pandas_edgelist() (in module cugraph)": [[138, "cugraph.to_pandas_edgelist"]], "maximum_spanning_tree() (in module cugraph.tree.minimum_spanning_tree)": [[139, "cugraph.tree.minimum_spanning_tree.maximum_spanning_tree"]], "minimum_spanning_tree() (in module cugraph.tree.minimum_spanning_tree)": [[140, "cugraph.tree.minimum_spanning_tree.minimum_spanning_tree"]], "triangle_count() (in module cugraph)": [[141, "cugraph.triangle_count"]], "uniform_neighbor_sample() (in module cugraph)": [[142, "cugraph.uniform_neighbor_sample"]], "weakly_connected_components() (in module cugraph)": [[143, "cugraph.weakly_connected_components"]], "bfs() (in module pylibcugraph)": [[144, "pylibcugraph.bfs"]], "eigenvector_centrality() (in module pylibcugraph)": [[145, "pylibcugraph.eigenvector_centrality"]], "hits() (in module pylibcugraph)": [[146, "pylibcugraph.hits"]], "katz_centrality() (in module pylibcugraph)": [[147, "pylibcugraph.katz_centrality"]], "node2vec() (in module pylibcugraph)": [[148, "pylibcugraph.node2vec"]], "pagerank() (in module pylibcugraph)": [[149, "pylibcugraph.pagerank"]], "sssp() (in module pylibcugraph)": [[150, "pylibcugraph.sssp"]], "strongly_connected_components() (in module pylibcugraph)": [[151, "pylibcugraph.strongly_connected_components"]], "weakly_connected_components() (in module pylibcugraph)": [[152, "pylibcugraph.weakly_connected_components"]]}})